// system_mm_interconnect_0.v

// This file was auto-generated from altera_mm_interconnect_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 17.0 595

`timescale 1 ps / 1 ps
module system_mm_interconnect_0 (
		input  wire        clk_0_clk_clk,                                      //                                    clk_0_clk.clk
		input  wire        lm96570_spi_in_2_reset_reset_bridge_in_reset_reset, // lm96570_spi_in_2_reset_reset_bridge_in_reset.reset
		input  wire        master_0_clk_reset_reset_bridge_in_reset_reset,     //     master_0_clk_reset_reset_bridge_in_reset.reset
		input  wire [31:0] master_0_master_address,                            //                              master_0_master.address
		output wire        master_0_master_waitrequest,                        //                                             .waitrequest
		input  wire [3:0]  master_0_master_byteenable,                         //                                             .byteenable
		input  wire        master_0_master_read,                               //                                             .read
		output wire [31:0] master_0_master_readdata,                           //                                             .readdata
		output wire        master_0_master_readdatavalid,                      //                                             .readdatavalid
		input  wire        master_0_master_write,                              //                                             .write
		input  wire [31:0] master_0_master_writedata,                          //                                             .writedata
		output wire [2:0]  ad9276_spi_spi_control_port_address,                //                  ad9276_spi_spi_control_port.address
		output wire        ad9276_spi_spi_control_port_write,                  //                                             .write
		output wire        ad9276_spi_spi_control_port_read,                   //                                             .read
		input  wire [31:0] ad9276_spi_spi_control_port_readdata,               //                                             .readdata
		output wire [31:0] ad9276_spi_spi_control_port_writedata,              //                                             .writedata
		output wire        ad9276_spi_spi_control_port_chipselect,             //                                             .chipselect
		output wire [1:0]  general_cnt_s1_address,                             //                               general_cnt_s1.address
		output wire        general_cnt_s1_write,                               //                                             .write
		input  wire [31:0] general_cnt_s1_readdata,                            //                                             .readdata
		output wire [31:0] general_cnt_s1_writedata,                           //                                             .writedata
		output wire        general_cnt_s1_chipselect,                          //                                             .chipselect
		output wire [1:0]  lm96570_spi_in_0_s1_address,                        //                          lm96570_spi_in_0_s1.address
		output wire        lm96570_spi_in_0_s1_write,                          //                                             .write
		input  wire [31:0] lm96570_spi_in_0_s1_readdata,                       //                                             .readdata
		output wire [31:0] lm96570_spi_in_0_s1_writedata,                      //                                             .writedata
		output wire        lm96570_spi_in_0_s1_chipselect,                     //                                             .chipselect
		output wire [1:0]  lm96570_spi_in_1_s1_address,                        //                          lm96570_spi_in_1_s1.address
		output wire        lm96570_spi_in_1_s1_write,                          //                                             .write
		input  wire [31:0] lm96570_spi_in_1_s1_readdata,                       //                                             .readdata
		output wire [31:0] lm96570_spi_in_1_s1_writedata,                      //                                             .writedata
		output wire        lm96570_spi_in_1_s1_chipselect,                     //                                             .chipselect
		output wire [1:0]  lm96570_spi_in_2_s1_address,                        //                          lm96570_spi_in_2_s1.address
		output wire        lm96570_spi_in_2_s1_write,                          //                                             .write
		input  wire [31:0] lm96570_spi_in_2_s1_readdata,                       //                                             .readdata
		output wire [31:0] lm96570_spi_in_2_s1_writedata,                      //                                             .writedata
		output wire        lm96570_spi_in_2_s1_chipselect,                     //                                             .chipselect
		output wire [1:0]  lm96570_spi_num_of_bits_s1_address,                 //                   lm96570_spi_num_of_bits_s1.address
		output wire        lm96570_spi_num_of_bits_s1_write,                   //                                             .write
		input  wire [31:0] lm96570_spi_num_of_bits_s1_readdata,                //                                             .readdata
		output wire [31:0] lm96570_spi_num_of_bits_s1_writedata,               //                                             .writedata
		output wire        lm96570_spi_num_of_bits_s1_chipselect,              //                                             .chipselect
		output wire [1:0]  lm96570_spi_out_0_s1_address,                       //                         lm96570_spi_out_0_s1.address
		input  wire [31:0] lm96570_spi_out_0_s1_readdata,                      //                                             .readdata
		output wire [1:0]  lm96570_spi_out_1_s1_address,                       //                         lm96570_spi_out_1_s1.address
		input  wire [31:0] lm96570_spi_out_1_s1_readdata,                      //                                             .readdata
		output wire [1:0]  lm96570_spi_out_2_s1_address,                       //                         lm96570_spi_out_2_s1.address
		input  wire [31:0] lm96570_spi_out_2_s1_readdata                       //                                             .readdata
	);

	wire          master_0_master_translator_avalon_universal_master_0_waitrequest;   // master_0_master_agent:av_waitrequest -> master_0_master_translator:uav_waitrequest
	wire   [31:0] master_0_master_translator_avalon_universal_master_0_readdata;      // master_0_master_agent:av_readdata -> master_0_master_translator:uav_readdata
	wire          master_0_master_translator_avalon_universal_master_0_debugaccess;   // master_0_master_translator:uav_debugaccess -> master_0_master_agent:av_debugaccess
	wire   [31:0] master_0_master_translator_avalon_universal_master_0_address;       // master_0_master_translator:uav_address -> master_0_master_agent:av_address
	wire          master_0_master_translator_avalon_universal_master_0_read;          // master_0_master_translator:uav_read -> master_0_master_agent:av_read
	wire    [3:0] master_0_master_translator_avalon_universal_master_0_byteenable;    // master_0_master_translator:uav_byteenable -> master_0_master_agent:av_byteenable
	wire          master_0_master_translator_avalon_universal_master_0_readdatavalid; // master_0_master_agent:av_readdatavalid -> master_0_master_translator:uav_readdatavalid
	wire          master_0_master_translator_avalon_universal_master_0_lock;          // master_0_master_translator:uav_lock -> master_0_master_agent:av_lock
	wire          master_0_master_translator_avalon_universal_master_0_write;         // master_0_master_translator:uav_write -> master_0_master_agent:av_write
	wire   [31:0] master_0_master_translator_avalon_universal_master_0_writedata;     // master_0_master_translator:uav_writedata -> master_0_master_agent:av_writedata
	wire    [2:0] master_0_master_translator_avalon_universal_master_0_burstcount;    // master_0_master_translator:uav_burstcount -> master_0_master_agent:av_burstcount
	wire   [31:0] lm96570_spi_in_2_s1_agent_m0_readdata;                              // lm96570_spi_in_2_s1_translator:uav_readdata -> lm96570_spi_in_2_s1_agent:m0_readdata
	wire          lm96570_spi_in_2_s1_agent_m0_waitrequest;                           // lm96570_spi_in_2_s1_translator:uav_waitrequest -> lm96570_spi_in_2_s1_agent:m0_waitrequest
	wire          lm96570_spi_in_2_s1_agent_m0_debugaccess;                           // lm96570_spi_in_2_s1_agent:m0_debugaccess -> lm96570_spi_in_2_s1_translator:uav_debugaccess
	wire   [31:0] lm96570_spi_in_2_s1_agent_m0_address;                               // lm96570_spi_in_2_s1_agent:m0_address -> lm96570_spi_in_2_s1_translator:uav_address
	wire    [3:0] lm96570_spi_in_2_s1_agent_m0_byteenable;                            // lm96570_spi_in_2_s1_agent:m0_byteenable -> lm96570_spi_in_2_s1_translator:uav_byteenable
	wire          lm96570_spi_in_2_s1_agent_m0_read;                                  // lm96570_spi_in_2_s1_agent:m0_read -> lm96570_spi_in_2_s1_translator:uav_read
	wire          lm96570_spi_in_2_s1_agent_m0_readdatavalid;                         // lm96570_spi_in_2_s1_translator:uav_readdatavalid -> lm96570_spi_in_2_s1_agent:m0_readdatavalid
	wire          lm96570_spi_in_2_s1_agent_m0_lock;                                  // lm96570_spi_in_2_s1_agent:m0_lock -> lm96570_spi_in_2_s1_translator:uav_lock
	wire   [31:0] lm96570_spi_in_2_s1_agent_m0_writedata;                             // lm96570_spi_in_2_s1_agent:m0_writedata -> lm96570_spi_in_2_s1_translator:uav_writedata
	wire          lm96570_spi_in_2_s1_agent_m0_write;                                 // lm96570_spi_in_2_s1_agent:m0_write -> lm96570_spi_in_2_s1_translator:uav_write
	wire    [2:0] lm96570_spi_in_2_s1_agent_m0_burstcount;                            // lm96570_spi_in_2_s1_agent:m0_burstcount -> lm96570_spi_in_2_s1_translator:uav_burstcount
	wire          lm96570_spi_in_2_s1_agent_rf_source_valid;                          // lm96570_spi_in_2_s1_agent:rf_source_valid -> lm96570_spi_in_2_s1_agent_rsp_fifo:in_valid
	wire  [108:0] lm96570_spi_in_2_s1_agent_rf_source_data;                           // lm96570_spi_in_2_s1_agent:rf_source_data -> lm96570_spi_in_2_s1_agent_rsp_fifo:in_data
	wire          lm96570_spi_in_2_s1_agent_rf_source_ready;                          // lm96570_spi_in_2_s1_agent_rsp_fifo:in_ready -> lm96570_spi_in_2_s1_agent:rf_source_ready
	wire          lm96570_spi_in_2_s1_agent_rf_source_startofpacket;                  // lm96570_spi_in_2_s1_agent:rf_source_startofpacket -> lm96570_spi_in_2_s1_agent_rsp_fifo:in_startofpacket
	wire          lm96570_spi_in_2_s1_agent_rf_source_endofpacket;                    // lm96570_spi_in_2_s1_agent:rf_source_endofpacket -> lm96570_spi_in_2_s1_agent_rsp_fifo:in_endofpacket
	wire          lm96570_spi_in_2_s1_agent_rsp_fifo_out_valid;                       // lm96570_spi_in_2_s1_agent_rsp_fifo:out_valid -> lm96570_spi_in_2_s1_agent:rf_sink_valid
	wire  [108:0] lm96570_spi_in_2_s1_agent_rsp_fifo_out_data;                        // lm96570_spi_in_2_s1_agent_rsp_fifo:out_data -> lm96570_spi_in_2_s1_agent:rf_sink_data
	wire          lm96570_spi_in_2_s1_agent_rsp_fifo_out_ready;                       // lm96570_spi_in_2_s1_agent:rf_sink_ready -> lm96570_spi_in_2_s1_agent_rsp_fifo:out_ready
	wire          lm96570_spi_in_2_s1_agent_rsp_fifo_out_startofpacket;               // lm96570_spi_in_2_s1_agent_rsp_fifo:out_startofpacket -> lm96570_spi_in_2_s1_agent:rf_sink_startofpacket
	wire          lm96570_spi_in_2_s1_agent_rsp_fifo_out_endofpacket;                 // lm96570_spi_in_2_s1_agent_rsp_fifo:out_endofpacket -> lm96570_spi_in_2_s1_agent:rf_sink_endofpacket
	wire          cmd_mux_src_valid;                                                  // cmd_mux:src_valid -> lm96570_spi_in_2_s1_agent:cp_valid
	wire  [107:0] cmd_mux_src_data;                                                   // cmd_mux:src_data -> lm96570_spi_in_2_s1_agent:cp_data
	wire          cmd_mux_src_ready;                                                  // lm96570_spi_in_2_s1_agent:cp_ready -> cmd_mux:src_ready
	wire    [8:0] cmd_mux_src_channel;                                                // cmd_mux:src_channel -> lm96570_spi_in_2_s1_agent:cp_channel
	wire          cmd_mux_src_startofpacket;                                          // cmd_mux:src_startofpacket -> lm96570_spi_in_2_s1_agent:cp_startofpacket
	wire          cmd_mux_src_endofpacket;                                            // cmd_mux:src_endofpacket -> lm96570_spi_in_2_s1_agent:cp_endofpacket
	wire   [31:0] lm96570_spi_in_0_s1_agent_m0_readdata;                              // lm96570_spi_in_0_s1_translator:uav_readdata -> lm96570_spi_in_0_s1_agent:m0_readdata
	wire          lm96570_spi_in_0_s1_agent_m0_waitrequest;                           // lm96570_spi_in_0_s1_translator:uav_waitrequest -> lm96570_spi_in_0_s1_agent:m0_waitrequest
	wire          lm96570_spi_in_0_s1_agent_m0_debugaccess;                           // lm96570_spi_in_0_s1_agent:m0_debugaccess -> lm96570_spi_in_0_s1_translator:uav_debugaccess
	wire   [31:0] lm96570_spi_in_0_s1_agent_m0_address;                               // lm96570_spi_in_0_s1_agent:m0_address -> lm96570_spi_in_0_s1_translator:uav_address
	wire    [3:0] lm96570_spi_in_0_s1_agent_m0_byteenable;                            // lm96570_spi_in_0_s1_agent:m0_byteenable -> lm96570_spi_in_0_s1_translator:uav_byteenable
	wire          lm96570_spi_in_0_s1_agent_m0_read;                                  // lm96570_spi_in_0_s1_agent:m0_read -> lm96570_spi_in_0_s1_translator:uav_read
	wire          lm96570_spi_in_0_s1_agent_m0_readdatavalid;                         // lm96570_spi_in_0_s1_translator:uav_readdatavalid -> lm96570_spi_in_0_s1_agent:m0_readdatavalid
	wire          lm96570_spi_in_0_s1_agent_m0_lock;                                  // lm96570_spi_in_0_s1_agent:m0_lock -> lm96570_spi_in_0_s1_translator:uav_lock
	wire   [31:0] lm96570_spi_in_0_s1_agent_m0_writedata;                             // lm96570_spi_in_0_s1_agent:m0_writedata -> lm96570_spi_in_0_s1_translator:uav_writedata
	wire          lm96570_spi_in_0_s1_agent_m0_write;                                 // lm96570_spi_in_0_s1_agent:m0_write -> lm96570_spi_in_0_s1_translator:uav_write
	wire    [2:0] lm96570_spi_in_0_s1_agent_m0_burstcount;                            // lm96570_spi_in_0_s1_agent:m0_burstcount -> lm96570_spi_in_0_s1_translator:uav_burstcount
	wire          lm96570_spi_in_0_s1_agent_rf_source_valid;                          // lm96570_spi_in_0_s1_agent:rf_source_valid -> lm96570_spi_in_0_s1_agent_rsp_fifo:in_valid
	wire  [108:0] lm96570_spi_in_0_s1_agent_rf_source_data;                           // lm96570_spi_in_0_s1_agent:rf_source_data -> lm96570_spi_in_0_s1_agent_rsp_fifo:in_data
	wire          lm96570_spi_in_0_s1_agent_rf_source_ready;                          // lm96570_spi_in_0_s1_agent_rsp_fifo:in_ready -> lm96570_spi_in_0_s1_agent:rf_source_ready
	wire          lm96570_spi_in_0_s1_agent_rf_source_startofpacket;                  // lm96570_spi_in_0_s1_agent:rf_source_startofpacket -> lm96570_spi_in_0_s1_agent_rsp_fifo:in_startofpacket
	wire          lm96570_spi_in_0_s1_agent_rf_source_endofpacket;                    // lm96570_spi_in_0_s1_agent:rf_source_endofpacket -> lm96570_spi_in_0_s1_agent_rsp_fifo:in_endofpacket
	wire          lm96570_spi_in_0_s1_agent_rsp_fifo_out_valid;                       // lm96570_spi_in_0_s1_agent_rsp_fifo:out_valid -> lm96570_spi_in_0_s1_agent:rf_sink_valid
	wire  [108:0] lm96570_spi_in_0_s1_agent_rsp_fifo_out_data;                        // lm96570_spi_in_0_s1_agent_rsp_fifo:out_data -> lm96570_spi_in_0_s1_agent:rf_sink_data
	wire          lm96570_spi_in_0_s1_agent_rsp_fifo_out_ready;                       // lm96570_spi_in_0_s1_agent:rf_sink_ready -> lm96570_spi_in_0_s1_agent_rsp_fifo:out_ready
	wire          lm96570_spi_in_0_s1_agent_rsp_fifo_out_startofpacket;               // lm96570_spi_in_0_s1_agent_rsp_fifo:out_startofpacket -> lm96570_spi_in_0_s1_agent:rf_sink_startofpacket
	wire          lm96570_spi_in_0_s1_agent_rsp_fifo_out_endofpacket;                 // lm96570_spi_in_0_s1_agent_rsp_fifo:out_endofpacket -> lm96570_spi_in_0_s1_agent:rf_sink_endofpacket
	wire          cmd_mux_001_src_valid;                                              // cmd_mux_001:src_valid -> lm96570_spi_in_0_s1_agent:cp_valid
	wire  [107:0] cmd_mux_001_src_data;                                               // cmd_mux_001:src_data -> lm96570_spi_in_0_s1_agent:cp_data
	wire          cmd_mux_001_src_ready;                                              // lm96570_spi_in_0_s1_agent:cp_ready -> cmd_mux_001:src_ready
	wire    [8:0] cmd_mux_001_src_channel;                                            // cmd_mux_001:src_channel -> lm96570_spi_in_0_s1_agent:cp_channel
	wire          cmd_mux_001_src_startofpacket;                                      // cmd_mux_001:src_startofpacket -> lm96570_spi_in_0_s1_agent:cp_startofpacket
	wire          cmd_mux_001_src_endofpacket;                                        // cmd_mux_001:src_endofpacket -> lm96570_spi_in_0_s1_agent:cp_endofpacket
	wire   [31:0] lm96570_spi_in_1_s1_agent_m0_readdata;                              // lm96570_spi_in_1_s1_translator:uav_readdata -> lm96570_spi_in_1_s1_agent:m0_readdata
	wire          lm96570_spi_in_1_s1_agent_m0_waitrequest;                           // lm96570_spi_in_1_s1_translator:uav_waitrequest -> lm96570_spi_in_1_s1_agent:m0_waitrequest
	wire          lm96570_spi_in_1_s1_agent_m0_debugaccess;                           // lm96570_spi_in_1_s1_agent:m0_debugaccess -> lm96570_spi_in_1_s1_translator:uav_debugaccess
	wire   [31:0] lm96570_spi_in_1_s1_agent_m0_address;                               // lm96570_spi_in_1_s1_agent:m0_address -> lm96570_spi_in_1_s1_translator:uav_address
	wire    [3:0] lm96570_spi_in_1_s1_agent_m0_byteenable;                            // lm96570_spi_in_1_s1_agent:m0_byteenable -> lm96570_spi_in_1_s1_translator:uav_byteenable
	wire          lm96570_spi_in_1_s1_agent_m0_read;                                  // lm96570_spi_in_1_s1_agent:m0_read -> lm96570_spi_in_1_s1_translator:uav_read
	wire          lm96570_spi_in_1_s1_agent_m0_readdatavalid;                         // lm96570_spi_in_1_s1_translator:uav_readdatavalid -> lm96570_spi_in_1_s1_agent:m0_readdatavalid
	wire          lm96570_spi_in_1_s1_agent_m0_lock;                                  // lm96570_spi_in_1_s1_agent:m0_lock -> lm96570_spi_in_1_s1_translator:uav_lock
	wire   [31:0] lm96570_spi_in_1_s1_agent_m0_writedata;                             // lm96570_spi_in_1_s1_agent:m0_writedata -> lm96570_spi_in_1_s1_translator:uav_writedata
	wire          lm96570_spi_in_1_s1_agent_m0_write;                                 // lm96570_spi_in_1_s1_agent:m0_write -> lm96570_spi_in_1_s1_translator:uav_write
	wire    [2:0] lm96570_spi_in_1_s1_agent_m0_burstcount;                            // lm96570_spi_in_1_s1_agent:m0_burstcount -> lm96570_spi_in_1_s1_translator:uav_burstcount
	wire          lm96570_spi_in_1_s1_agent_rf_source_valid;                          // lm96570_spi_in_1_s1_agent:rf_source_valid -> lm96570_spi_in_1_s1_agent_rsp_fifo:in_valid
	wire  [108:0] lm96570_spi_in_1_s1_agent_rf_source_data;                           // lm96570_spi_in_1_s1_agent:rf_source_data -> lm96570_spi_in_1_s1_agent_rsp_fifo:in_data
	wire          lm96570_spi_in_1_s1_agent_rf_source_ready;                          // lm96570_spi_in_1_s1_agent_rsp_fifo:in_ready -> lm96570_spi_in_1_s1_agent:rf_source_ready
	wire          lm96570_spi_in_1_s1_agent_rf_source_startofpacket;                  // lm96570_spi_in_1_s1_agent:rf_source_startofpacket -> lm96570_spi_in_1_s1_agent_rsp_fifo:in_startofpacket
	wire          lm96570_spi_in_1_s1_agent_rf_source_endofpacket;                    // lm96570_spi_in_1_s1_agent:rf_source_endofpacket -> lm96570_spi_in_1_s1_agent_rsp_fifo:in_endofpacket
	wire          lm96570_spi_in_1_s1_agent_rsp_fifo_out_valid;                       // lm96570_spi_in_1_s1_agent_rsp_fifo:out_valid -> lm96570_spi_in_1_s1_agent:rf_sink_valid
	wire  [108:0] lm96570_spi_in_1_s1_agent_rsp_fifo_out_data;                        // lm96570_spi_in_1_s1_agent_rsp_fifo:out_data -> lm96570_spi_in_1_s1_agent:rf_sink_data
	wire          lm96570_spi_in_1_s1_agent_rsp_fifo_out_ready;                       // lm96570_spi_in_1_s1_agent:rf_sink_ready -> lm96570_spi_in_1_s1_agent_rsp_fifo:out_ready
	wire          lm96570_spi_in_1_s1_agent_rsp_fifo_out_startofpacket;               // lm96570_spi_in_1_s1_agent_rsp_fifo:out_startofpacket -> lm96570_spi_in_1_s1_agent:rf_sink_startofpacket
	wire          lm96570_spi_in_1_s1_agent_rsp_fifo_out_endofpacket;                 // lm96570_spi_in_1_s1_agent_rsp_fifo:out_endofpacket -> lm96570_spi_in_1_s1_agent:rf_sink_endofpacket
	wire          cmd_mux_002_src_valid;                                              // cmd_mux_002:src_valid -> lm96570_spi_in_1_s1_agent:cp_valid
	wire  [107:0] cmd_mux_002_src_data;                                               // cmd_mux_002:src_data -> lm96570_spi_in_1_s1_agent:cp_data
	wire          cmd_mux_002_src_ready;                                              // lm96570_spi_in_1_s1_agent:cp_ready -> cmd_mux_002:src_ready
	wire    [8:0] cmd_mux_002_src_channel;                                            // cmd_mux_002:src_channel -> lm96570_spi_in_1_s1_agent:cp_channel
	wire          cmd_mux_002_src_startofpacket;                                      // cmd_mux_002:src_startofpacket -> lm96570_spi_in_1_s1_agent:cp_startofpacket
	wire          cmd_mux_002_src_endofpacket;                                        // cmd_mux_002:src_endofpacket -> lm96570_spi_in_1_s1_agent:cp_endofpacket
	wire   [31:0] lm96570_spi_out_2_s1_agent_m0_readdata;                             // lm96570_spi_out_2_s1_translator:uav_readdata -> lm96570_spi_out_2_s1_agent:m0_readdata
	wire          lm96570_spi_out_2_s1_agent_m0_waitrequest;                          // lm96570_spi_out_2_s1_translator:uav_waitrequest -> lm96570_spi_out_2_s1_agent:m0_waitrequest
	wire          lm96570_spi_out_2_s1_agent_m0_debugaccess;                          // lm96570_spi_out_2_s1_agent:m0_debugaccess -> lm96570_spi_out_2_s1_translator:uav_debugaccess
	wire   [31:0] lm96570_spi_out_2_s1_agent_m0_address;                              // lm96570_spi_out_2_s1_agent:m0_address -> lm96570_spi_out_2_s1_translator:uav_address
	wire    [3:0] lm96570_spi_out_2_s1_agent_m0_byteenable;                           // lm96570_spi_out_2_s1_agent:m0_byteenable -> lm96570_spi_out_2_s1_translator:uav_byteenable
	wire          lm96570_spi_out_2_s1_agent_m0_read;                                 // lm96570_spi_out_2_s1_agent:m0_read -> lm96570_spi_out_2_s1_translator:uav_read
	wire          lm96570_spi_out_2_s1_agent_m0_readdatavalid;                        // lm96570_spi_out_2_s1_translator:uav_readdatavalid -> lm96570_spi_out_2_s1_agent:m0_readdatavalid
	wire          lm96570_spi_out_2_s1_agent_m0_lock;                                 // lm96570_spi_out_2_s1_agent:m0_lock -> lm96570_spi_out_2_s1_translator:uav_lock
	wire   [31:0] lm96570_spi_out_2_s1_agent_m0_writedata;                            // lm96570_spi_out_2_s1_agent:m0_writedata -> lm96570_spi_out_2_s1_translator:uav_writedata
	wire          lm96570_spi_out_2_s1_agent_m0_write;                                // lm96570_spi_out_2_s1_agent:m0_write -> lm96570_spi_out_2_s1_translator:uav_write
	wire    [2:0] lm96570_spi_out_2_s1_agent_m0_burstcount;                           // lm96570_spi_out_2_s1_agent:m0_burstcount -> lm96570_spi_out_2_s1_translator:uav_burstcount
	wire          lm96570_spi_out_2_s1_agent_rf_source_valid;                         // lm96570_spi_out_2_s1_agent:rf_source_valid -> lm96570_spi_out_2_s1_agent_rsp_fifo:in_valid
	wire  [108:0] lm96570_spi_out_2_s1_agent_rf_source_data;                          // lm96570_spi_out_2_s1_agent:rf_source_data -> lm96570_spi_out_2_s1_agent_rsp_fifo:in_data
	wire          lm96570_spi_out_2_s1_agent_rf_source_ready;                         // lm96570_spi_out_2_s1_agent_rsp_fifo:in_ready -> lm96570_spi_out_2_s1_agent:rf_source_ready
	wire          lm96570_spi_out_2_s1_agent_rf_source_startofpacket;                 // lm96570_spi_out_2_s1_agent:rf_source_startofpacket -> lm96570_spi_out_2_s1_agent_rsp_fifo:in_startofpacket
	wire          lm96570_spi_out_2_s1_agent_rf_source_endofpacket;                   // lm96570_spi_out_2_s1_agent:rf_source_endofpacket -> lm96570_spi_out_2_s1_agent_rsp_fifo:in_endofpacket
	wire          lm96570_spi_out_2_s1_agent_rsp_fifo_out_valid;                      // lm96570_spi_out_2_s1_agent_rsp_fifo:out_valid -> lm96570_spi_out_2_s1_agent:rf_sink_valid
	wire  [108:0] lm96570_spi_out_2_s1_agent_rsp_fifo_out_data;                       // lm96570_spi_out_2_s1_agent_rsp_fifo:out_data -> lm96570_spi_out_2_s1_agent:rf_sink_data
	wire          lm96570_spi_out_2_s1_agent_rsp_fifo_out_ready;                      // lm96570_spi_out_2_s1_agent:rf_sink_ready -> lm96570_spi_out_2_s1_agent_rsp_fifo:out_ready
	wire          lm96570_spi_out_2_s1_agent_rsp_fifo_out_startofpacket;              // lm96570_spi_out_2_s1_agent_rsp_fifo:out_startofpacket -> lm96570_spi_out_2_s1_agent:rf_sink_startofpacket
	wire          lm96570_spi_out_2_s1_agent_rsp_fifo_out_endofpacket;                // lm96570_spi_out_2_s1_agent_rsp_fifo:out_endofpacket -> lm96570_spi_out_2_s1_agent:rf_sink_endofpacket
	wire          cmd_mux_003_src_valid;                                              // cmd_mux_003:src_valid -> lm96570_spi_out_2_s1_agent:cp_valid
	wire  [107:0] cmd_mux_003_src_data;                                               // cmd_mux_003:src_data -> lm96570_spi_out_2_s1_agent:cp_data
	wire          cmd_mux_003_src_ready;                                              // lm96570_spi_out_2_s1_agent:cp_ready -> cmd_mux_003:src_ready
	wire    [8:0] cmd_mux_003_src_channel;                                            // cmd_mux_003:src_channel -> lm96570_spi_out_2_s1_agent:cp_channel
	wire          cmd_mux_003_src_startofpacket;                                      // cmd_mux_003:src_startofpacket -> lm96570_spi_out_2_s1_agent:cp_startofpacket
	wire          cmd_mux_003_src_endofpacket;                                        // cmd_mux_003:src_endofpacket -> lm96570_spi_out_2_s1_agent:cp_endofpacket
	wire   [31:0] lm96570_spi_out_1_s1_agent_m0_readdata;                             // lm96570_spi_out_1_s1_translator:uav_readdata -> lm96570_spi_out_1_s1_agent:m0_readdata
	wire          lm96570_spi_out_1_s1_agent_m0_waitrequest;                          // lm96570_spi_out_1_s1_translator:uav_waitrequest -> lm96570_spi_out_1_s1_agent:m0_waitrequest
	wire          lm96570_spi_out_1_s1_agent_m0_debugaccess;                          // lm96570_spi_out_1_s1_agent:m0_debugaccess -> lm96570_spi_out_1_s1_translator:uav_debugaccess
	wire   [31:0] lm96570_spi_out_1_s1_agent_m0_address;                              // lm96570_spi_out_1_s1_agent:m0_address -> lm96570_spi_out_1_s1_translator:uav_address
	wire    [3:0] lm96570_spi_out_1_s1_agent_m0_byteenable;                           // lm96570_spi_out_1_s1_agent:m0_byteenable -> lm96570_spi_out_1_s1_translator:uav_byteenable
	wire          lm96570_spi_out_1_s1_agent_m0_read;                                 // lm96570_spi_out_1_s1_agent:m0_read -> lm96570_spi_out_1_s1_translator:uav_read
	wire          lm96570_spi_out_1_s1_agent_m0_readdatavalid;                        // lm96570_spi_out_1_s1_translator:uav_readdatavalid -> lm96570_spi_out_1_s1_agent:m0_readdatavalid
	wire          lm96570_spi_out_1_s1_agent_m0_lock;                                 // lm96570_spi_out_1_s1_agent:m0_lock -> lm96570_spi_out_1_s1_translator:uav_lock
	wire   [31:0] lm96570_spi_out_1_s1_agent_m0_writedata;                            // lm96570_spi_out_1_s1_agent:m0_writedata -> lm96570_spi_out_1_s1_translator:uav_writedata
	wire          lm96570_spi_out_1_s1_agent_m0_write;                                // lm96570_spi_out_1_s1_agent:m0_write -> lm96570_spi_out_1_s1_translator:uav_write
	wire    [2:0] lm96570_spi_out_1_s1_agent_m0_burstcount;                           // lm96570_spi_out_1_s1_agent:m0_burstcount -> lm96570_spi_out_1_s1_translator:uav_burstcount
	wire          lm96570_spi_out_1_s1_agent_rf_source_valid;                         // lm96570_spi_out_1_s1_agent:rf_source_valid -> lm96570_spi_out_1_s1_agent_rsp_fifo:in_valid
	wire  [108:0] lm96570_spi_out_1_s1_agent_rf_source_data;                          // lm96570_spi_out_1_s1_agent:rf_source_data -> lm96570_spi_out_1_s1_agent_rsp_fifo:in_data
	wire          lm96570_spi_out_1_s1_agent_rf_source_ready;                         // lm96570_spi_out_1_s1_agent_rsp_fifo:in_ready -> lm96570_spi_out_1_s1_agent:rf_source_ready
	wire          lm96570_spi_out_1_s1_agent_rf_source_startofpacket;                 // lm96570_spi_out_1_s1_agent:rf_source_startofpacket -> lm96570_spi_out_1_s1_agent_rsp_fifo:in_startofpacket
	wire          lm96570_spi_out_1_s1_agent_rf_source_endofpacket;                   // lm96570_spi_out_1_s1_agent:rf_source_endofpacket -> lm96570_spi_out_1_s1_agent_rsp_fifo:in_endofpacket
	wire          lm96570_spi_out_1_s1_agent_rsp_fifo_out_valid;                      // lm96570_spi_out_1_s1_agent_rsp_fifo:out_valid -> lm96570_spi_out_1_s1_agent:rf_sink_valid
	wire  [108:0] lm96570_spi_out_1_s1_agent_rsp_fifo_out_data;                       // lm96570_spi_out_1_s1_agent_rsp_fifo:out_data -> lm96570_spi_out_1_s1_agent:rf_sink_data
	wire          lm96570_spi_out_1_s1_agent_rsp_fifo_out_ready;                      // lm96570_spi_out_1_s1_agent:rf_sink_ready -> lm96570_spi_out_1_s1_agent_rsp_fifo:out_ready
	wire          lm96570_spi_out_1_s1_agent_rsp_fifo_out_startofpacket;              // lm96570_spi_out_1_s1_agent_rsp_fifo:out_startofpacket -> lm96570_spi_out_1_s1_agent:rf_sink_startofpacket
	wire          lm96570_spi_out_1_s1_agent_rsp_fifo_out_endofpacket;                // lm96570_spi_out_1_s1_agent_rsp_fifo:out_endofpacket -> lm96570_spi_out_1_s1_agent:rf_sink_endofpacket
	wire          cmd_mux_004_src_valid;                                              // cmd_mux_004:src_valid -> lm96570_spi_out_1_s1_agent:cp_valid
	wire  [107:0] cmd_mux_004_src_data;                                               // cmd_mux_004:src_data -> lm96570_spi_out_1_s1_agent:cp_data
	wire          cmd_mux_004_src_ready;                                              // lm96570_spi_out_1_s1_agent:cp_ready -> cmd_mux_004:src_ready
	wire    [8:0] cmd_mux_004_src_channel;                                            // cmd_mux_004:src_channel -> lm96570_spi_out_1_s1_agent:cp_channel
	wire          cmd_mux_004_src_startofpacket;                                      // cmd_mux_004:src_startofpacket -> lm96570_spi_out_1_s1_agent:cp_startofpacket
	wire          cmd_mux_004_src_endofpacket;                                        // cmd_mux_004:src_endofpacket -> lm96570_spi_out_1_s1_agent:cp_endofpacket
	wire   [31:0] lm96570_spi_out_0_s1_agent_m0_readdata;                             // lm96570_spi_out_0_s1_translator:uav_readdata -> lm96570_spi_out_0_s1_agent:m0_readdata
	wire          lm96570_spi_out_0_s1_agent_m0_waitrequest;                          // lm96570_spi_out_0_s1_translator:uav_waitrequest -> lm96570_spi_out_0_s1_agent:m0_waitrequest
	wire          lm96570_spi_out_0_s1_agent_m0_debugaccess;                          // lm96570_spi_out_0_s1_agent:m0_debugaccess -> lm96570_spi_out_0_s1_translator:uav_debugaccess
	wire   [31:0] lm96570_spi_out_0_s1_agent_m0_address;                              // lm96570_spi_out_0_s1_agent:m0_address -> lm96570_spi_out_0_s1_translator:uav_address
	wire    [3:0] lm96570_spi_out_0_s1_agent_m0_byteenable;                           // lm96570_spi_out_0_s1_agent:m0_byteenable -> lm96570_spi_out_0_s1_translator:uav_byteenable
	wire          lm96570_spi_out_0_s1_agent_m0_read;                                 // lm96570_spi_out_0_s1_agent:m0_read -> lm96570_spi_out_0_s1_translator:uav_read
	wire          lm96570_spi_out_0_s1_agent_m0_readdatavalid;                        // lm96570_spi_out_0_s1_translator:uav_readdatavalid -> lm96570_spi_out_0_s1_agent:m0_readdatavalid
	wire          lm96570_spi_out_0_s1_agent_m0_lock;                                 // lm96570_spi_out_0_s1_agent:m0_lock -> lm96570_spi_out_0_s1_translator:uav_lock
	wire   [31:0] lm96570_spi_out_0_s1_agent_m0_writedata;                            // lm96570_spi_out_0_s1_agent:m0_writedata -> lm96570_spi_out_0_s1_translator:uav_writedata
	wire          lm96570_spi_out_0_s1_agent_m0_write;                                // lm96570_spi_out_0_s1_agent:m0_write -> lm96570_spi_out_0_s1_translator:uav_write
	wire    [2:0] lm96570_spi_out_0_s1_agent_m0_burstcount;                           // lm96570_spi_out_0_s1_agent:m0_burstcount -> lm96570_spi_out_0_s1_translator:uav_burstcount
	wire          lm96570_spi_out_0_s1_agent_rf_source_valid;                         // lm96570_spi_out_0_s1_agent:rf_source_valid -> lm96570_spi_out_0_s1_agent_rsp_fifo:in_valid
	wire  [108:0] lm96570_spi_out_0_s1_agent_rf_source_data;                          // lm96570_spi_out_0_s1_agent:rf_source_data -> lm96570_spi_out_0_s1_agent_rsp_fifo:in_data
	wire          lm96570_spi_out_0_s1_agent_rf_source_ready;                         // lm96570_spi_out_0_s1_agent_rsp_fifo:in_ready -> lm96570_spi_out_0_s1_agent:rf_source_ready
	wire          lm96570_spi_out_0_s1_agent_rf_source_startofpacket;                 // lm96570_spi_out_0_s1_agent:rf_source_startofpacket -> lm96570_spi_out_0_s1_agent_rsp_fifo:in_startofpacket
	wire          lm96570_spi_out_0_s1_agent_rf_source_endofpacket;                   // lm96570_spi_out_0_s1_agent:rf_source_endofpacket -> lm96570_spi_out_0_s1_agent_rsp_fifo:in_endofpacket
	wire          lm96570_spi_out_0_s1_agent_rsp_fifo_out_valid;                      // lm96570_spi_out_0_s1_agent_rsp_fifo:out_valid -> lm96570_spi_out_0_s1_agent:rf_sink_valid
	wire  [108:0] lm96570_spi_out_0_s1_agent_rsp_fifo_out_data;                       // lm96570_spi_out_0_s1_agent_rsp_fifo:out_data -> lm96570_spi_out_0_s1_agent:rf_sink_data
	wire          lm96570_spi_out_0_s1_agent_rsp_fifo_out_ready;                      // lm96570_spi_out_0_s1_agent:rf_sink_ready -> lm96570_spi_out_0_s1_agent_rsp_fifo:out_ready
	wire          lm96570_spi_out_0_s1_agent_rsp_fifo_out_startofpacket;              // lm96570_spi_out_0_s1_agent_rsp_fifo:out_startofpacket -> lm96570_spi_out_0_s1_agent:rf_sink_startofpacket
	wire          lm96570_spi_out_0_s1_agent_rsp_fifo_out_endofpacket;                // lm96570_spi_out_0_s1_agent_rsp_fifo:out_endofpacket -> lm96570_spi_out_0_s1_agent:rf_sink_endofpacket
	wire          cmd_mux_005_src_valid;                                              // cmd_mux_005:src_valid -> lm96570_spi_out_0_s1_agent:cp_valid
	wire  [107:0] cmd_mux_005_src_data;                                               // cmd_mux_005:src_data -> lm96570_spi_out_0_s1_agent:cp_data
	wire          cmd_mux_005_src_ready;                                              // lm96570_spi_out_0_s1_agent:cp_ready -> cmd_mux_005:src_ready
	wire    [8:0] cmd_mux_005_src_channel;                                            // cmd_mux_005:src_channel -> lm96570_spi_out_0_s1_agent:cp_channel
	wire          cmd_mux_005_src_startofpacket;                                      // cmd_mux_005:src_startofpacket -> lm96570_spi_out_0_s1_agent:cp_startofpacket
	wire          cmd_mux_005_src_endofpacket;                                        // cmd_mux_005:src_endofpacket -> lm96570_spi_out_0_s1_agent:cp_endofpacket
	wire   [31:0] lm96570_spi_num_of_bits_s1_agent_m0_readdata;                       // lm96570_spi_num_of_bits_s1_translator:uav_readdata -> lm96570_spi_num_of_bits_s1_agent:m0_readdata
	wire          lm96570_spi_num_of_bits_s1_agent_m0_waitrequest;                    // lm96570_spi_num_of_bits_s1_translator:uav_waitrequest -> lm96570_spi_num_of_bits_s1_agent:m0_waitrequest
	wire          lm96570_spi_num_of_bits_s1_agent_m0_debugaccess;                    // lm96570_spi_num_of_bits_s1_agent:m0_debugaccess -> lm96570_spi_num_of_bits_s1_translator:uav_debugaccess
	wire   [31:0] lm96570_spi_num_of_bits_s1_agent_m0_address;                        // lm96570_spi_num_of_bits_s1_agent:m0_address -> lm96570_spi_num_of_bits_s1_translator:uav_address
	wire    [3:0] lm96570_spi_num_of_bits_s1_agent_m0_byteenable;                     // lm96570_spi_num_of_bits_s1_agent:m0_byteenable -> lm96570_spi_num_of_bits_s1_translator:uav_byteenable
	wire          lm96570_spi_num_of_bits_s1_agent_m0_read;                           // lm96570_spi_num_of_bits_s1_agent:m0_read -> lm96570_spi_num_of_bits_s1_translator:uav_read
	wire          lm96570_spi_num_of_bits_s1_agent_m0_readdatavalid;                  // lm96570_spi_num_of_bits_s1_translator:uav_readdatavalid -> lm96570_spi_num_of_bits_s1_agent:m0_readdatavalid
	wire          lm96570_spi_num_of_bits_s1_agent_m0_lock;                           // lm96570_spi_num_of_bits_s1_agent:m0_lock -> lm96570_spi_num_of_bits_s1_translator:uav_lock
	wire   [31:0] lm96570_spi_num_of_bits_s1_agent_m0_writedata;                      // lm96570_spi_num_of_bits_s1_agent:m0_writedata -> lm96570_spi_num_of_bits_s1_translator:uav_writedata
	wire          lm96570_spi_num_of_bits_s1_agent_m0_write;                          // lm96570_spi_num_of_bits_s1_agent:m0_write -> lm96570_spi_num_of_bits_s1_translator:uav_write
	wire    [2:0] lm96570_spi_num_of_bits_s1_agent_m0_burstcount;                     // lm96570_spi_num_of_bits_s1_agent:m0_burstcount -> lm96570_spi_num_of_bits_s1_translator:uav_burstcount
	wire          lm96570_spi_num_of_bits_s1_agent_rf_source_valid;                   // lm96570_spi_num_of_bits_s1_agent:rf_source_valid -> lm96570_spi_num_of_bits_s1_agent_rsp_fifo:in_valid
	wire  [108:0] lm96570_spi_num_of_bits_s1_agent_rf_source_data;                    // lm96570_spi_num_of_bits_s1_agent:rf_source_data -> lm96570_spi_num_of_bits_s1_agent_rsp_fifo:in_data
	wire          lm96570_spi_num_of_bits_s1_agent_rf_source_ready;                   // lm96570_spi_num_of_bits_s1_agent_rsp_fifo:in_ready -> lm96570_spi_num_of_bits_s1_agent:rf_source_ready
	wire          lm96570_spi_num_of_bits_s1_agent_rf_source_startofpacket;           // lm96570_spi_num_of_bits_s1_agent:rf_source_startofpacket -> lm96570_spi_num_of_bits_s1_agent_rsp_fifo:in_startofpacket
	wire          lm96570_spi_num_of_bits_s1_agent_rf_source_endofpacket;             // lm96570_spi_num_of_bits_s1_agent:rf_source_endofpacket -> lm96570_spi_num_of_bits_s1_agent_rsp_fifo:in_endofpacket
	wire          lm96570_spi_num_of_bits_s1_agent_rsp_fifo_out_valid;                // lm96570_spi_num_of_bits_s1_agent_rsp_fifo:out_valid -> lm96570_spi_num_of_bits_s1_agent:rf_sink_valid
	wire  [108:0] lm96570_spi_num_of_bits_s1_agent_rsp_fifo_out_data;                 // lm96570_spi_num_of_bits_s1_agent_rsp_fifo:out_data -> lm96570_spi_num_of_bits_s1_agent:rf_sink_data
	wire          lm96570_spi_num_of_bits_s1_agent_rsp_fifo_out_ready;                // lm96570_spi_num_of_bits_s1_agent:rf_sink_ready -> lm96570_spi_num_of_bits_s1_agent_rsp_fifo:out_ready
	wire          lm96570_spi_num_of_bits_s1_agent_rsp_fifo_out_startofpacket;        // lm96570_spi_num_of_bits_s1_agent_rsp_fifo:out_startofpacket -> lm96570_spi_num_of_bits_s1_agent:rf_sink_startofpacket
	wire          lm96570_spi_num_of_bits_s1_agent_rsp_fifo_out_endofpacket;          // lm96570_spi_num_of_bits_s1_agent_rsp_fifo:out_endofpacket -> lm96570_spi_num_of_bits_s1_agent:rf_sink_endofpacket
	wire          cmd_mux_006_src_valid;                                              // cmd_mux_006:src_valid -> lm96570_spi_num_of_bits_s1_agent:cp_valid
	wire  [107:0] cmd_mux_006_src_data;                                               // cmd_mux_006:src_data -> lm96570_spi_num_of_bits_s1_agent:cp_data
	wire          cmd_mux_006_src_ready;                                              // lm96570_spi_num_of_bits_s1_agent:cp_ready -> cmd_mux_006:src_ready
	wire    [8:0] cmd_mux_006_src_channel;                                            // cmd_mux_006:src_channel -> lm96570_spi_num_of_bits_s1_agent:cp_channel
	wire          cmd_mux_006_src_startofpacket;                                      // cmd_mux_006:src_startofpacket -> lm96570_spi_num_of_bits_s1_agent:cp_startofpacket
	wire          cmd_mux_006_src_endofpacket;                                        // cmd_mux_006:src_endofpacket -> lm96570_spi_num_of_bits_s1_agent:cp_endofpacket
	wire   [31:0] general_cnt_s1_agent_m0_readdata;                                   // general_cnt_s1_translator:uav_readdata -> general_cnt_s1_agent:m0_readdata
	wire          general_cnt_s1_agent_m0_waitrequest;                                // general_cnt_s1_translator:uav_waitrequest -> general_cnt_s1_agent:m0_waitrequest
	wire          general_cnt_s1_agent_m0_debugaccess;                                // general_cnt_s1_agent:m0_debugaccess -> general_cnt_s1_translator:uav_debugaccess
	wire   [31:0] general_cnt_s1_agent_m0_address;                                    // general_cnt_s1_agent:m0_address -> general_cnt_s1_translator:uav_address
	wire    [3:0] general_cnt_s1_agent_m0_byteenable;                                 // general_cnt_s1_agent:m0_byteenable -> general_cnt_s1_translator:uav_byteenable
	wire          general_cnt_s1_agent_m0_read;                                       // general_cnt_s1_agent:m0_read -> general_cnt_s1_translator:uav_read
	wire          general_cnt_s1_agent_m0_readdatavalid;                              // general_cnt_s1_translator:uav_readdatavalid -> general_cnt_s1_agent:m0_readdatavalid
	wire          general_cnt_s1_agent_m0_lock;                                       // general_cnt_s1_agent:m0_lock -> general_cnt_s1_translator:uav_lock
	wire   [31:0] general_cnt_s1_agent_m0_writedata;                                  // general_cnt_s1_agent:m0_writedata -> general_cnt_s1_translator:uav_writedata
	wire          general_cnt_s1_agent_m0_write;                                      // general_cnt_s1_agent:m0_write -> general_cnt_s1_translator:uav_write
	wire    [2:0] general_cnt_s1_agent_m0_burstcount;                                 // general_cnt_s1_agent:m0_burstcount -> general_cnt_s1_translator:uav_burstcount
	wire          general_cnt_s1_agent_rf_source_valid;                               // general_cnt_s1_agent:rf_source_valid -> general_cnt_s1_agent_rsp_fifo:in_valid
	wire  [108:0] general_cnt_s1_agent_rf_source_data;                                // general_cnt_s1_agent:rf_source_data -> general_cnt_s1_agent_rsp_fifo:in_data
	wire          general_cnt_s1_agent_rf_source_ready;                               // general_cnt_s1_agent_rsp_fifo:in_ready -> general_cnt_s1_agent:rf_source_ready
	wire          general_cnt_s1_agent_rf_source_startofpacket;                       // general_cnt_s1_agent:rf_source_startofpacket -> general_cnt_s1_agent_rsp_fifo:in_startofpacket
	wire          general_cnt_s1_agent_rf_source_endofpacket;                         // general_cnt_s1_agent:rf_source_endofpacket -> general_cnt_s1_agent_rsp_fifo:in_endofpacket
	wire          general_cnt_s1_agent_rsp_fifo_out_valid;                            // general_cnt_s1_agent_rsp_fifo:out_valid -> general_cnt_s1_agent:rf_sink_valid
	wire  [108:0] general_cnt_s1_agent_rsp_fifo_out_data;                             // general_cnt_s1_agent_rsp_fifo:out_data -> general_cnt_s1_agent:rf_sink_data
	wire          general_cnt_s1_agent_rsp_fifo_out_ready;                            // general_cnt_s1_agent:rf_sink_ready -> general_cnt_s1_agent_rsp_fifo:out_ready
	wire          general_cnt_s1_agent_rsp_fifo_out_startofpacket;                    // general_cnt_s1_agent_rsp_fifo:out_startofpacket -> general_cnt_s1_agent:rf_sink_startofpacket
	wire          general_cnt_s1_agent_rsp_fifo_out_endofpacket;                      // general_cnt_s1_agent_rsp_fifo:out_endofpacket -> general_cnt_s1_agent:rf_sink_endofpacket
	wire          cmd_mux_007_src_valid;                                              // cmd_mux_007:src_valid -> general_cnt_s1_agent:cp_valid
	wire  [107:0] cmd_mux_007_src_data;                                               // cmd_mux_007:src_data -> general_cnt_s1_agent:cp_data
	wire          cmd_mux_007_src_ready;                                              // general_cnt_s1_agent:cp_ready -> cmd_mux_007:src_ready
	wire    [8:0] cmd_mux_007_src_channel;                                            // cmd_mux_007:src_channel -> general_cnt_s1_agent:cp_channel
	wire          cmd_mux_007_src_startofpacket;                                      // cmd_mux_007:src_startofpacket -> general_cnt_s1_agent:cp_startofpacket
	wire          cmd_mux_007_src_endofpacket;                                        // cmd_mux_007:src_endofpacket -> general_cnt_s1_agent:cp_endofpacket
	wire   [31:0] ad9276_spi_spi_control_port_agent_m0_readdata;                      // ad9276_spi_spi_control_port_translator:uav_readdata -> ad9276_spi_spi_control_port_agent:m0_readdata
	wire          ad9276_spi_spi_control_port_agent_m0_waitrequest;                   // ad9276_spi_spi_control_port_translator:uav_waitrequest -> ad9276_spi_spi_control_port_agent:m0_waitrequest
	wire          ad9276_spi_spi_control_port_agent_m0_debugaccess;                   // ad9276_spi_spi_control_port_agent:m0_debugaccess -> ad9276_spi_spi_control_port_translator:uav_debugaccess
	wire   [31:0] ad9276_spi_spi_control_port_agent_m0_address;                       // ad9276_spi_spi_control_port_agent:m0_address -> ad9276_spi_spi_control_port_translator:uav_address
	wire    [3:0] ad9276_spi_spi_control_port_agent_m0_byteenable;                    // ad9276_spi_spi_control_port_agent:m0_byteenable -> ad9276_spi_spi_control_port_translator:uav_byteenable
	wire          ad9276_spi_spi_control_port_agent_m0_read;                          // ad9276_spi_spi_control_port_agent:m0_read -> ad9276_spi_spi_control_port_translator:uav_read
	wire          ad9276_spi_spi_control_port_agent_m0_readdatavalid;                 // ad9276_spi_spi_control_port_translator:uav_readdatavalid -> ad9276_spi_spi_control_port_agent:m0_readdatavalid
	wire          ad9276_spi_spi_control_port_agent_m0_lock;                          // ad9276_spi_spi_control_port_agent:m0_lock -> ad9276_spi_spi_control_port_translator:uav_lock
	wire   [31:0] ad9276_spi_spi_control_port_agent_m0_writedata;                     // ad9276_spi_spi_control_port_agent:m0_writedata -> ad9276_spi_spi_control_port_translator:uav_writedata
	wire          ad9276_spi_spi_control_port_agent_m0_write;                         // ad9276_spi_spi_control_port_agent:m0_write -> ad9276_spi_spi_control_port_translator:uav_write
	wire    [2:0] ad9276_spi_spi_control_port_agent_m0_burstcount;                    // ad9276_spi_spi_control_port_agent:m0_burstcount -> ad9276_spi_spi_control_port_translator:uav_burstcount
	wire          ad9276_spi_spi_control_port_agent_rf_source_valid;                  // ad9276_spi_spi_control_port_agent:rf_source_valid -> ad9276_spi_spi_control_port_agent_rsp_fifo:in_valid
	wire  [108:0] ad9276_spi_spi_control_port_agent_rf_source_data;                   // ad9276_spi_spi_control_port_agent:rf_source_data -> ad9276_spi_spi_control_port_agent_rsp_fifo:in_data
	wire          ad9276_spi_spi_control_port_agent_rf_source_ready;                  // ad9276_spi_spi_control_port_agent_rsp_fifo:in_ready -> ad9276_spi_spi_control_port_agent:rf_source_ready
	wire          ad9276_spi_spi_control_port_agent_rf_source_startofpacket;          // ad9276_spi_spi_control_port_agent:rf_source_startofpacket -> ad9276_spi_spi_control_port_agent_rsp_fifo:in_startofpacket
	wire          ad9276_spi_spi_control_port_agent_rf_source_endofpacket;            // ad9276_spi_spi_control_port_agent:rf_source_endofpacket -> ad9276_spi_spi_control_port_agent_rsp_fifo:in_endofpacket
	wire          ad9276_spi_spi_control_port_agent_rsp_fifo_out_valid;               // ad9276_spi_spi_control_port_agent_rsp_fifo:out_valid -> ad9276_spi_spi_control_port_agent:rf_sink_valid
	wire  [108:0] ad9276_spi_spi_control_port_agent_rsp_fifo_out_data;                // ad9276_spi_spi_control_port_agent_rsp_fifo:out_data -> ad9276_spi_spi_control_port_agent:rf_sink_data
	wire          ad9276_spi_spi_control_port_agent_rsp_fifo_out_ready;               // ad9276_spi_spi_control_port_agent:rf_sink_ready -> ad9276_spi_spi_control_port_agent_rsp_fifo:out_ready
	wire          ad9276_spi_spi_control_port_agent_rsp_fifo_out_startofpacket;       // ad9276_spi_spi_control_port_agent_rsp_fifo:out_startofpacket -> ad9276_spi_spi_control_port_agent:rf_sink_startofpacket
	wire          ad9276_spi_spi_control_port_agent_rsp_fifo_out_endofpacket;         // ad9276_spi_spi_control_port_agent_rsp_fifo:out_endofpacket -> ad9276_spi_spi_control_port_agent:rf_sink_endofpacket
	wire          cmd_mux_008_src_valid;                                              // cmd_mux_008:src_valid -> ad9276_spi_spi_control_port_agent:cp_valid
	wire  [107:0] cmd_mux_008_src_data;                                               // cmd_mux_008:src_data -> ad9276_spi_spi_control_port_agent:cp_data
	wire          cmd_mux_008_src_ready;                                              // ad9276_spi_spi_control_port_agent:cp_ready -> cmd_mux_008:src_ready
	wire    [8:0] cmd_mux_008_src_channel;                                            // cmd_mux_008:src_channel -> ad9276_spi_spi_control_port_agent:cp_channel
	wire          cmd_mux_008_src_startofpacket;                                      // cmd_mux_008:src_startofpacket -> ad9276_spi_spi_control_port_agent:cp_startofpacket
	wire          cmd_mux_008_src_endofpacket;                                        // cmd_mux_008:src_endofpacket -> ad9276_spi_spi_control_port_agent:cp_endofpacket
	wire          master_0_master_agent_cp_valid;                                     // master_0_master_agent:cp_valid -> router:sink_valid
	wire  [107:0] master_0_master_agent_cp_data;                                      // master_0_master_agent:cp_data -> router:sink_data
	wire          master_0_master_agent_cp_ready;                                     // router:sink_ready -> master_0_master_agent:cp_ready
	wire          master_0_master_agent_cp_startofpacket;                             // master_0_master_agent:cp_startofpacket -> router:sink_startofpacket
	wire          master_0_master_agent_cp_endofpacket;                               // master_0_master_agent:cp_endofpacket -> router:sink_endofpacket
	wire          lm96570_spi_in_2_s1_agent_rp_valid;                                 // lm96570_spi_in_2_s1_agent:rp_valid -> router_001:sink_valid
	wire  [107:0] lm96570_spi_in_2_s1_agent_rp_data;                                  // lm96570_spi_in_2_s1_agent:rp_data -> router_001:sink_data
	wire          lm96570_spi_in_2_s1_agent_rp_ready;                                 // router_001:sink_ready -> lm96570_spi_in_2_s1_agent:rp_ready
	wire          lm96570_spi_in_2_s1_agent_rp_startofpacket;                         // lm96570_spi_in_2_s1_agent:rp_startofpacket -> router_001:sink_startofpacket
	wire          lm96570_spi_in_2_s1_agent_rp_endofpacket;                           // lm96570_spi_in_2_s1_agent:rp_endofpacket -> router_001:sink_endofpacket
	wire          router_001_src_valid;                                               // router_001:src_valid -> rsp_demux:sink_valid
	wire  [107:0] router_001_src_data;                                                // router_001:src_data -> rsp_demux:sink_data
	wire          router_001_src_ready;                                               // rsp_demux:sink_ready -> router_001:src_ready
	wire    [8:0] router_001_src_channel;                                             // router_001:src_channel -> rsp_demux:sink_channel
	wire          router_001_src_startofpacket;                                       // router_001:src_startofpacket -> rsp_demux:sink_startofpacket
	wire          router_001_src_endofpacket;                                         // router_001:src_endofpacket -> rsp_demux:sink_endofpacket
	wire          lm96570_spi_in_0_s1_agent_rp_valid;                                 // lm96570_spi_in_0_s1_agent:rp_valid -> router_002:sink_valid
	wire  [107:0] lm96570_spi_in_0_s1_agent_rp_data;                                  // lm96570_spi_in_0_s1_agent:rp_data -> router_002:sink_data
	wire          lm96570_spi_in_0_s1_agent_rp_ready;                                 // router_002:sink_ready -> lm96570_spi_in_0_s1_agent:rp_ready
	wire          lm96570_spi_in_0_s1_agent_rp_startofpacket;                         // lm96570_spi_in_0_s1_agent:rp_startofpacket -> router_002:sink_startofpacket
	wire          lm96570_spi_in_0_s1_agent_rp_endofpacket;                           // lm96570_spi_in_0_s1_agent:rp_endofpacket -> router_002:sink_endofpacket
	wire          router_002_src_valid;                                               // router_002:src_valid -> rsp_demux_001:sink_valid
	wire  [107:0] router_002_src_data;                                                // router_002:src_data -> rsp_demux_001:sink_data
	wire          router_002_src_ready;                                               // rsp_demux_001:sink_ready -> router_002:src_ready
	wire    [8:0] router_002_src_channel;                                             // router_002:src_channel -> rsp_demux_001:sink_channel
	wire          router_002_src_startofpacket;                                       // router_002:src_startofpacket -> rsp_demux_001:sink_startofpacket
	wire          router_002_src_endofpacket;                                         // router_002:src_endofpacket -> rsp_demux_001:sink_endofpacket
	wire          lm96570_spi_in_1_s1_agent_rp_valid;                                 // lm96570_spi_in_1_s1_agent:rp_valid -> router_003:sink_valid
	wire  [107:0] lm96570_spi_in_1_s1_agent_rp_data;                                  // lm96570_spi_in_1_s1_agent:rp_data -> router_003:sink_data
	wire          lm96570_spi_in_1_s1_agent_rp_ready;                                 // router_003:sink_ready -> lm96570_spi_in_1_s1_agent:rp_ready
	wire          lm96570_spi_in_1_s1_agent_rp_startofpacket;                         // lm96570_spi_in_1_s1_agent:rp_startofpacket -> router_003:sink_startofpacket
	wire          lm96570_spi_in_1_s1_agent_rp_endofpacket;                           // lm96570_spi_in_1_s1_agent:rp_endofpacket -> router_003:sink_endofpacket
	wire          router_003_src_valid;                                               // router_003:src_valid -> rsp_demux_002:sink_valid
	wire  [107:0] router_003_src_data;                                                // router_003:src_data -> rsp_demux_002:sink_data
	wire          router_003_src_ready;                                               // rsp_demux_002:sink_ready -> router_003:src_ready
	wire    [8:0] router_003_src_channel;                                             // router_003:src_channel -> rsp_demux_002:sink_channel
	wire          router_003_src_startofpacket;                                       // router_003:src_startofpacket -> rsp_demux_002:sink_startofpacket
	wire          router_003_src_endofpacket;                                         // router_003:src_endofpacket -> rsp_demux_002:sink_endofpacket
	wire          lm96570_spi_out_2_s1_agent_rp_valid;                                // lm96570_spi_out_2_s1_agent:rp_valid -> router_004:sink_valid
	wire  [107:0] lm96570_spi_out_2_s1_agent_rp_data;                                 // lm96570_spi_out_2_s1_agent:rp_data -> router_004:sink_data
	wire          lm96570_spi_out_2_s1_agent_rp_ready;                                // router_004:sink_ready -> lm96570_spi_out_2_s1_agent:rp_ready
	wire          lm96570_spi_out_2_s1_agent_rp_startofpacket;                        // lm96570_spi_out_2_s1_agent:rp_startofpacket -> router_004:sink_startofpacket
	wire          lm96570_spi_out_2_s1_agent_rp_endofpacket;                          // lm96570_spi_out_2_s1_agent:rp_endofpacket -> router_004:sink_endofpacket
	wire          router_004_src_valid;                                               // router_004:src_valid -> rsp_demux_003:sink_valid
	wire  [107:0] router_004_src_data;                                                // router_004:src_data -> rsp_demux_003:sink_data
	wire          router_004_src_ready;                                               // rsp_demux_003:sink_ready -> router_004:src_ready
	wire    [8:0] router_004_src_channel;                                             // router_004:src_channel -> rsp_demux_003:sink_channel
	wire          router_004_src_startofpacket;                                       // router_004:src_startofpacket -> rsp_demux_003:sink_startofpacket
	wire          router_004_src_endofpacket;                                         // router_004:src_endofpacket -> rsp_demux_003:sink_endofpacket
	wire          lm96570_spi_out_1_s1_agent_rp_valid;                                // lm96570_spi_out_1_s1_agent:rp_valid -> router_005:sink_valid
	wire  [107:0] lm96570_spi_out_1_s1_agent_rp_data;                                 // lm96570_spi_out_1_s1_agent:rp_data -> router_005:sink_data
	wire          lm96570_spi_out_1_s1_agent_rp_ready;                                // router_005:sink_ready -> lm96570_spi_out_1_s1_agent:rp_ready
	wire          lm96570_spi_out_1_s1_agent_rp_startofpacket;                        // lm96570_spi_out_1_s1_agent:rp_startofpacket -> router_005:sink_startofpacket
	wire          lm96570_spi_out_1_s1_agent_rp_endofpacket;                          // lm96570_spi_out_1_s1_agent:rp_endofpacket -> router_005:sink_endofpacket
	wire          router_005_src_valid;                                               // router_005:src_valid -> rsp_demux_004:sink_valid
	wire  [107:0] router_005_src_data;                                                // router_005:src_data -> rsp_demux_004:sink_data
	wire          router_005_src_ready;                                               // rsp_demux_004:sink_ready -> router_005:src_ready
	wire    [8:0] router_005_src_channel;                                             // router_005:src_channel -> rsp_demux_004:sink_channel
	wire          router_005_src_startofpacket;                                       // router_005:src_startofpacket -> rsp_demux_004:sink_startofpacket
	wire          router_005_src_endofpacket;                                         // router_005:src_endofpacket -> rsp_demux_004:sink_endofpacket
	wire          lm96570_spi_out_0_s1_agent_rp_valid;                                // lm96570_spi_out_0_s1_agent:rp_valid -> router_006:sink_valid
	wire  [107:0] lm96570_spi_out_0_s1_agent_rp_data;                                 // lm96570_spi_out_0_s1_agent:rp_data -> router_006:sink_data
	wire          lm96570_spi_out_0_s1_agent_rp_ready;                                // router_006:sink_ready -> lm96570_spi_out_0_s1_agent:rp_ready
	wire          lm96570_spi_out_0_s1_agent_rp_startofpacket;                        // lm96570_spi_out_0_s1_agent:rp_startofpacket -> router_006:sink_startofpacket
	wire          lm96570_spi_out_0_s1_agent_rp_endofpacket;                          // lm96570_spi_out_0_s1_agent:rp_endofpacket -> router_006:sink_endofpacket
	wire          router_006_src_valid;                                               // router_006:src_valid -> rsp_demux_005:sink_valid
	wire  [107:0] router_006_src_data;                                                // router_006:src_data -> rsp_demux_005:sink_data
	wire          router_006_src_ready;                                               // rsp_demux_005:sink_ready -> router_006:src_ready
	wire    [8:0] router_006_src_channel;                                             // router_006:src_channel -> rsp_demux_005:sink_channel
	wire          router_006_src_startofpacket;                                       // router_006:src_startofpacket -> rsp_demux_005:sink_startofpacket
	wire          router_006_src_endofpacket;                                         // router_006:src_endofpacket -> rsp_demux_005:sink_endofpacket
	wire          lm96570_spi_num_of_bits_s1_agent_rp_valid;                          // lm96570_spi_num_of_bits_s1_agent:rp_valid -> router_007:sink_valid
	wire  [107:0] lm96570_spi_num_of_bits_s1_agent_rp_data;                           // lm96570_spi_num_of_bits_s1_agent:rp_data -> router_007:sink_data
	wire          lm96570_spi_num_of_bits_s1_agent_rp_ready;                          // router_007:sink_ready -> lm96570_spi_num_of_bits_s1_agent:rp_ready
	wire          lm96570_spi_num_of_bits_s1_agent_rp_startofpacket;                  // lm96570_spi_num_of_bits_s1_agent:rp_startofpacket -> router_007:sink_startofpacket
	wire          lm96570_spi_num_of_bits_s1_agent_rp_endofpacket;                    // lm96570_spi_num_of_bits_s1_agent:rp_endofpacket -> router_007:sink_endofpacket
	wire          router_007_src_valid;                                               // router_007:src_valid -> rsp_demux_006:sink_valid
	wire  [107:0] router_007_src_data;                                                // router_007:src_data -> rsp_demux_006:sink_data
	wire          router_007_src_ready;                                               // rsp_demux_006:sink_ready -> router_007:src_ready
	wire    [8:0] router_007_src_channel;                                             // router_007:src_channel -> rsp_demux_006:sink_channel
	wire          router_007_src_startofpacket;                                       // router_007:src_startofpacket -> rsp_demux_006:sink_startofpacket
	wire          router_007_src_endofpacket;                                         // router_007:src_endofpacket -> rsp_demux_006:sink_endofpacket
	wire          general_cnt_s1_agent_rp_valid;                                      // general_cnt_s1_agent:rp_valid -> router_008:sink_valid
	wire  [107:0] general_cnt_s1_agent_rp_data;                                       // general_cnt_s1_agent:rp_data -> router_008:sink_data
	wire          general_cnt_s1_agent_rp_ready;                                      // router_008:sink_ready -> general_cnt_s1_agent:rp_ready
	wire          general_cnt_s1_agent_rp_startofpacket;                              // general_cnt_s1_agent:rp_startofpacket -> router_008:sink_startofpacket
	wire          general_cnt_s1_agent_rp_endofpacket;                                // general_cnt_s1_agent:rp_endofpacket -> router_008:sink_endofpacket
	wire          router_008_src_valid;                                               // router_008:src_valid -> rsp_demux_007:sink_valid
	wire  [107:0] router_008_src_data;                                                // router_008:src_data -> rsp_demux_007:sink_data
	wire          router_008_src_ready;                                               // rsp_demux_007:sink_ready -> router_008:src_ready
	wire    [8:0] router_008_src_channel;                                             // router_008:src_channel -> rsp_demux_007:sink_channel
	wire          router_008_src_startofpacket;                                       // router_008:src_startofpacket -> rsp_demux_007:sink_startofpacket
	wire          router_008_src_endofpacket;                                         // router_008:src_endofpacket -> rsp_demux_007:sink_endofpacket
	wire          ad9276_spi_spi_control_port_agent_rp_valid;                         // ad9276_spi_spi_control_port_agent:rp_valid -> router_009:sink_valid
	wire  [107:0] ad9276_spi_spi_control_port_agent_rp_data;                          // ad9276_spi_spi_control_port_agent:rp_data -> router_009:sink_data
	wire          ad9276_spi_spi_control_port_agent_rp_ready;                         // router_009:sink_ready -> ad9276_spi_spi_control_port_agent:rp_ready
	wire          ad9276_spi_spi_control_port_agent_rp_startofpacket;                 // ad9276_spi_spi_control_port_agent:rp_startofpacket -> router_009:sink_startofpacket
	wire          ad9276_spi_spi_control_port_agent_rp_endofpacket;                   // ad9276_spi_spi_control_port_agent:rp_endofpacket -> router_009:sink_endofpacket
	wire          router_009_src_valid;                                               // router_009:src_valid -> rsp_demux_008:sink_valid
	wire  [107:0] router_009_src_data;                                                // router_009:src_data -> rsp_demux_008:sink_data
	wire          router_009_src_ready;                                               // rsp_demux_008:sink_ready -> router_009:src_ready
	wire    [8:0] router_009_src_channel;                                             // router_009:src_channel -> rsp_demux_008:sink_channel
	wire          router_009_src_startofpacket;                                       // router_009:src_startofpacket -> rsp_demux_008:sink_startofpacket
	wire          router_009_src_endofpacket;                                         // router_009:src_endofpacket -> rsp_demux_008:sink_endofpacket
	wire          router_src_valid;                                                   // router:src_valid -> master_0_master_limiter:cmd_sink_valid
	wire  [107:0] router_src_data;                                                    // router:src_data -> master_0_master_limiter:cmd_sink_data
	wire          router_src_ready;                                                   // master_0_master_limiter:cmd_sink_ready -> router:src_ready
	wire    [8:0] router_src_channel;                                                 // router:src_channel -> master_0_master_limiter:cmd_sink_channel
	wire          router_src_startofpacket;                                           // router:src_startofpacket -> master_0_master_limiter:cmd_sink_startofpacket
	wire          router_src_endofpacket;                                             // router:src_endofpacket -> master_0_master_limiter:cmd_sink_endofpacket
	wire  [107:0] master_0_master_limiter_cmd_src_data;                               // master_0_master_limiter:cmd_src_data -> cmd_demux:sink_data
	wire          master_0_master_limiter_cmd_src_ready;                              // cmd_demux:sink_ready -> master_0_master_limiter:cmd_src_ready
	wire    [8:0] master_0_master_limiter_cmd_src_channel;                            // master_0_master_limiter:cmd_src_channel -> cmd_demux:sink_channel
	wire          master_0_master_limiter_cmd_src_startofpacket;                      // master_0_master_limiter:cmd_src_startofpacket -> cmd_demux:sink_startofpacket
	wire          master_0_master_limiter_cmd_src_endofpacket;                        // master_0_master_limiter:cmd_src_endofpacket -> cmd_demux:sink_endofpacket
	wire          rsp_mux_src_valid;                                                  // rsp_mux:src_valid -> master_0_master_limiter:rsp_sink_valid
	wire  [107:0] rsp_mux_src_data;                                                   // rsp_mux:src_data -> master_0_master_limiter:rsp_sink_data
	wire          rsp_mux_src_ready;                                                  // master_0_master_limiter:rsp_sink_ready -> rsp_mux:src_ready
	wire    [8:0] rsp_mux_src_channel;                                                // rsp_mux:src_channel -> master_0_master_limiter:rsp_sink_channel
	wire          rsp_mux_src_startofpacket;                                          // rsp_mux:src_startofpacket -> master_0_master_limiter:rsp_sink_startofpacket
	wire          rsp_mux_src_endofpacket;                                            // rsp_mux:src_endofpacket -> master_0_master_limiter:rsp_sink_endofpacket
	wire          master_0_master_limiter_rsp_src_valid;                              // master_0_master_limiter:rsp_src_valid -> master_0_master_agent:rp_valid
	wire  [107:0] master_0_master_limiter_rsp_src_data;                               // master_0_master_limiter:rsp_src_data -> master_0_master_agent:rp_data
	wire          master_0_master_limiter_rsp_src_ready;                              // master_0_master_agent:rp_ready -> master_0_master_limiter:rsp_src_ready
	wire    [8:0] master_0_master_limiter_rsp_src_channel;                            // master_0_master_limiter:rsp_src_channel -> master_0_master_agent:rp_channel
	wire          master_0_master_limiter_rsp_src_startofpacket;                      // master_0_master_limiter:rsp_src_startofpacket -> master_0_master_agent:rp_startofpacket
	wire          master_0_master_limiter_rsp_src_endofpacket;                        // master_0_master_limiter:rsp_src_endofpacket -> master_0_master_agent:rp_endofpacket
	wire          cmd_demux_src0_valid;                                               // cmd_demux:src0_valid -> cmd_mux:sink0_valid
	wire  [107:0] cmd_demux_src0_data;                                                // cmd_demux:src0_data -> cmd_mux:sink0_data
	wire          cmd_demux_src0_ready;                                               // cmd_mux:sink0_ready -> cmd_demux:src0_ready
	wire    [8:0] cmd_demux_src0_channel;                                             // cmd_demux:src0_channel -> cmd_mux:sink0_channel
	wire          cmd_demux_src0_startofpacket;                                       // cmd_demux:src0_startofpacket -> cmd_mux:sink0_startofpacket
	wire          cmd_demux_src0_endofpacket;                                         // cmd_demux:src0_endofpacket -> cmd_mux:sink0_endofpacket
	wire          cmd_demux_src1_valid;                                               // cmd_demux:src1_valid -> cmd_mux_001:sink0_valid
	wire  [107:0] cmd_demux_src1_data;                                                // cmd_demux:src1_data -> cmd_mux_001:sink0_data
	wire          cmd_demux_src1_ready;                                               // cmd_mux_001:sink0_ready -> cmd_demux:src1_ready
	wire    [8:0] cmd_demux_src1_channel;                                             // cmd_demux:src1_channel -> cmd_mux_001:sink0_channel
	wire          cmd_demux_src1_startofpacket;                                       // cmd_demux:src1_startofpacket -> cmd_mux_001:sink0_startofpacket
	wire          cmd_demux_src1_endofpacket;                                         // cmd_demux:src1_endofpacket -> cmd_mux_001:sink0_endofpacket
	wire          cmd_demux_src2_valid;                                               // cmd_demux:src2_valid -> cmd_mux_002:sink0_valid
	wire  [107:0] cmd_demux_src2_data;                                                // cmd_demux:src2_data -> cmd_mux_002:sink0_data
	wire          cmd_demux_src2_ready;                                               // cmd_mux_002:sink0_ready -> cmd_demux:src2_ready
	wire    [8:0] cmd_demux_src2_channel;                                             // cmd_demux:src2_channel -> cmd_mux_002:sink0_channel
	wire          cmd_demux_src2_startofpacket;                                       // cmd_demux:src2_startofpacket -> cmd_mux_002:sink0_startofpacket
	wire          cmd_demux_src2_endofpacket;                                         // cmd_demux:src2_endofpacket -> cmd_mux_002:sink0_endofpacket
	wire          cmd_demux_src3_valid;                                               // cmd_demux:src3_valid -> cmd_mux_003:sink0_valid
	wire  [107:0] cmd_demux_src3_data;                                                // cmd_demux:src3_data -> cmd_mux_003:sink0_data
	wire          cmd_demux_src3_ready;                                               // cmd_mux_003:sink0_ready -> cmd_demux:src3_ready
	wire    [8:0] cmd_demux_src3_channel;                                             // cmd_demux:src3_channel -> cmd_mux_003:sink0_channel
	wire          cmd_demux_src3_startofpacket;                                       // cmd_demux:src3_startofpacket -> cmd_mux_003:sink0_startofpacket
	wire          cmd_demux_src3_endofpacket;                                         // cmd_demux:src3_endofpacket -> cmd_mux_003:sink0_endofpacket
	wire          cmd_demux_src4_valid;                                               // cmd_demux:src4_valid -> cmd_mux_004:sink0_valid
	wire  [107:0] cmd_demux_src4_data;                                                // cmd_demux:src4_data -> cmd_mux_004:sink0_data
	wire          cmd_demux_src4_ready;                                               // cmd_mux_004:sink0_ready -> cmd_demux:src4_ready
	wire    [8:0] cmd_demux_src4_channel;                                             // cmd_demux:src4_channel -> cmd_mux_004:sink0_channel
	wire          cmd_demux_src4_startofpacket;                                       // cmd_demux:src4_startofpacket -> cmd_mux_004:sink0_startofpacket
	wire          cmd_demux_src4_endofpacket;                                         // cmd_demux:src4_endofpacket -> cmd_mux_004:sink0_endofpacket
	wire          cmd_demux_src5_valid;                                               // cmd_demux:src5_valid -> cmd_mux_005:sink0_valid
	wire  [107:0] cmd_demux_src5_data;                                                // cmd_demux:src5_data -> cmd_mux_005:sink0_data
	wire          cmd_demux_src5_ready;                                               // cmd_mux_005:sink0_ready -> cmd_demux:src5_ready
	wire    [8:0] cmd_demux_src5_channel;                                             // cmd_demux:src5_channel -> cmd_mux_005:sink0_channel
	wire          cmd_demux_src5_startofpacket;                                       // cmd_demux:src5_startofpacket -> cmd_mux_005:sink0_startofpacket
	wire          cmd_demux_src5_endofpacket;                                         // cmd_demux:src5_endofpacket -> cmd_mux_005:sink0_endofpacket
	wire          cmd_demux_src6_valid;                                               // cmd_demux:src6_valid -> cmd_mux_006:sink0_valid
	wire  [107:0] cmd_demux_src6_data;                                                // cmd_demux:src6_data -> cmd_mux_006:sink0_data
	wire          cmd_demux_src6_ready;                                               // cmd_mux_006:sink0_ready -> cmd_demux:src6_ready
	wire    [8:0] cmd_demux_src6_channel;                                             // cmd_demux:src6_channel -> cmd_mux_006:sink0_channel
	wire          cmd_demux_src6_startofpacket;                                       // cmd_demux:src6_startofpacket -> cmd_mux_006:sink0_startofpacket
	wire          cmd_demux_src6_endofpacket;                                         // cmd_demux:src6_endofpacket -> cmd_mux_006:sink0_endofpacket
	wire          cmd_demux_src7_valid;                                               // cmd_demux:src7_valid -> cmd_mux_007:sink0_valid
	wire  [107:0] cmd_demux_src7_data;                                                // cmd_demux:src7_data -> cmd_mux_007:sink0_data
	wire          cmd_demux_src7_ready;                                               // cmd_mux_007:sink0_ready -> cmd_demux:src7_ready
	wire    [8:0] cmd_demux_src7_channel;                                             // cmd_demux:src7_channel -> cmd_mux_007:sink0_channel
	wire          cmd_demux_src7_startofpacket;                                       // cmd_demux:src7_startofpacket -> cmd_mux_007:sink0_startofpacket
	wire          cmd_demux_src7_endofpacket;                                         // cmd_demux:src7_endofpacket -> cmd_mux_007:sink0_endofpacket
	wire          cmd_demux_src8_valid;                                               // cmd_demux:src8_valid -> cmd_mux_008:sink0_valid
	wire  [107:0] cmd_demux_src8_data;                                                // cmd_demux:src8_data -> cmd_mux_008:sink0_data
	wire          cmd_demux_src8_ready;                                               // cmd_mux_008:sink0_ready -> cmd_demux:src8_ready
	wire    [8:0] cmd_demux_src8_channel;                                             // cmd_demux:src8_channel -> cmd_mux_008:sink0_channel
	wire          cmd_demux_src8_startofpacket;                                       // cmd_demux:src8_startofpacket -> cmd_mux_008:sink0_startofpacket
	wire          cmd_demux_src8_endofpacket;                                         // cmd_demux:src8_endofpacket -> cmd_mux_008:sink0_endofpacket
	wire          rsp_demux_src0_valid;                                               // rsp_demux:src0_valid -> rsp_mux:sink0_valid
	wire  [107:0] rsp_demux_src0_data;                                                // rsp_demux:src0_data -> rsp_mux:sink0_data
	wire          rsp_demux_src0_ready;                                               // rsp_mux:sink0_ready -> rsp_demux:src0_ready
	wire    [8:0] rsp_demux_src0_channel;                                             // rsp_demux:src0_channel -> rsp_mux:sink0_channel
	wire          rsp_demux_src0_startofpacket;                                       // rsp_demux:src0_startofpacket -> rsp_mux:sink0_startofpacket
	wire          rsp_demux_src0_endofpacket;                                         // rsp_demux:src0_endofpacket -> rsp_mux:sink0_endofpacket
	wire          rsp_demux_001_src0_valid;                                           // rsp_demux_001:src0_valid -> rsp_mux:sink1_valid
	wire  [107:0] rsp_demux_001_src0_data;                                            // rsp_demux_001:src0_data -> rsp_mux:sink1_data
	wire          rsp_demux_001_src0_ready;                                           // rsp_mux:sink1_ready -> rsp_demux_001:src0_ready
	wire    [8:0] rsp_demux_001_src0_channel;                                         // rsp_demux_001:src0_channel -> rsp_mux:sink1_channel
	wire          rsp_demux_001_src0_startofpacket;                                   // rsp_demux_001:src0_startofpacket -> rsp_mux:sink1_startofpacket
	wire          rsp_demux_001_src0_endofpacket;                                     // rsp_demux_001:src0_endofpacket -> rsp_mux:sink1_endofpacket
	wire          rsp_demux_002_src0_valid;                                           // rsp_demux_002:src0_valid -> rsp_mux:sink2_valid
	wire  [107:0] rsp_demux_002_src0_data;                                            // rsp_demux_002:src0_data -> rsp_mux:sink2_data
	wire          rsp_demux_002_src0_ready;                                           // rsp_mux:sink2_ready -> rsp_demux_002:src0_ready
	wire    [8:0] rsp_demux_002_src0_channel;                                         // rsp_demux_002:src0_channel -> rsp_mux:sink2_channel
	wire          rsp_demux_002_src0_startofpacket;                                   // rsp_demux_002:src0_startofpacket -> rsp_mux:sink2_startofpacket
	wire          rsp_demux_002_src0_endofpacket;                                     // rsp_demux_002:src0_endofpacket -> rsp_mux:sink2_endofpacket
	wire          rsp_demux_003_src0_valid;                                           // rsp_demux_003:src0_valid -> rsp_mux:sink3_valid
	wire  [107:0] rsp_demux_003_src0_data;                                            // rsp_demux_003:src0_data -> rsp_mux:sink3_data
	wire          rsp_demux_003_src0_ready;                                           // rsp_mux:sink3_ready -> rsp_demux_003:src0_ready
	wire    [8:0] rsp_demux_003_src0_channel;                                         // rsp_demux_003:src0_channel -> rsp_mux:sink3_channel
	wire          rsp_demux_003_src0_startofpacket;                                   // rsp_demux_003:src0_startofpacket -> rsp_mux:sink3_startofpacket
	wire          rsp_demux_003_src0_endofpacket;                                     // rsp_demux_003:src0_endofpacket -> rsp_mux:sink3_endofpacket
	wire          rsp_demux_004_src0_valid;                                           // rsp_demux_004:src0_valid -> rsp_mux:sink4_valid
	wire  [107:0] rsp_demux_004_src0_data;                                            // rsp_demux_004:src0_data -> rsp_mux:sink4_data
	wire          rsp_demux_004_src0_ready;                                           // rsp_mux:sink4_ready -> rsp_demux_004:src0_ready
	wire    [8:0] rsp_demux_004_src0_channel;                                         // rsp_demux_004:src0_channel -> rsp_mux:sink4_channel
	wire          rsp_demux_004_src0_startofpacket;                                   // rsp_demux_004:src0_startofpacket -> rsp_mux:sink4_startofpacket
	wire          rsp_demux_004_src0_endofpacket;                                     // rsp_demux_004:src0_endofpacket -> rsp_mux:sink4_endofpacket
	wire          rsp_demux_005_src0_valid;                                           // rsp_demux_005:src0_valid -> rsp_mux:sink5_valid
	wire  [107:0] rsp_demux_005_src0_data;                                            // rsp_demux_005:src0_data -> rsp_mux:sink5_data
	wire          rsp_demux_005_src0_ready;                                           // rsp_mux:sink5_ready -> rsp_demux_005:src0_ready
	wire    [8:0] rsp_demux_005_src0_channel;                                         // rsp_demux_005:src0_channel -> rsp_mux:sink5_channel
	wire          rsp_demux_005_src0_startofpacket;                                   // rsp_demux_005:src0_startofpacket -> rsp_mux:sink5_startofpacket
	wire          rsp_demux_005_src0_endofpacket;                                     // rsp_demux_005:src0_endofpacket -> rsp_mux:sink5_endofpacket
	wire          rsp_demux_006_src0_valid;                                           // rsp_demux_006:src0_valid -> rsp_mux:sink6_valid
	wire  [107:0] rsp_demux_006_src0_data;                                            // rsp_demux_006:src0_data -> rsp_mux:sink6_data
	wire          rsp_demux_006_src0_ready;                                           // rsp_mux:sink6_ready -> rsp_demux_006:src0_ready
	wire    [8:0] rsp_demux_006_src0_channel;                                         // rsp_demux_006:src0_channel -> rsp_mux:sink6_channel
	wire          rsp_demux_006_src0_startofpacket;                                   // rsp_demux_006:src0_startofpacket -> rsp_mux:sink6_startofpacket
	wire          rsp_demux_006_src0_endofpacket;                                     // rsp_demux_006:src0_endofpacket -> rsp_mux:sink6_endofpacket
	wire          rsp_demux_007_src0_valid;                                           // rsp_demux_007:src0_valid -> rsp_mux:sink7_valid
	wire  [107:0] rsp_demux_007_src0_data;                                            // rsp_demux_007:src0_data -> rsp_mux:sink7_data
	wire          rsp_demux_007_src0_ready;                                           // rsp_mux:sink7_ready -> rsp_demux_007:src0_ready
	wire    [8:0] rsp_demux_007_src0_channel;                                         // rsp_demux_007:src0_channel -> rsp_mux:sink7_channel
	wire          rsp_demux_007_src0_startofpacket;                                   // rsp_demux_007:src0_startofpacket -> rsp_mux:sink7_startofpacket
	wire          rsp_demux_007_src0_endofpacket;                                     // rsp_demux_007:src0_endofpacket -> rsp_mux:sink7_endofpacket
	wire          rsp_demux_008_src0_valid;                                           // rsp_demux_008:src0_valid -> rsp_mux:sink8_valid
	wire  [107:0] rsp_demux_008_src0_data;                                            // rsp_demux_008:src0_data -> rsp_mux:sink8_data
	wire          rsp_demux_008_src0_ready;                                           // rsp_mux:sink8_ready -> rsp_demux_008:src0_ready
	wire    [8:0] rsp_demux_008_src0_channel;                                         // rsp_demux_008:src0_channel -> rsp_mux:sink8_channel
	wire          rsp_demux_008_src0_startofpacket;                                   // rsp_demux_008:src0_startofpacket -> rsp_mux:sink8_startofpacket
	wire          rsp_demux_008_src0_endofpacket;                                     // rsp_demux_008:src0_endofpacket -> rsp_mux:sink8_endofpacket
	wire    [8:0] master_0_master_limiter_cmd_valid_data;                             // master_0_master_limiter:cmd_src_valid -> cmd_demux:sink_valid
	wire          lm96570_spi_in_2_s1_agent_rdata_fifo_src_valid;                     // lm96570_spi_in_2_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter:in_0_valid
	wire   [33:0] lm96570_spi_in_2_s1_agent_rdata_fifo_src_data;                      // lm96570_spi_in_2_s1_agent:rdata_fifo_src_data -> avalon_st_adapter:in_0_data
	wire          lm96570_spi_in_2_s1_agent_rdata_fifo_src_ready;                     // avalon_st_adapter:in_0_ready -> lm96570_spi_in_2_s1_agent:rdata_fifo_src_ready
	wire          avalon_st_adapter_out_0_valid;                                      // avalon_st_adapter:out_0_valid -> lm96570_spi_in_2_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_out_0_data;                                       // avalon_st_adapter:out_0_data -> lm96570_spi_in_2_s1_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_out_0_ready;                                      // lm96570_spi_in_2_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter:out_0_ready
	wire    [0:0] avalon_st_adapter_out_0_error;                                      // avalon_st_adapter:out_0_error -> lm96570_spi_in_2_s1_agent:rdata_fifo_sink_error
	wire          lm96570_spi_in_0_s1_agent_rdata_fifo_src_valid;                     // lm96570_spi_in_0_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_001:in_0_valid
	wire   [33:0] lm96570_spi_in_0_s1_agent_rdata_fifo_src_data;                      // lm96570_spi_in_0_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_001:in_0_data
	wire          lm96570_spi_in_0_s1_agent_rdata_fifo_src_ready;                     // avalon_st_adapter_001:in_0_ready -> lm96570_spi_in_0_s1_agent:rdata_fifo_src_ready
	wire          avalon_st_adapter_001_out_0_valid;                                  // avalon_st_adapter_001:out_0_valid -> lm96570_spi_in_0_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_001_out_0_data;                                   // avalon_st_adapter_001:out_0_data -> lm96570_spi_in_0_s1_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_001_out_0_ready;                                  // lm96570_spi_in_0_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_001:out_0_ready
	wire    [0:0] avalon_st_adapter_001_out_0_error;                                  // avalon_st_adapter_001:out_0_error -> lm96570_spi_in_0_s1_agent:rdata_fifo_sink_error
	wire          lm96570_spi_in_1_s1_agent_rdata_fifo_src_valid;                     // lm96570_spi_in_1_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_002:in_0_valid
	wire   [33:0] lm96570_spi_in_1_s1_agent_rdata_fifo_src_data;                      // lm96570_spi_in_1_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_002:in_0_data
	wire          lm96570_spi_in_1_s1_agent_rdata_fifo_src_ready;                     // avalon_st_adapter_002:in_0_ready -> lm96570_spi_in_1_s1_agent:rdata_fifo_src_ready
	wire          avalon_st_adapter_002_out_0_valid;                                  // avalon_st_adapter_002:out_0_valid -> lm96570_spi_in_1_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_002_out_0_data;                                   // avalon_st_adapter_002:out_0_data -> lm96570_spi_in_1_s1_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_002_out_0_ready;                                  // lm96570_spi_in_1_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_002:out_0_ready
	wire    [0:0] avalon_st_adapter_002_out_0_error;                                  // avalon_st_adapter_002:out_0_error -> lm96570_spi_in_1_s1_agent:rdata_fifo_sink_error
	wire          lm96570_spi_out_2_s1_agent_rdata_fifo_src_valid;                    // lm96570_spi_out_2_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_003:in_0_valid
	wire   [33:0] lm96570_spi_out_2_s1_agent_rdata_fifo_src_data;                     // lm96570_spi_out_2_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_003:in_0_data
	wire          lm96570_spi_out_2_s1_agent_rdata_fifo_src_ready;                    // avalon_st_adapter_003:in_0_ready -> lm96570_spi_out_2_s1_agent:rdata_fifo_src_ready
	wire          avalon_st_adapter_003_out_0_valid;                                  // avalon_st_adapter_003:out_0_valid -> lm96570_spi_out_2_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_003_out_0_data;                                   // avalon_st_adapter_003:out_0_data -> lm96570_spi_out_2_s1_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_003_out_0_ready;                                  // lm96570_spi_out_2_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_003:out_0_ready
	wire    [0:0] avalon_st_adapter_003_out_0_error;                                  // avalon_st_adapter_003:out_0_error -> lm96570_spi_out_2_s1_agent:rdata_fifo_sink_error
	wire          lm96570_spi_out_1_s1_agent_rdata_fifo_src_valid;                    // lm96570_spi_out_1_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_004:in_0_valid
	wire   [33:0] lm96570_spi_out_1_s1_agent_rdata_fifo_src_data;                     // lm96570_spi_out_1_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_004:in_0_data
	wire          lm96570_spi_out_1_s1_agent_rdata_fifo_src_ready;                    // avalon_st_adapter_004:in_0_ready -> lm96570_spi_out_1_s1_agent:rdata_fifo_src_ready
	wire          avalon_st_adapter_004_out_0_valid;                                  // avalon_st_adapter_004:out_0_valid -> lm96570_spi_out_1_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_004_out_0_data;                                   // avalon_st_adapter_004:out_0_data -> lm96570_spi_out_1_s1_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_004_out_0_ready;                                  // lm96570_spi_out_1_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_004:out_0_ready
	wire    [0:0] avalon_st_adapter_004_out_0_error;                                  // avalon_st_adapter_004:out_0_error -> lm96570_spi_out_1_s1_agent:rdata_fifo_sink_error
	wire          lm96570_spi_out_0_s1_agent_rdata_fifo_src_valid;                    // lm96570_spi_out_0_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_005:in_0_valid
	wire   [33:0] lm96570_spi_out_0_s1_agent_rdata_fifo_src_data;                     // lm96570_spi_out_0_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_005:in_0_data
	wire          lm96570_spi_out_0_s1_agent_rdata_fifo_src_ready;                    // avalon_st_adapter_005:in_0_ready -> lm96570_spi_out_0_s1_agent:rdata_fifo_src_ready
	wire          avalon_st_adapter_005_out_0_valid;                                  // avalon_st_adapter_005:out_0_valid -> lm96570_spi_out_0_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_005_out_0_data;                                   // avalon_st_adapter_005:out_0_data -> lm96570_spi_out_0_s1_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_005_out_0_ready;                                  // lm96570_spi_out_0_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_005:out_0_ready
	wire    [0:0] avalon_st_adapter_005_out_0_error;                                  // avalon_st_adapter_005:out_0_error -> lm96570_spi_out_0_s1_agent:rdata_fifo_sink_error
	wire          lm96570_spi_num_of_bits_s1_agent_rdata_fifo_src_valid;              // lm96570_spi_num_of_bits_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_006:in_0_valid
	wire   [33:0] lm96570_spi_num_of_bits_s1_agent_rdata_fifo_src_data;               // lm96570_spi_num_of_bits_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_006:in_0_data
	wire          lm96570_spi_num_of_bits_s1_agent_rdata_fifo_src_ready;              // avalon_st_adapter_006:in_0_ready -> lm96570_spi_num_of_bits_s1_agent:rdata_fifo_src_ready
	wire          avalon_st_adapter_006_out_0_valid;                                  // avalon_st_adapter_006:out_0_valid -> lm96570_spi_num_of_bits_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_006_out_0_data;                                   // avalon_st_adapter_006:out_0_data -> lm96570_spi_num_of_bits_s1_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_006_out_0_ready;                                  // lm96570_spi_num_of_bits_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_006:out_0_ready
	wire    [0:0] avalon_st_adapter_006_out_0_error;                                  // avalon_st_adapter_006:out_0_error -> lm96570_spi_num_of_bits_s1_agent:rdata_fifo_sink_error
	wire          general_cnt_s1_agent_rdata_fifo_src_valid;                          // general_cnt_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_007:in_0_valid
	wire   [33:0] general_cnt_s1_agent_rdata_fifo_src_data;                           // general_cnt_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_007:in_0_data
	wire          general_cnt_s1_agent_rdata_fifo_src_ready;                          // avalon_st_adapter_007:in_0_ready -> general_cnt_s1_agent:rdata_fifo_src_ready
	wire          avalon_st_adapter_007_out_0_valid;                                  // avalon_st_adapter_007:out_0_valid -> general_cnt_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_007_out_0_data;                                   // avalon_st_adapter_007:out_0_data -> general_cnt_s1_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_007_out_0_ready;                                  // general_cnt_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_007:out_0_ready
	wire    [0:0] avalon_st_adapter_007_out_0_error;                                  // avalon_st_adapter_007:out_0_error -> general_cnt_s1_agent:rdata_fifo_sink_error
	wire          ad9276_spi_spi_control_port_agent_rdata_fifo_src_valid;             // ad9276_spi_spi_control_port_agent:rdata_fifo_src_valid -> avalon_st_adapter_008:in_0_valid
	wire   [33:0] ad9276_spi_spi_control_port_agent_rdata_fifo_src_data;              // ad9276_spi_spi_control_port_agent:rdata_fifo_src_data -> avalon_st_adapter_008:in_0_data
	wire          ad9276_spi_spi_control_port_agent_rdata_fifo_src_ready;             // avalon_st_adapter_008:in_0_ready -> ad9276_spi_spi_control_port_agent:rdata_fifo_src_ready
	wire          avalon_st_adapter_008_out_0_valid;                                  // avalon_st_adapter_008:out_0_valid -> ad9276_spi_spi_control_port_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_008_out_0_data;                                   // avalon_st_adapter_008:out_0_data -> ad9276_spi_spi_control_port_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_008_out_0_ready;                                  // ad9276_spi_spi_control_port_agent:rdata_fifo_sink_ready -> avalon_st_adapter_008:out_0_ready
	wire    [0:0] avalon_st_adapter_008_out_0_error;                                  // avalon_st_adapter_008:out_0_error -> ad9276_spi_spi_control_port_agent:rdata_fifo_sink_error

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (32),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (32),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (1),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) master_0_master_translator (
		.clk                    (clk_0_clk_clk),                                                      //                       clk.clk
		.reset                  (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),                 //                     reset.reset
		.uav_address            (master_0_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount         (master_0_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read               (master_0_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write              (master_0_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest        (master_0_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid      (master_0_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable         (master_0_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata           (master_0_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata          (master_0_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock               (master_0_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess        (master_0_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address             (master_0_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest         (master_0_master_waitrequest),                                        //                          .waitrequest
		.av_byteenable          (master_0_master_byteenable),                                         //                          .byteenable
		.av_read                (master_0_master_read),                                               //                          .read
		.av_readdata            (master_0_master_readdata),                                           //                          .readdata
		.av_readdatavalid       (master_0_master_readdatavalid),                                      //                          .readdatavalid
		.av_write               (master_0_master_write),                                              //                          .write
		.av_writedata           (master_0_master_writedata),                                          //                          .writedata
		.av_burstcount          (1'b1),                                                               //               (terminated)
		.av_beginbursttransfer  (1'b0),                                                               //               (terminated)
		.av_begintransfer       (1'b0),                                                               //               (terminated)
		.av_chipselect          (1'b0),                                                               //               (terminated)
		.av_lock                (1'b0),                                                               //               (terminated)
		.av_debugaccess         (1'b0),                                                               //               (terminated)
		.uav_clken              (),                                                                   //               (terminated)
		.av_clken               (1'b1),                                                               //               (terminated)
		.uav_response           (2'b00),                                                              //               (terminated)
		.av_response            (),                                                                   //               (terminated)
		.uav_writeresponsevalid (1'b0),                                                               //               (terminated)
		.av_writeresponsevalid  ()                                                                    //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) lm96570_spi_in_2_s1_translator (
		.clk                    (clk_0_clk_clk),                                      //                      clk.clk
		.reset                  (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (lm96570_spi_in_2_s1_agent_m0_address),               // avalon_universal_slave_0.address
		.uav_burstcount         (lm96570_spi_in_2_s1_agent_m0_burstcount),            //                         .burstcount
		.uav_read               (lm96570_spi_in_2_s1_agent_m0_read),                  //                         .read
		.uav_write              (lm96570_spi_in_2_s1_agent_m0_write),                 //                         .write
		.uav_waitrequest        (lm96570_spi_in_2_s1_agent_m0_waitrequest),           //                         .waitrequest
		.uav_readdatavalid      (lm96570_spi_in_2_s1_agent_m0_readdatavalid),         //                         .readdatavalid
		.uav_byteenable         (lm96570_spi_in_2_s1_agent_m0_byteenable),            //                         .byteenable
		.uav_readdata           (lm96570_spi_in_2_s1_agent_m0_readdata),              //                         .readdata
		.uav_writedata          (lm96570_spi_in_2_s1_agent_m0_writedata),             //                         .writedata
		.uav_lock               (lm96570_spi_in_2_s1_agent_m0_lock),                  //                         .lock
		.uav_debugaccess        (lm96570_spi_in_2_s1_agent_m0_debugaccess),           //                         .debugaccess
		.av_address             (lm96570_spi_in_2_s1_address),                        //      avalon_anti_slave_0.address
		.av_write               (lm96570_spi_in_2_s1_write),                          //                         .write
		.av_readdata            (lm96570_spi_in_2_s1_readdata),                       //                         .readdata
		.av_writedata           (lm96570_spi_in_2_s1_writedata),                      //                         .writedata
		.av_chipselect          (lm96570_spi_in_2_s1_chipselect),                     //                         .chipselect
		.av_read                (),                                                   //              (terminated)
		.av_begintransfer       (),                                                   //              (terminated)
		.av_beginbursttransfer  (),                                                   //              (terminated)
		.av_burstcount          (),                                                   //              (terminated)
		.av_byteenable          (),                                                   //              (terminated)
		.av_readdatavalid       (1'b0),                                               //              (terminated)
		.av_waitrequest         (1'b0),                                               //              (terminated)
		.av_writebyteenable     (),                                                   //              (terminated)
		.av_lock                (),                                                   //              (terminated)
		.av_clken               (),                                                   //              (terminated)
		.uav_clken              (1'b0),                                               //              (terminated)
		.av_debugaccess         (),                                                   //              (terminated)
		.av_outputenable        (),                                                   //              (terminated)
		.uav_response           (),                                                   //              (terminated)
		.av_response            (2'b00),                                              //              (terminated)
		.uav_writeresponsevalid (),                                                   //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) lm96570_spi_in_0_s1_translator (
		.clk                    (clk_0_clk_clk),                                      //                      clk.clk
		.reset                  (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (lm96570_spi_in_0_s1_agent_m0_address),               // avalon_universal_slave_0.address
		.uav_burstcount         (lm96570_spi_in_0_s1_agent_m0_burstcount),            //                         .burstcount
		.uav_read               (lm96570_spi_in_0_s1_agent_m0_read),                  //                         .read
		.uav_write              (lm96570_spi_in_0_s1_agent_m0_write),                 //                         .write
		.uav_waitrequest        (lm96570_spi_in_0_s1_agent_m0_waitrequest),           //                         .waitrequest
		.uav_readdatavalid      (lm96570_spi_in_0_s1_agent_m0_readdatavalid),         //                         .readdatavalid
		.uav_byteenable         (lm96570_spi_in_0_s1_agent_m0_byteenable),            //                         .byteenable
		.uav_readdata           (lm96570_spi_in_0_s1_agent_m0_readdata),              //                         .readdata
		.uav_writedata          (lm96570_spi_in_0_s1_agent_m0_writedata),             //                         .writedata
		.uav_lock               (lm96570_spi_in_0_s1_agent_m0_lock),                  //                         .lock
		.uav_debugaccess        (lm96570_spi_in_0_s1_agent_m0_debugaccess),           //                         .debugaccess
		.av_address             (lm96570_spi_in_0_s1_address),                        //      avalon_anti_slave_0.address
		.av_write               (lm96570_spi_in_0_s1_write),                          //                         .write
		.av_readdata            (lm96570_spi_in_0_s1_readdata),                       //                         .readdata
		.av_writedata           (lm96570_spi_in_0_s1_writedata),                      //                         .writedata
		.av_chipselect          (lm96570_spi_in_0_s1_chipselect),                     //                         .chipselect
		.av_read                (),                                                   //              (terminated)
		.av_begintransfer       (),                                                   //              (terminated)
		.av_beginbursttransfer  (),                                                   //              (terminated)
		.av_burstcount          (),                                                   //              (terminated)
		.av_byteenable          (),                                                   //              (terminated)
		.av_readdatavalid       (1'b0),                                               //              (terminated)
		.av_waitrequest         (1'b0),                                               //              (terminated)
		.av_writebyteenable     (),                                                   //              (terminated)
		.av_lock                (),                                                   //              (terminated)
		.av_clken               (),                                                   //              (terminated)
		.uav_clken              (1'b0),                                               //              (terminated)
		.av_debugaccess         (),                                                   //              (terminated)
		.av_outputenable        (),                                                   //              (terminated)
		.uav_response           (),                                                   //              (terminated)
		.av_response            (2'b00),                                              //              (terminated)
		.uav_writeresponsevalid (),                                                   //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) lm96570_spi_in_1_s1_translator (
		.clk                    (clk_0_clk_clk),                                      //                      clk.clk
		.reset                  (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (lm96570_spi_in_1_s1_agent_m0_address),               // avalon_universal_slave_0.address
		.uav_burstcount         (lm96570_spi_in_1_s1_agent_m0_burstcount),            //                         .burstcount
		.uav_read               (lm96570_spi_in_1_s1_agent_m0_read),                  //                         .read
		.uav_write              (lm96570_spi_in_1_s1_agent_m0_write),                 //                         .write
		.uav_waitrequest        (lm96570_spi_in_1_s1_agent_m0_waitrequest),           //                         .waitrequest
		.uav_readdatavalid      (lm96570_spi_in_1_s1_agent_m0_readdatavalid),         //                         .readdatavalid
		.uav_byteenable         (lm96570_spi_in_1_s1_agent_m0_byteenable),            //                         .byteenable
		.uav_readdata           (lm96570_spi_in_1_s1_agent_m0_readdata),              //                         .readdata
		.uav_writedata          (lm96570_spi_in_1_s1_agent_m0_writedata),             //                         .writedata
		.uav_lock               (lm96570_spi_in_1_s1_agent_m0_lock),                  //                         .lock
		.uav_debugaccess        (lm96570_spi_in_1_s1_agent_m0_debugaccess),           //                         .debugaccess
		.av_address             (lm96570_spi_in_1_s1_address),                        //      avalon_anti_slave_0.address
		.av_write               (lm96570_spi_in_1_s1_write),                          //                         .write
		.av_readdata            (lm96570_spi_in_1_s1_readdata),                       //                         .readdata
		.av_writedata           (lm96570_spi_in_1_s1_writedata),                      //                         .writedata
		.av_chipselect          (lm96570_spi_in_1_s1_chipselect),                     //                         .chipselect
		.av_read                (),                                                   //              (terminated)
		.av_begintransfer       (),                                                   //              (terminated)
		.av_beginbursttransfer  (),                                                   //              (terminated)
		.av_burstcount          (),                                                   //              (terminated)
		.av_byteenable          (),                                                   //              (terminated)
		.av_readdatavalid       (1'b0),                                               //              (terminated)
		.av_waitrequest         (1'b0),                                               //              (terminated)
		.av_writebyteenable     (),                                                   //              (terminated)
		.av_lock                (),                                                   //              (terminated)
		.av_clken               (),                                                   //              (terminated)
		.uav_clken              (1'b0),                                               //              (terminated)
		.av_debugaccess         (),                                                   //              (terminated)
		.av_outputenable        (),                                                   //              (terminated)
		.uav_response           (),                                                   //              (terminated)
		.av_response            (2'b00),                                              //              (terminated)
		.uav_writeresponsevalid (),                                                   //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) lm96570_spi_out_2_s1_translator (
		.clk                    (clk_0_clk_clk),                                      //                      clk.clk
		.reset                  (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (lm96570_spi_out_2_s1_agent_m0_address),              // avalon_universal_slave_0.address
		.uav_burstcount         (lm96570_spi_out_2_s1_agent_m0_burstcount),           //                         .burstcount
		.uav_read               (lm96570_spi_out_2_s1_agent_m0_read),                 //                         .read
		.uav_write              (lm96570_spi_out_2_s1_agent_m0_write),                //                         .write
		.uav_waitrequest        (lm96570_spi_out_2_s1_agent_m0_waitrequest),          //                         .waitrequest
		.uav_readdatavalid      (lm96570_spi_out_2_s1_agent_m0_readdatavalid),        //                         .readdatavalid
		.uav_byteenable         (lm96570_spi_out_2_s1_agent_m0_byteenable),           //                         .byteenable
		.uav_readdata           (lm96570_spi_out_2_s1_agent_m0_readdata),             //                         .readdata
		.uav_writedata          (lm96570_spi_out_2_s1_agent_m0_writedata),            //                         .writedata
		.uav_lock               (lm96570_spi_out_2_s1_agent_m0_lock),                 //                         .lock
		.uav_debugaccess        (lm96570_spi_out_2_s1_agent_m0_debugaccess),          //                         .debugaccess
		.av_address             (lm96570_spi_out_2_s1_address),                       //      avalon_anti_slave_0.address
		.av_readdata            (lm96570_spi_out_2_s1_readdata),                      //                         .readdata
		.av_write               (),                                                   //              (terminated)
		.av_read                (),                                                   //              (terminated)
		.av_writedata           (),                                                   //              (terminated)
		.av_begintransfer       (),                                                   //              (terminated)
		.av_beginbursttransfer  (),                                                   //              (terminated)
		.av_burstcount          (),                                                   //              (terminated)
		.av_byteenable          (),                                                   //              (terminated)
		.av_readdatavalid       (1'b0),                                               //              (terminated)
		.av_waitrequest         (1'b0),                                               //              (terminated)
		.av_writebyteenable     (),                                                   //              (terminated)
		.av_lock                (),                                                   //              (terminated)
		.av_chipselect          (),                                                   //              (terminated)
		.av_clken               (),                                                   //              (terminated)
		.uav_clken              (1'b0),                                               //              (terminated)
		.av_debugaccess         (),                                                   //              (terminated)
		.av_outputenable        (),                                                   //              (terminated)
		.uav_response           (),                                                   //              (terminated)
		.av_response            (2'b00),                                              //              (terminated)
		.uav_writeresponsevalid (),                                                   //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) lm96570_spi_out_1_s1_translator (
		.clk                    (clk_0_clk_clk),                                      //                      clk.clk
		.reset                  (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (lm96570_spi_out_1_s1_agent_m0_address),              // avalon_universal_slave_0.address
		.uav_burstcount         (lm96570_spi_out_1_s1_agent_m0_burstcount),           //                         .burstcount
		.uav_read               (lm96570_spi_out_1_s1_agent_m0_read),                 //                         .read
		.uav_write              (lm96570_spi_out_1_s1_agent_m0_write),                //                         .write
		.uav_waitrequest        (lm96570_spi_out_1_s1_agent_m0_waitrequest),          //                         .waitrequest
		.uav_readdatavalid      (lm96570_spi_out_1_s1_agent_m0_readdatavalid),        //                         .readdatavalid
		.uav_byteenable         (lm96570_spi_out_1_s1_agent_m0_byteenable),           //                         .byteenable
		.uav_readdata           (lm96570_spi_out_1_s1_agent_m0_readdata),             //                         .readdata
		.uav_writedata          (lm96570_spi_out_1_s1_agent_m0_writedata),            //                         .writedata
		.uav_lock               (lm96570_spi_out_1_s1_agent_m0_lock),                 //                         .lock
		.uav_debugaccess        (lm96570_spi_out_1_s1_agent_m0_debugaccess),          //                         .debugaccess
		.av_address             (lm96570_spi_out_1_s1_address),                       //      avalon_anti_slave_0.address
		.av_readdata            (lm96570_spi_out_1_s1_readdata),                      //                         .readdata
		.av_write               (),                                                   //              (terminated)
		.av_read                (),                                                   //              (terminated)
		.av_writedata           (),                                                   //              (terminated)
		.av_begintransfer       (),                                                   //              (terminated)
		.av_beginbursttransfer  (),                                                   //              (terminated)
		.av_burstcount          (),                                                   //              (terminated)
		.av_byteenable          (),                                                   //              (terminated)
		.av_readdatavalid       (1'b0),                                               //              (terminated)
		.av_waitrequest         (1'b0),                                               //              (terminated)
		.av_writebyteenable     (),                                                   //              (terminated)
		.av_lock                (),                                                   //              (terminated)
		.av_chipselect          (),                                                   //              (terminated)
		.av_clken               (),                                                   //              (terminated)
		.uav_clken              (1'b0),                                               //              (terminated)
		.av_debugaccess         (),                                                   //              (terminated)
		.av_outputenable        (),                                                   //              (terminated)
		.uav_response           (),                                                   //              (terminated)
		.av_response            (2'b00),                                              //              (terminated)
		.uav_writeresponsevalid (),                                                   //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) lm96570_spi_out_0_s1_translator (
		.clk                    (clk_0_clk_clk),                                      //                      clk.clk
		.reset                  (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (lm96570_spi_out_0_s1_agent_m0_address),              // avalon_universal_slave_0.address
		.uav_burstcount         (lm96570_spi_out_0_s1_agent_m0_burstcount),           //                         .burstcount
		.uav_read               (lm96570_spi_out_0_s1_agent_m0_read),                 //                         .read
		.uav_write              (lm96570_spi_out_0_s1_agent_m0_write),                //                         .write
		.uav_waitrequest        (lm96570_spi_out_0_s1_agent_m0_waitrequest),          //                         .waitrequest
		.uav_readdatavalid      (lm96570_spi_out_0_s1_agent_m0_readdatavalid),        //                         .readdatavalid
		.uav_byteenable         (lm96570_spi_out_0_s1_agent_m0_byteenable),           //                         .byteenable
		.uav_readdata           (lm96570_spi_out_0_s1_agent_m0_readdata),             //                         .readdata
		.uav_writedata          (lm96570_spi_out_0_s1_agent_m0_writedata),            //                         .writedata
		.uav_lock               (lm96570_spi_out_0_s1_agent_m0_lock),                 //                         .lock
		.uav_debugaccess        (lm96570_spi_out_0_s1_agent_m0_debugaccess),          //                         .debugaccess
		.av_address             (lm96570_spi_out_0_s1_address),                       //      avalon_anti_slave_0.address
		.av_readdata            (lm96570_spi_out_0_s1_readdata),                      //                         .readdata
		.av_write               (),                                                   //              (terminated)
		.av_read                (),                                                   //              (terminated)
		.av_writedata           (),                                                   //              (terminated)
		.av_begintransfer       (),                                                   //              (terminated)
		.av_beginbursttransfer  (),                                                   //              (terminated)
		.av_burstcount          (),                                                   //              (terminated)
		.av_byteenable          (),                                                   //              (terminated)
		.av_readdatavalid       (1'b0),                                               //              (terminated)
		.av_waitrequest         (1'b0),                                               //              (terminated)
		.av_writebyteenable     (),                                                   //              (terminated)
		.av_lock                (),                                                   //              (terminated)
		.av_chipselect          (),                                                   //              (terminated)
		.av_clken               (),                                                   //              (terminated)
		.uav_clken              (1'b0),                                               //              (terminated)
		.av_debugaccess         (),                                                   //              (terminated)
		.av_outputenable        (),                                                   //              (terminated)
		.uav_response           (),                                                   //              (terminated)
		.av_response            (2'b00),                                              //              (terminated)
		.uav_writeresponsevalid (),                                                   //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) lm96570_spi_num_of_bits_s1_translator (
		.clk                    (clk_0_clk_clk),                                      //                      clk.clk
		.reset                  (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (lm96570_spi_num_of_bits_s1_agent_m0_address),        // avalon_universal_slave_0.address
		.uav_burstcount         (lm96570_spi_num_of_bits_s1_agent_m0_burstcount),     //                         .burstcount
		.uav_read               (lm96570_spi_num_of_bits_s1_agent_m0_read),           //                         .read
		.uav_write              (lm96570_spi_num_of_bits_s1_agent_m0_write),          //                         .write
		.uav_waitrequest        (lm96570_spi_num_of_bits_s1_agent_m0_waitrequest),    //                         .waitrequest
		.uav_readdatavalid      (lm96570_spi_num_of_bits_s1_agent_m0_readdatavalid),  //                         .readdatavalid
		.uav_byteenable         (lm96570_spi_num_of_bits_s1_agent_m0_byteenable),     //                         .byteenable
		.uav_readdata           (lm96570_spi_num_of_bits_s1_agent_m0_readdata),       //                         .readdata
		.uav_writedata          (lm96570_spi_num_of_bits_s1_agent_m0_writedata),      //                         .writedata
		.uav_lock               (lm96570_spi_num_of_bits_s1_agent_m0_lock),           //                         .lock
		.uav_debugaccess        (lm96570_spi_num_of_bits_s1_agent_m0_debugaccess),    //                         .debugaccess
		.av_address             (lm96570_spi_num_of_bits_s1_address),                 //      avalon_anti_slave_0.address
		.av_write               (lm96570_spi_num_of_bits_s1_write),                   //                         .write
		.av_readdata            (lm96570_spi_num_of_bits_s1_readdata),                //                         .readdata
		.av_writedata           (lm96570_spi_num_of_bits_s1_writedata),               //                         .writedata
		.av_chipselect          (lm96570_spi_num_of_bits_s1_chipselect),              //                         .chipselect
		.av_read                (),                                                   //              (terminated)
		.av_begintransfer       (),                                                   //              (terminated)
		.av_beginbursttransfer  (),                                                   //              (terminated)
		.av_burstcount          (),                                                   //              (terminated)
		.av_byteenable          (),                                                   //              (terminated)
		.av_readdatavalid       (1'b0),                                               //              (terminated)
		.av_waitrequest         (1'b0),                                               //              (terminated)
		.av_writebyteenable     (),                                                   //              (terminated)
		.av_lock                (),                                                   //              (terminated)
		.av_clken               (),                                                   //              (terminated)
		.uav_clken              (1'b0),                                               //              (terminated)
		.av_debugaccess         (),                                                   //              (terminated)
		.av_outputenable        (),                                                   //              (terminated)
		.uav_response           (),                                                   //              (terminated)
		.av_response            (2'b00),                                              //              (terminated)
		.uav_writeresponsevalid (),                                                   //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) general_cnt_s1_translator (
		.clk                    (clk_0_clk_clk),                                      //                      clk.clk
		.reset                  (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (general_cnt_s1_agent_m0_address),                    // avalon_universal_slave_0.address
		.uav_burstcount         (general_cnt_s1_agent_m0_burstcount),                 //                         .burstcount
		.uav_read               (general_cnt_s1_agent_m0_read),                       //                         .read
		.uav_write              (general_cnt_s1_agent_m0_write),                      //                         .write
		.uav_waitrequest        (general_cnt_s1_agent_m0_waitrequest),                //                         .waitrequest
		.uav_readdatavalid      (general_cnt_s1_agent_m0_readdatavalid),              //                         .readdatavalid
		.uav_byteenable         (general_cnt_s1_agent_m0_byteenable),                 //                         .byteenable
		.uav_readdata           (general_cnt_s1_agent_m0_readdata),                   //                         .readdata
		.uav_writedata          (general_cnt_s1_agent_m0_writedata),                  //                         .writedata
		.uav_lock               (general_cnt_s1_agent_m0_lock),                       //                         .lock
		.uav_debugaccess        (general_cnt_s1_agent_m0_debugaccess),                //                         .debugaccess
		.av_address             (general_cnt_s1_address),                             //      avalon_anti_slave_0.address
		.av_write               (general_cnt_s1_write),                               //                         .write
		.av_readdata            (general_cnt_s1_readdata),                            //                         .readdata
		.av_writedata           (general_cnt_s1_writedata),                           //                         .writedata
		.av_chipselect          (general_cnt_s1_chipselect),                          //                         .chipselect
		.av_read                (),                                                   //              (terminated)
		.av_begintransfer       (),                                                   //              (terminated)
		.av_beginbursttransfer  (),                                                   //              (terminated)
		.av_burstcount          (),                                                   //              (terminated)
		.av_byteenable          (),                                                   //              (terminated)
		.av_readdatavalid       (1'b0),                                               //              (terminated)
		.av_waitrequest         (1'b0),                                               //              (terminated)
		.av_writebyteenable     (),                                                   //              (terminated)
		.av_lock                (),                                                   //              (terminated)
		.av_clken               (),                                                   //              (terminated)
		.uav_clken              (1'b0),                                               //              (terminated)
		.av_debugaccess         (),                                                   //              (terminated)
		.av_outputenable        (),                                                   //              (terminated)
		.uav_response           (),                                                   //              (terminated)
		.av_response            (2'b00),                                              //              (terminated)
		.uav_writeresponsevalid (),                                                   //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (1),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) ad9276_spi_spi_control_port_translator (
		.clk                    (clk_0_clk_clk),                                      //                      clk.clk
		.reset                  (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (ad9276_spi_spi_control_port_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (ad9276_spi_spi_control_port_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (ad9276_spi_spi_control_port_agent_m0_read),          //                         .read
		.uav_write              (ad9276_spi_spi_control_port_agent_m0_write),         //                         .write
		.uav_waitrequest        (ad9276_spi_spi_control_port_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (ad9276_spi_spi_control_port_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (ad9276_spi_spi_control_port_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (ad9276_spi_spi_control_port_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (ad9276_spi_spi_control_port_agent_m0_writedata),     //                         .writedata
		.uav_lock               (ad9276_spi_spi_control_port_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (ad9276_spi_spi_control_port_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (ad9276_spi_spi_control_port_address),                //      avalon_anti_slave_0.address
		.av_write               (ad9276_spi_spi_control_port_write),                  //                         .write
		.av_read                (ad9276_spi_spi_control_port_read),                   //                         .read
		.av_readdata            (ad9276_spi_spi_control_port_readdata),               //                         .readdata
		.av_writedata           (ad9276_spi_spi_control_port_writedata),              //                         .writedata
		.av_chipselect          (ad9276_spi_spi_control_port_chipselect),             //                         .chipselect
		.av_begintransfer       (),                                                   //              (terminated)
		.av_beginbursttransfer  (),                                                   //              (terminated)
		.av_burstcount          (),                                                   //              (terminated)
		.av_byteenable          (),                                                   //              (terminated)
		.av_readdatavalid       (1'b0),                                               //              (terminated)
		.av_waitrequest         (1'b0),                                               //              (terminated)
		.av_writebyteenable     (),                                                   //              (terminated)
		.av_lock                (),                                                   //              (terminated)
		.av_clken               (),                                                   //              (terminated)
		.uav_clken              (1'b0),                                               //              (terminated)
		.av_debugaccess         (),                                                   //              (terminated)
		.av_outputenable        (),                                                   //              (terminated)
		.uav_response           (),                                                   //              (terminated)
		.av_response            (2'b00),                                              //              (terminated)
		.uav_writeresponsevalid (),                                                   //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                //              (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_ORI_BURST_SIZE_H      (107),
		.PKT_ORI_BURST_SIZE_L      (105),
		.PKT_RESPONSE_STATUS_H     (104),
		.PKT_RESPONSE_STATUS_L     (103),
		.PKT_QOS_H                 (86),
		.PKT_QOS_L                 (86),
		.PKT_DATA_SIDEBAND_H       (84),
		.PKT_DATA_SIDEBAND_L       (84),
		.PKT_ADDR_SIDEBAND_H       (83),
		.PKT_ADDR_SIDEBAND_L       (83),
		.PKT_BURST_TYPE_H          (82),
		.PKT_BURST_TYPE_L          (81),
		.PKT_CACHE_H               (102),
		.PKT_CACHE_L               (99),
		.PKT_THREAD_ID_H           (95),
		.PKT_THREAD_ID_L           (95),
		.PKT_BURST_SIZE_H          (80),
		.PKT_BURST_SIZE_L          (78),
		.PKT_TRANS_EXCLUSIVE       (73),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (85),
		.PKT_PROTECTION_H          (98),
		.PKT_PROTECTION_L          (96),
		.PKT_BURSTWRAP_H           (77),
		.PKT_BURSTWRAP_L           (77),
		.PKT_BYTE_CNT_H            (76),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (90),
		.PKT_SRC_ID_L              (87),
		.PKT_DEST_ID_H             (94),
		.PKT_DEST_ID_L             (91),
		.ST_DATA_W                 (108),
		.ST_CHANNEL_W              (9),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (0),
		.BURSTWRAP_VALUE           (1),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) master_0_master_agent (
		.clk                   (clk_0_clk_clk),                                                      //       clk.clk
		.reset                 (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),                 // clk_reset.reset
		.av_address            (master_0_master_translator_avalon_universal_master_0_address),       //        av.address
		.av_write              (master_0_master_translator_avalon_universal_master_0_write),         //          .write
		.av_read               (master_0_master_translator_avalon_universal_master_0_read),          //          .read
		.av_writedata          (master_0_master_translator_avalon_universal_master_0_writedata),     //          .writedata
		.av_readdata           (master_0_master_translator_avalon_universal_master_0_readdata),      //          .readdata
		.av_waitrequest        (master_0_master_translator_avalon_universal_master_0_waitrequest),   //          .waitrequest
		.av_readdatavalid      (master_0_master_translator_avalon_universal_master_0_readdatavalid), //          .readdatavalid
		.av_byteenable         (master_0_master_translator_avalon_universal_master_0_byteenable),    //          .byteenable
		.av_burstcount         (master_0_master_translator_avalon_universal_master_0_burstcount),    //          .burstcount
		.av_debugaccess        (master_0_master_translator_avalon_universal_master_0_debugaccess),   //          .debugaccess
		.av_lock               (master_0_master_translator_avalon_universal_master_0_lock),          //          .lock
		.cp_valid              (master_0_master_agent_cp_valid),                                     //        cp.valid
		.cp_data               (master_0_master_agent_cp_data),                                      //          .data
		.cp_startofpacket      (master_0_master_agent_cp_startofpacket),                             //          .startofpacket
		.cp_endofpacket        (master_0_master_agent_cp_endofpacket),                               //          .endofpacket
		.cp_ready              (master_0_master_agent_cp_ready),                                     //          .ready
		.rp_valid              (master_0_master_limiter_rsp_src_valid),                              //        rp.valid
		.rp_data               (master_0_master_limiter_rsp_src_data),                               //          .data
		.rp_channel            (master_0_master_limiter_rsp_src_channel),                            //          .channel
		.rp_startofpacket      (master_0_master_limiter_rsp_src_startofpacket),                      //          .startofpacket
		.rp_endofpacket        (master_0_master_limiter_rsp_src_endofpacket),                        //          .endofpacket
		.rp_ready              (master_0_master_limiter_rsp_src_ready),                              //          .ready
		.av_response           (),                                                                   // (terminated)
		.av_writeresponsevalid ()                                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (107),
		.PKT_ORI_BURST_SIZE_L      (105),
		.PKT_RESPONSE_STATUS_H     (104),
		.PKT_RESPONSE_STATUS_L     (103),
		.PKT_BURST_SIZE_H          (80),
		.PKT_BURST_SIZE_L          (78),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (85),
		.PKT_PROTECTION_H          (98),
		.PKT_PROTECTION_L          (96),
		.PKT_BURSTWRAP_H           (77),
		.PKT_BURSTWRAP_L           (77),
		.PKT_BYTE_CNT_H            (76),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (90),
		.PKT_SRC_ID_L              (87),
		.PKT_DEST_ID_H             (94),
		.PKT_DEST_ID_L             (91),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (9),
		.ST_DATA_W                 (108),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) lm96570_spi_in_2_s1_agent (
		.clk                     (clk_0_clk_clk),                                        //             clk.clk
		.reset                   (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),   //       clk_reset.reset
		.m0_address              (lm96570_spi_in_2_s1_agent_m0_address),                 //              m0.address
		.m0_burstcount           (lm96570_spi_in_2_s1_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (lm96570_spi_in_2_s1_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (lm96570_spi_in_2_s1_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (lm96570_spi_in_2_s1_agent_m0_lock),                    //                .lock
		.m0_readdata             (lm96570_spi_in_2_s1_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (lm96570_spi_in_2_s1_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (lm96570_spi_in_2_s1_agent_m0_read),                    //                .read
		.m0_waitrequest          (lm96570_spi_in_2_s1_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (lm96570_spi_in_2_s1_agent_m0_writedata),               //                .writedata
		.m0_write                (lm96570_spi_in_2_s1_agent_m0_write),                   //                .write
		.rp_endofpacket          (lm96570_spi_in_2_s1_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (lm96570_spi_in_2_s1_agent_rp_ready),                   //                .ready
		.rp_valid                (lm96570_spi_in_2_s1_agent_rp_valid),                   //                .valid
		.rp_data                 (lm96570_spi_in_2_s1_agent_rp_data),                    //                .data
		.rp_startofpacket        (lm96570_spi_in_2_s1_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_src_ready),                                    //              cp.ready
		.cp_valid                (cmd_mux_src_valid),                                    //                .valid
		.cp_data                 (cmd_mux_src_data),                                     //                .data
		.cp_startofpacket        (cmd_mux_src_startofpacket),                            //                .startofpacket
		.cp_endofpacket          (cmd_mux_src_endofpacket),                              //                .endofpacket
		.cp_channel              (cmd_mux_src_channel),                                  //                .channel
		.rf_sink_ready           (lm96570_spi_in_2_s1_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (lm96570_spi_in_2_s1_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (lm96570_spi_in_2_s1_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (lm96570_spi_in_2_s1_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (lm96570_spi_in_2_s1_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (lm96570_spi_in_2_s1_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (lm96570_spi_in_2_s1_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (lm96570_spi_in_2_s1_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (lm96570_spi_in_2_s1_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (lm96570_spi_in_2_s1_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_out_0_ready),                        // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_out_0_valid),                        //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_out_0_data),                         //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_out_0_error),                        //                .error
		.rdata_fifo_src_ready    (lm96570_spi_in_2_s1_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (lm96570_spi_in_2_s1_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (lm96570_spi_in_2_s1_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (109),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) lm96570_spi_in_2_s1_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                        //       clk.clk
		.reset             (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),   // clk_reset.reset
		.in_data           (lm96570_spi_in_2_s1_agent_rf_source_data),             //        in.data
		.in_valid          (lm96570_spi_in_2_s1_agent_rf_source_valid),            //          .valid
		.in_ready          (lm96570_spi_in_2_s1_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (lm96570_spi_in_2_s1_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (lm96570_spi_in_2_s1_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (lm96570_spi_in_2_s1_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (lm96570_spi_in_2_s1_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (lm96570_spi_in_2_s1_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (lm96570_spi_in_2_s1_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (lm96570_spi_in_2_s1_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                // (terminated)
		.csr_read          (1'b0),                                                 // (terminated)
		.csr_write         (1'b0),                                                 // (terminated)
		.csr_readdata      (),                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                 // (terminated)
		.almost_full_data  (),                                                     // (terminated)
		.almost_empty_data (),                                                     // (terminated)
		.in_empty          (1'b0),                                                 // (terminated)
		.out_empty         (),                                                     // (terminated)
		.in_error          (1'b0),                                                 // (terminated)
		.out_error         (),                                                     // (terminated)
		.in_channel        (1'b0),                                                 // (terminated)
		.out_channel       ()                                                      // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (107),
		.PKT_ORI_BURST_SIZE_L      (105),
		.PKT_RESPONSE_STATUS_H     (104),
		.PKT_RESPONSE_STATUS_L     (103),
		.PKT_BURST_SIZE_H          (80),
		.PKT_BURST_SIZE_L          (78),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (85),
		.PKT_PROTECTION_H          (98),
		.PKT_PROTECTION_L          (96),
		.PKT_BURSTWRAP_H           (77),
		.PKT_BURSTWRAP_L           (77),
		.PKT_BYTE_CNT_H            (76),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (90),
		.PKT_SRC_ID_L              (87),
		.PKT_DEST_ID_H             (94),
		.PKT_DEST_ID_L             (91),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (9),
		.ST_DATA_W                 (108),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) lm96570_spi_in_0_s1_agent (
		.clk                     (clk_0_clk_clk),                                        //             clk.clk
		.reset                   (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),   //       clk_reset.reset
		.m0_address              (lm96570_spi_in_0_s1_agent_m0_address),                 //              m0.address
		.m0_burstcount           (lm96570_spi_in_0_s1_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (lm96570_spi_in_0_s1_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (lm96570_spi_in_0_s1_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (lm96570_spi_in_0_s1_agent_m0_lock),                    //                .lock
		.m0_readdata             (lm96570_spi_in_0_s1_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (lm96570_spi_in_0_s1_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (lm96570_spi_in_0_s1_agent_m0_read),                    //                .read
		.m0_waitrequest          (lm96570_spi_in_0_s1_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (lm96570_spi_in_0_s1_agent_m0_writedata),               //                .writedata
		.m0_write                (lm96570_spi_in_0_s1_agent_m0_write),                   //                .write
		.rp_endofpacket          (lm96570_spi_in_0_s1_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (lm96570_spi_in_0_s1_agent_rp_ready),                   //                .ready
		.rp_valid                (lm96570_spi_in_0_s1_agent_rp_valid),                   //                .valid
		.rp_data                 (lm96570_spi_in_0_s1_agent_rp_data),                    //                .data
		.rp_startofpacket        (lm96570_spi_in_0_s1_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_001_src_ready),                                //              cp.ready
		.cp_valid                (cmd_mux_001_src_valid),                                //                .valid
		.cp_data                 (cmd_mux_001_src_data),                                 //                .data
		.cp_startofpacket        (cmd_mux_001_src_startofpacket),                        //                .startofpacket
		.cp_endofpacket          (cmd_mux_001_src_endofpacket),                          //                .endofpacket
		.cp_channel              (cmd_mux_001_src_channel),                              //                .channel
		.rf_sink_ready           (lm96570_spi_in_0_s1_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (lm96570_spi_in_0_s1_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (lm96570_spi_in_0_s1_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (lm96570_spi_in_0_s1_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (lm96570_spi_in_0_s1_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (lm96570_spi_in_0_s1_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (lm96570_spi_in_0_s1_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (lm96570_spi_in_0_s1_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (lm96570_spi_in_0_s1_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (lm96570_spi_in_0_s1_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_001_out_0_ready),                    // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_001_out_0_valid),                    //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_001_out_0_data),                     //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_001_out_0_error),                    //                .error
		.rdata_fifo_src_ready    (lm96570_spi_in_0_s1_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (lm96570_spi_in_0_s1_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (lm96570_spi_in_0_s1_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (109),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) lm96570_spi_in_0_s1_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                        //       clk.clk
		.reset             (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),   // clk_reset.reset
		.in_data           (lm96570_spi_in_0_s1_agent_rf_source_data),             //        in.data
		.in_valid          (lm96570_spi_in_0_s1_agent_rf_source_valid),            //          .valid
		.in_ready          (lm96570_spi_in_0_s1_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (lm96570_spi_in_0_s1_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (lm96570_spi_in_0_s1_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (lm96570_spi_in_0_s1_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (lm96570_spi_in_0_s1_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (lm96570_spi_in_0_s1_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (lm96570_spi_in_0_s1_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (lm96570_spi_in_0_s1_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                // (terminated)
		.csr_read          (1'b0),                                                 // (terminated)
		.csr_write         (1'b0),                                                 // (terminated)
		.csr_readdata      (),                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                 // (terminated)
		.almost_full_data  (),                                                     // (terminated)
		.almost_empty_data (),                                                     // (terminated)
		.in_empty          (1'b0),                                                 // (terminated)
		.out_empty         (),                                                     // (terminated)
		.in_error          (1'b0),                                                 // (terminated)
		.out_error         (),                                                     // (terminated)
		.in_channel        (1'b0),                                                 // (terminated)
		.out_channel       ()                                                      // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (107),
		.PKT_ORI_BURST_SIZE_L      (105),
		.PKT_RESPONSE_STATUS_H     (104),
		.PKT_RESPONSE_STATUS_L     (103),
		.PKT_BURST_SIZE_H          (80),
		.PKT_BURST_SIZE_L          (78),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (85),
		.PKT_PROTECTION_H          (98),
		.PKT_PROTECTION_L          (96),
		.PKT_BURSTWRAP_H           (77),
		.PKT_BURSTWRAP_L           (77),
		.PKT_BYTE_CNT_H            (76),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (90),
		.PKT_SRC_ID_L              (87),
		.PKT_DEST_ID_H             (94),
		.PKT_DEST_ID_L             (91),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (9),
		.ST_DATA_W                 (108),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) lm96570_spi_in_1_s1_agent (
		.clk                     (clk_0_clk_clk),                                        //             clk.clk
		.reset                   (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),   //       clk_reset.reset
		.m0_address              (lm96570_spi_in_1_s1_agent_m0_address),                 //              m0.address
		.m0_burstcount           (lm96570_spi_in_1_s1_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (lm96570_spi_in_1_s1_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (lm96570_spi_in_1_s1_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (lm96570_spi_in_1_s1_agent_m0_lock),                    //                .lock
		.m0_readdata             (lm96570_spi_in_1_s1_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (lm96570_spi_in_1_s1_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (lm96570_spi_in_1_s1_agent_m0_read),                    //                .read
		.m0_waitrequest          (lm96570_spi_in_1_s1_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (lm96570_spi_in_1_s1_agent_m0_writedata),               //                .writedata
		.m0_write                (lm96570_spi_in_1_s1_agent_m0_write),                   //                .write
		.rp_endofpacket          (lm96570_spi_in_1_s1_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (lm96570_spi_in_1_s1_agent_rp_ready),                   //                .ready
		.rp_valid                (lm96570_spi_in_1_s1_agent_rp_valid),                   //                .valid
		.rp_data                 (lm96570_spi_in_1_s1_agent_rp_data),                    //                .data
		.rp_startofpacket        (lm96570_spi_in_1_s1_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_002_src_ready),                                //              cp.ready
		.cp_valid                (cmd_mux_002_src_valid),                                //                .valid
		.cp_data                 (cmd_mux_002_src_data),                                 //                .data
		.cp_startofpacket        (cmd_mux_002_src_startofpacket),                        //                .startofpacket
		.cp_endofpacket          (cmd_mux_002_src_endofpacket),                          //                .endofpacket
		.cp_channel              (cmd_mux_002_src_channel),                              //                .channel
		.rf_sink_ready           (lm96570_spi_in_1_s1_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (lm96570_spi_in_1_s1_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (lm96570_spi_in_1_s1_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (lm96570_spi_in_1_s1_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (lm96570_spi_in_1_s1_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (lm96570_spi_in_1_s1_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (lm96570_spi_in_1_s1_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (lm96570_spi_in_1_s1_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (lm96570_spi_in_1_s1_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (lm96570_spi_in_1_s1_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_002_out_0_ready),                    // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_002_out_0_valid),                    //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_002_out_0_data),                     //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_002_out_0_error),                    //                .error
		.rdata_fifo_src_ready    (lm96570_spi_in_1_s1_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (lm96570_spi_in_1_s1_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (lm96570_spi_in_1_s1_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (109),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) lm96570_spi_in_1_s1_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                        //       clk.clk
		.reset             (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),   // clk_reset.reset
		.in_data           (lm96570_spi_in_1_s1_agent_rf_source_data),             //        in.data
		.in_valid          (lm96570_spi_in_1_s1_agent_rf_source_valid),            //          .valid
		.in_ready          (lm96570_spi_in_1_s1_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (lm96570_spi_in_1_s1_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (lm96570_spi_in_1_s1_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (lm96570_spi_in_1_s1_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (lm96570_spi_in_1_s1_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (lm96570_spi_in_1_s1_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (lm96570_spi_in_1_s1_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (lm96570_spi_in_1_s1_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                // (terminated)
		.csr_read          (1'b0),                                                 // (terminated)
		.csr_write         (1'b0),                                                 // (terminated)
		.csr_readdata      (),                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                 // (terminated)
		.almost_full_data  (),                                                     // (terminated)
		.almost_empty_data (),                                                     // (terminated)
		.in_empty          (1'b0),                                                 // (terminated)
		.out_empty         (),                                                     // (terminated)
		.in_error          (1'b0),                                                 // (terminated)
		.out_error         (),                                                     // (terminated)
		.in_channel        (1'b0),                                                 // (terminated)
		.out_channel       ()                                                      // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (107),
		.PKT_ORI_BURST_SIZE_L      (105),
		.PKT_RESPONSE_STATUS_H     (104),
		.PKT_RESPONSE_STATUS_L     (103),
		.PKT_BURST_SIZE_H          (80),
		.PKT_BURST_SIZE_L          (78),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (85),
		.PKT_PROTECTION_H          (98),
		.PKT_PROTECTION_L          (96),
		.PKT_BURSTWRAP_H           (77),
		.PKT_BURSTWRAP_L           (77),
		.PKT_BYTE_CNT_H            (76),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (90),
		.PKT_SRC_ID_L              (87),
		.PKT_DEST_ID_H             (94),
		.PKT_DEST_ID_L             (91),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (9),
		.ST_DATA_W                 (108),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) lm96570_spi_out_2_s1_agent (
		.clk                     (clk_0_clk_clk),                                         //             clk.clk
		.reset                   (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),    //       clk_reset.reset
		.m0_address              (lm96570_spi_out_2_s1_agent_m0_address),                 //              m0.address
		.m0_burstcount           (lm96570_spi_out_2_s1_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (lm96570_spi_out_2_s1_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (lm96570_spi_out_2_s1_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (lm96570_spi_out_2_s1_agent_m0_lock),                    //                .lock
		.m0_readdata             (lm96570_spi_out_2_s1_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (lm96570_spi_out_2_s1_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (lm96570_spi_out_2_s1_agent_m0_read),                    //                .read
		.m0_waitrequest          (lm96570_spi_out_2_s1_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (lm96570_spi_out_2_s1_agent_m0_writedata),               //                .writedata
		.m0_write                (lm96570_spi_out_2_s1_agent_m0_write),                   //                .write
		.rp_endofpacket          (lm96570_spi_out_2_s1_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (lm96570_spi_out_2_s1_agent_rp_ready),                   //                .ready
		.rp_valid                (lm96570_spi_out_2_s1_agent_rp_valid),                   //                .valid
		.rp_data                 (lm96570_spi_out_2_s1_agent_rp_data),                    //                .data
		.rp_startofpacket        (lm96570_spi_out_2_s1_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_003_src_ready),                                 //              cp.ready
		.cp_valid                (cmd_mux_003_src_valid),                                 //                .valid
		.cp_data                 (cmd_mux_003_src_data),                                  //                .data
		.cp_startofpacket        (cmd_mux_003_src_startofpacket),                         //                .startofpacket
		.cp_endofpacket          (cmd_mux_003_src_endofpacket),                           //                .endofpacket
		.cp_channel              (cmd_mux_003_src_channel),                               //                .channel
		.rf_sink_ready           (lm96570_spi_out_2_s1_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (lm96570_spi_out_2_s1_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (lm96570_spi_out_2_s1_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (lm96570_spi_out_2_s1_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (lm96570_spi_out_2_s1_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (lm96570_spi_out_2_s1_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (lm96570_spi_out_2_s1_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (lm96570_spi_out_2_s1_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (lm96570_spi_out_2_s1_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (lm96570_spi_out_2_s1_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_003_out_0_ready),                     // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_003_out_0_valid),                     //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_003_out_0_data),                      //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_003_out_0_error),                     //                .error
		.rdata_fifo_src_ready    (lm96570_spi_out_2_s1_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (lm96570_spi_out_2_s1_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (lm96570_spi_out_2_s1_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                   //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (109),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) lm96570_spi_out_2_s1_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                         //       clk.clk
		.reset             (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),    // clk_reset.reset
		.in_data           (lm96570_spi_out_2_s1_agent_rf_source_data),             //        in.data
		.in_valid          (lm96570_spi_out_2_s1_agent_rf_source_valid),            //          .valid
		.in_ready          (lm96570_spi_out_2_s1_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (lm96570_spi_out_2_s1_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (lm96570_spi_out_2_s1_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (lm96570_spi_out_2_s1_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (lm96570_spi_out_2_s1_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (lm96570_spi_out_2_s1_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (lm96570_spi_out_2_s1_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (lm96570_spi_out_2_s1_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                 // (terminated)
		.csr_read          (1'b0),                                                  // (terminated)
		.csr_write         (1'b0),                                                  // (terminated)
		.csr_readdata      (),                                                      // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                  // (terminated)
		.almost_full_data  (),                                                      // (terminated)
		.almost_empty_data (),                                                      // (terminated)
		.in_empty          (1'b0),                                                  // (terminated)
		.out_empty         (),                                                      // (terminated)
		.in_error          (1'b0),                                                  // (terminated)
		.out_error         (),                                                      // (terminated)
		.in_channel        (1'b0),                                                  // (terminated)
		.out_channel       ()                                                       // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (107),
		.PKT_ORI_BURST_SIZE_L      (105),
		.PKT_RESPONSE_STATUS_H     (104),
		.PKT_RESPONSE_STATUS_L     (103),
		.PKT_BURST_SIZE_H          (80),
		.PKT_BURST_SIZE_L          (78),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (85),
		.PKT_PROTECTION_H          (98),
		.PKT_PROTECTION_L          (96),
		.PKT_BURSTWRAP_H           (77),
		.PKT_BURSTWRAP_L           (77),
		.PKT_BYTE_CNT_H            (76),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (90),
		.PKT_SRC_ID_L              (87),
		.PKT_DEST_ID_H             (94),
		.PKT_DEST_ID_L             (91),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (9),
		.ST_DATA_W                 (108),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) lm96570_spi_out_1_s1_agent (
		.clk                     (clk_0_clk_clk),                                         //             clk.clk
		.reset                   (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),    //       clk_reset.reset
		.m0_address              (lm96570_spi_out_1_s1_agent_m0_address),                 //              m0.address
		.m0_burstcount           (lm96570_spi_out_1_s1_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (lm96570_spi_out_1_s1_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (lm96570_spi_out_1_s1_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (lm96570_spi_out_1_s1_agent_m0_lock),                    //                .lock
		.m0_readdata             (lm96570_spi_out_1_s1_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (lm96570_spi_out_1_s1_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (lm96570_spi_out_1_s1_agent_m0_read),                    //                .read
		.m0_waitrequest          (lm96570_spi_out_1_s1_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (lm96570_spi_out_1_s1_agent_m0_writedata),               //                .writedata
		.m0_write                (lm96570_spi_out_1_s1_agent_m0_write),                   //                .write
		.rp_endofpacket          (lm96570_spi_out_1_s1_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (lm96570_spi_out_1_s1_agent_rp_ready),                   //                .ready
		.rp_valid                (lm96570_spi_out_1_s1_agent_rp_valid),                   //                .valid
		.rp_data                 (lm96570_spi_out_1_s1_agent_rp_data),                    //                .data
		.rp_startofpacket        (lm96570_spi_out_1_s1_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_004_src_ready),                                 //              cp.ready
		.cp_valid                (cmd_mux_004_src_valid),                                 //                .valid
		.cp_data                 (cmd_mux_004_src_data),                                  //                .data
		.cp_startofpacket        (cmd_mux_004_src_startofpacket),                         //                .startofpacket
		.cp_endofpacket          (cmd_mux_004_src_endofpacket),                           //                .endofpacket
		.cp_channel              (cmd_mux_004_src_channel),                               //                .channel
		.rf_sink_ready           (lm96570_spi_out_1_s1_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (lm96570_spi_out_1_s1_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (lm96570_spi_out_1_s1_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (lm96570_spi_out_1_s1_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (lm96570_spi_out_1_s1_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (lm96570_spi_out_1_s1_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (lm96570_spi_out_1_s1_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (lm96570_spi_out_1_s1_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (lm96570_spi_out_1_s1_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (lm96570_spi_out_1_s1_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_004_out_0_ready),                     // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_004_out_0_valid),                     //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_004_out_0_data),                      //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_004_out_0_error),                     //                .error
		.rdata_fifo_src_ready    (lm96570_spi_out_1_s1_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (lm96570_spi_out_1_s1_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (lm96570_spi_out_1_s1_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                   //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (109),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) lm96570_spi_out_1_s1_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                         //       clk.clk
		.reset             (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),    // clk_reset.reset
		.in_data           (lm96570_spi_out_1_s1_agent_rf_source_data),             //        in.data
		.in_valid          (lm96570_spi_out_1_s1_agent_rf_source_valid),            //          .valid
		.in_ready          (lm96570_spi_out_1_s1_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (lm96570_spi_out_1_s1_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (lm96570_spi_out_1_s1_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (lm96570_spi_out_1_s1_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (lm96570_spi_out_1_s1_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (lm96570_spi_out_1_s1_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (lm96570_spi_out_1_s1_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (lm96570_spi_out_1_s1_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                 // (terminated)
		.csr_read          (1'b0),                                                  // (terminated)
		.csr_write         (1'b0),                                                  // (terminated)
		.csr_readdata      (),                                                      // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                  // (terminated)
		.almost_full_data  (),                                                      // (terminated)
		.almost_empty_data (),                                                      // (terminated)
		.in_empty          (1'b0),                                                  // (terminated)
		.out_empty         (),                                                      // (terminated)
		.in_error          (1'b0),                                                  // (terminated)
		.out_error         (),                                                      // (terminated)
		.in_channel        (1'b0),                                                  // (terminated)
		.out_channel       ()                                                       // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (107),
		.PKT_ORI_BURST_SIZE_L      (105),
		.PKT_RESPONSE_STATUS_H     (104),
		.PKT_RESPONSE_STATUS_L     (103),
		.PKT_BURST_SIZE_H          (80),
		.PKT_BURST_SIZE_L          (78),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (85),
		.PKT_PROTECTION_H          (98),
		.PKT_PROTECTION_L          (96),
		.PKT_BURSTWRAP_H           (77),
		.PKT_BURSTWRAP_L           (77),
		.PKT_BYTE_CNT_H            (76),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (90),
		.PKT_SRC_ID_L              (87),
		.PKT_DEST_ID_H             (94),
		.PKT_DEST_ID_L             (91),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (9),
		.ST_DATA_W                 (108),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) lm96570_spi_out_0_s1_agent (
		.clk                     (clk_0_clk_clk),                                         //             clk.clk
		.reset                   (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),    //       clk_reset.reset
		.m0_address              (lm96570_spi_out_0_s1_agent_m0_address),                 //              m0.address
		.m0_burstcount           (lm96570_spi_out_0_s1_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (lm96570_spi_out_0_s1_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (lm96570_spi_out_0_s1_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (lm96570_spi_out_0_s1_agent_m0_lock),                    //                .lock
		.m0_readdata             (lm96570_spi_out_0_s1_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (lm96570_spi_out_0_s1_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (lm96570_spi_out_0_s1_agent_m0_read),                    //                .read
		.m0_waitrequest          (lm96570_spi_out_0_s1_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (lm96570_spi_out_0_s1_agent_m0_writedata),               //                .writedata
		.m0_write                (lm96570_spi_out_0_s1_agent_m0_write),                   //                .write
		.rp_endofpacket          (lm96570_spi_out_0_s1_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (lm96570_spi_out_0_s1_agent_rp_ready),                   //                .ready
		.rp_valid                (lm96570_spi_out_0_s1_agent_rp_valid),                   //                .valid
		.rp_data                 (lm96570_spi_out_0_s1_agent_rp_data),                    //                .data
		.rp_startofpacket        (lm96570_spi_out_0_s1_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_005_src_ready),                                 //              cp.ready
		.cp_valid                (cmd_mux_005_src_valid),                                 //                .valid
		.cp_data                 (cmd_mux_005_src_data),                                  //                .data
		.cp_startofpacket        (cmd_mux_005_src_startofpacket),                         //                .startofpacket
		.cp_endofpacket          (cmd_mux_005_src_endofpacket),                           //                .endofpacket
		.cp_channel              (cmd_mux_005_src_channel),                               //                .channel
		.rf_sink_ready           (lm96570_spi_out_0_s1_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (lm96570_spi_out_0_s1_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (lm96570_spi_out_0_s1_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (lm96570_spi_out_0_s1_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (lm96570_spi_out_0_s1_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (lm96570_spi_out_0_s1_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (lm96570_spi_out_0_s1_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (lm96570_spi_out_0_s1_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (lm96570_spi_out_0_s1_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (lm96570_spi_out_0_s1_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_005_out_0_ready),                     // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_005_out_0_valid),                     //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_005_out_0_data),                      //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_005_out_0_error),                     //                .error
		.rdata_fifo_src_ready    (lm96570_spi_out_0_s1_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (lm96570_spi_out_0_s1_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (lm96570_spi_out_0_s1_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                   //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (109),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) lm96570_spi_out_0_s1_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                         //       clk.clk
		.reset             (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),    // clk_reset.reset
		.in_data           (lm96570_spi_out_0_s1_agent_rf_source_data),             //        in.data
		.in_valid          (lm96570_spi_out_0_s1_agent_rf_source_valid),            //          .valid
		.in_ready          (lm96570_spi_out_0_s1_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (lm96570_spi_out_0_s1_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (lm96570_spi_out_0_s1_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (lm96570_spi_out_0_s1_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (lm96570_spi_out_0_s1_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (lm96570_spi_out_0_s1_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (lm96570_spi_out_0_s1_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (lm96570_spi_out_0_s1_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                 // (terminated)
		.csr_read          (1'b0),                                                  // (terminated)
		.csr_write         (1'b0),                                                  // (terminated)
		.csr_readdata      (),                                                      // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                  // (terminated)
		.almost_full_data  (),                                                      // (terminated)
		.almost_empty_data (),                                                      // (terminated)
		.in_empty          (1'b0),                                                  // (terminated)
		.out_empty         (),                                                      // (terminated)
		.in_error          (1'b0),                                                  // (terminated)
		.out_error         (),                                                      // (terminated)
		.in_channel        (1'b0),                                                  // (terminated)
		.out_channel       ()                                                       // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (107),
		.PKT_ORI_BURST_SIZE_L      (105),
		.PKT_RESPONSE_STATUS_H     (104),
		.PKT_RESPONSE_STATUS_L     (103),
		.PKT_BURST_SIZE_H          (80),
		.PKT_BURST_SIZE_L          (78),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (85),
		.PKT_PROTECTION_H          (98),
		.PKT_PROTECTION_L          (96),
		.PKT_BURSTWRAP_H           (77),
		.PKT_BURSTWRAP_L           (77),
		.PKT_BYTE_CNT_H            (76),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (90),
		.PKT_SRC_ID_L              (87),
		.PKT_DEST_ID_H             (94),
		.PKT_DEST_ID_L             (91),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (9),
		.ST_DATA_W                 (108),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) lm96570_spi_num_of_bits_s1_agent (
		.clk                     (clk_0_clk_clk),                                               //             clk.clk
		.reset                   (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),          //       clk_reset.reset
		.m0_address              (lm96570_spi_num_of_bits_s1_agent_m0_address),                 //              m0.address
		.m0_burstcount           (lm96570_spi_num_of_bits_s1_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (lm96570_spi_num_of_bits_s1_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (lm96570_spi_num_of_bits_s1_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (lm96570_spi_num_of_bits_s1_agent_m0_lock),                    //                .lock
		.m0_readdata             (lm96570_spi_num_of_bits_s1_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (lm96570_spi_num_of_bits_s1_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (lm96570_spi_num_of_bits_s1_agent_m0_read),                    //                .read
		.m0_waitrequest          (lm96570_spi_num_of_bits_s1_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (lm96570_spi_num_of_bits_s1_agent_m0_writedata),               //                .writedata
		.m0_write                (lm96570_spi_num_of_bits_s1_agent_m0_write),                   //                .write
		.rp_endofpacket          (lm96570_spi_num_of_bits_s1_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (lm96570_spi_num_of_bits_s1_agent_rp_ready),                   //                .ready
		.rp_valid                (lm96570_spi_num_of_bits_s1_agent_rp_valid),                   //                .valid
		.rp_data                 (lm96570_spi_num_of_bits_s1_agent_rp_data),                    //                .data
		.rp_startofpacket        (lm96570_spi_num_of_bits_s1_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_006_src_ready),                                       //              cp.ready
		.cp_valid                (cmd_mux_006_src_valid),                                       //                .valid
		.cp_data                 (cmd_mux_006_src_data),                                        //                .data
		.cp_startofpacket        (cmd_mux_006_src_startofpacket),                               //                .startofpacket
		.cp_endofpacket          (cmd_mux_006_src_endofpacket),                                 //                .endofpacket
		.cp_channel              (cmd_mux_006_src_channel),                                     //                .channel
		.rf_sink_ready           (lm96570_spi_num_of_bits_s1_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (lm96570_spi_num_of_bits_s1_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (lm96570_spi_num_of_bits_s1_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (lm96570_spi_num_of_bits_s1_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (lm96570_spi_num_of_bits_s1_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (lm96570_spi_num_of_bits_s1_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (lm96570_spi_num_of_bits_s1_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (lm96570_spi_num_of_bits_s1_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (lm96570_spi_num_of_bits_s1_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (lm96570_spi_num_of_bits_s1_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_006_out_0_ready),                           // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_006_out_0_valid),                           //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_006_out_0_data),                            //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_006_out_0_error),                           //                .error
		.rdata_fifo_src_ready    (lm96570_spi_num_of_bits_s1_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (lm96570_spi_num_of_bits_s1_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (lm96570_spi_num_of_bits_s1_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                       //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                         //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (109),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) lm96570_spi_num_of_bits_s1_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                               //       clk.clk
		.reset             (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),          // clk_reset.reset
		.in_data           (lm96570_spi_num_of_bits_s1_agent_rf_source_data),             //        in.data
		.in_valid          (lm96570_spi_num_of_bits_s1_agent_rf_source_valid),            //          .valid
		.in_ready          (lm96570_spi_num_of_bits_s1_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (lm96570_spi_num_of_bits_s1_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (lm96570_spi_num_of_bits_s1_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (lm96570_spi_num_of_bits_s1_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (lm96570_spi_num_of_bits_s1_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (lm96570_spi_num_of_bits_s1_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (lm96570_spi_num_of_bits_s1_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (lm96570_spi_num_of_bits_s1_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                       // (terminated)
		.csr_read          (1'b0),                                                        // (terminated)
		.csr_write         (1'b0),                                                        // (terminated)
		.csr_readdata      (),                                                            // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                        // (terminated)
		.almost_full_data  (),                                                            // (terminated)
		.almost_empty_data (),                                                            // (terminated)
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.in_error          (1'b0),                                                        // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_channel        (1'b0),                                                        // (terminated)
		.out_channel       ()                                                             // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (107),
		.PKT_ORI_BURST_SIZE_L      (105),
		.PKT_RESPONSE_STATUS_H     (104),
		.PKT_RESPONSE_STATUS_L     (103),
		.PKT_BURST_SIZE_H          (80),
		.PKT_BURST_SIZE_L          (78),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (85),
		.PKT_PROTECTION_H          (98),
		.PKT_PROTECTION_L          (96),
		.PKT_BURSTWRAP_H           (77),
		.PKT_BURSTWRAP_L           (77),
		.PKT_BYTE_CNT_H            (76),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (90),
		.PKT_SRC_ID_L              (87),
		.PKT_DEST_ID_H             (94),
		.PKT_DEST_ID_L             (91),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (9),
		.ST_DATA_W                 (108),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) general_cnt_s1_agent (
		.clk                     (clk_0_clk_clk),                                      //             clk.clk
		.reset                   (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), //       clk_reset.reset
		.m0_address              (general_cnt_s1_agent_m0_address),                    //              m0.address
		.m0_burstcount           (general_cnt_s1_agent_m0_burstcount),                 //                .burstcount
		.m0_byteenable           (general_cnt_s1_agent_m0_byteenable),                 //                .byteenable
		.m0_debugaccess          (general_cnt_s1_agent_m0_debugaccess),                //                .debugaccess
		.m0_lock                 (general_cnt_s1_agent_m0_lock),                       //                .lock
		.m0_readdata             (general_cnt_s1_agent_m0_readdata),                   //                .readdata
		.m0_readdatavalid        (general_cnt_s1_agent_m0_readdatavalid),              //                .readdatavalid
		.m0_read                 (general_cnt_s1_agent_m0_read),                       //                .read
		.m0_waitrequest          (general_cnt_s1_agent_m0_waitrequest),                //                .waitrequest
		.m0_writedata            (general_cnt_s1_agent_m0_writedata),                  //                .writedata
		.m0_write                (general_cnt_s1_agent_m0_write),                      //                .write
		.rp_endofpacket          (general_cnt_s1_agent_rp_endofpacket),                //              rp.endofpacket
		.rp_ready                (general_cnt_s1_agent_rp_ready),                      //                .ready
		.rp_valid                (general_cnt_s1_agent_rp_valid),                      //                .valid
		.rp_data                 (general_cnt_s1_agent_rp_data),                       //                .data
		.rp_startofpacket        (general_cnt_s1_agent_rp_startofpacket),              //                .startofpacket
		.cp_ready                (cmd_mux_007_src_ready),                              //              cp.ready
		.cp_valid                (cmd_mux_007_src_valid),                              //                .valid
		.cp_data                 (cmd_mux_007_src_data),                               //                .data
		.cp_startofpacket        (cmd_mux_007_src_startofpacket),                      //                .startofpacket
		.cp_endofpacket          (cmd_mux_007_src_endofpacket),                        //                .endofpacket
		.cp_channel              (cmd_mux_007_src_channel),                            //                .channel
		.rf_sink_ready           (general_cnt_s1_agent_rsp_fifo_out_ready),            //         rf_sink.ready
		.rf_sink_valid           (general_cnt_s1_agent_rsp_fifo_out_valid),            //                .valid
		.rf_sink_startofpacket   (general_cnt_s1_agent_rsp_fifo_out_startofpacket),    //                .startofpacket
		.rf_sink_endofpacket     (general_cnt_s1_agent_rsp_fifo_out_endofpacket),      //                .endofpacket
		.rf_sink_data            (general_cnt_s1_agent_rsp_fifo_out_data),             //                .data
		.rf_source_ready         (general_cnt_s1_agent_rf_source_ready),               //       rf_source.ready
		.rf_source_valid         (general_cnt_s1_agent_rf_source_valid),               //                .valid
		.rf_source_startofpacket (general_cnt_s1_agent_rf_source_startofpacket),       //                .startofpacket
		.rf_source_endofpacket   (general_cnt_s1_agent_rf_source_endofpacket),         //                .endofpacket
		.rf_source_data          (general_cnt_s1_agent_rf_source_data),                //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_007_out_0_ready),                  // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_007_out_0_valid),                  //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_007_out_0_data),                   //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_007_out_0_error),                  //                .error
		.rdata_fifo_src_ready    (general_cnt_s1_agent_rdata_fifo_src_ready),          //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (general_cnt_s1_agent_rdata_fifo_src_valid),          //                .valid
		.rdata_fifo_src_data     (general_cnt_s1_agent_rdata_fifo_src_data),           //                .data
		.m0_response             (2'b00),                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (109),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) general_cnt_s1_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                      //       clk.clk
		.reset             (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (general_cnt_s1_agent_rf_source_data),                //        in.data
		.in_valid          (general_cnt_s1_agent_rf_source_valid),               //          .valid
		.in_ready          (general_cnt_s1_agent_rf_source_ready),               //          .ready
		.in_startofpacket  (general_cnt_s1_agent_rf_source_startofpacket),       //          .startofpacket
		.in_endofpacket    (general_cnt_s1_agent_rf_source_endofpacket),         //          .endofpacket
		.out_data          (general_cnt_s1_agent_rsp_fifo_out_data),             //       out.data
		.out_valid         (general_cnt_s1_agent_rsp_fifo_out_valid),            //          .valid
		.out_ready         (general_cnt_s1_agent_rsp_fifo_out_ready),            //          .ready
		.out_startofpacket (general_cnt_s1_agent_rsp_fifo_out_startofpacket),    //          .startofpacket
		.out_endofpacket   (general_cnt_s1_agent_rsp_fifo_out_endofpacket),      //          .endofpacket
		.csr_address       (2'b00),                                              // (terminated)
		.csr_read          (1'b0),                                               // (terminated)
		.csr_write         (1'b0),                                               // (terminated)
		.csr_readdata      (),                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),               // (terminated)
		.almost_full_data  (),                                                   // (terminated)
		.almost_empty_data (),                                                   // (terminated)
		.in_empty          (1'b0),                                               // (terminated)
		.out_empty         (),                                                   // (terminated)
		.in_error          (1'b0),                                               // (terminated)
		.out_error         (),                                                   // (terminated)
		.in_channel        (1'b0),                                               // (terminated)
		.out_channel       ()                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (107),
		.PKT_ORI_BURST_SIZE_L      (105),
		.PKT_RESPONSE_STATUS_H     (104),
		.PKT_RESPONSE_STATUS_L     (103),
		.PKT_BURST_SIZE_H          (80),
		.PKT_BURST_SIZE_L          (78),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (85),
		.PKT_PROTECTION_H          (98),
		.PKT_PROTECTION_L          (96),
		.PKT_BURSTWRAP_H           (77),
		.PKT_BURSTWRAP_L           (77),
		.PKT_BYTE_CNT_H            (76),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (90),
		.PKT_SRC_ID_L              (87),
		.PKT_DEST_ID_H             (94),
		.PKT_DEST_ID_L             (91),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (9),
		.ST_DATA_W                 (108),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) ad9276_spi_spi_control_port_agent (
		.clk                     (clk_0_clk_clk),                                                //             clk.clk
		.reset                   (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),           //       clk_reset.reset
		.m0_address              (ad9276_spi_spi_control_port_agent_m0_address),                 //              m0.address
		.m0_burstcount           (ad9276_spi_spi_control_port_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (ad9276_spi_spi_control_port_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (ad9276_spi_spi_control_port_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (ad9276_spi_spi_control_port_agent_m0_lock),                    //                .lock
		.m0_readdata             (ad9276_spi_spi_control_port_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (ad9276_spi_spi_control_port_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (ad9276_spi_spi_control_port_agent_m0_read),                    //                .read
		.m0_waitrequest          (ad9276_spi_spi_control_port_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (ad9276_spi_spi_control_port_agent_m0_writedata),               //                .writedata
		.m0_write                (ad9276_spi_spi_control_port_agent_m0_write),                   //                .write
		.rp_endofpacket          (ad9276_spi_spi_control_port_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (ad9276_spi_spi_control_port_agent_rp_ready),                   //                .ready
		.rp_valid                (ad9276_spi_spi_control_port_agent_rp_valid),                   //                .valid
		.rp_data                 (ad9276_spi_spi_control_port_agent_rp_data),                    //                .data
		.rp_startofpacket        (ad9276_spi_spi_control_port_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_008_src_ready),                                        //              cp.ready
		.cp_valid                (cmd_mux_008_src_valid),                                        //                .valid
		.cp_data                 (cmd_mux_008_src_data),                                         //                .data
		.cp_startofpacket        (cmd_mux_008_src_startofpacket),                                //                .startofpacket
		.cp_endofpacket          (cmd_mux_008_src_endofpacket),                                  //                .endofpacket
		.cp_channel              (cmd_mux_008_src_channel),                                      //                .channel
		.rf_sink_ready           (ad9276_spi_spi_control_port_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (ad9276_spi_spi_control_port_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (ad9276_spi_spi_control_port_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (ad9276_spi_spi_control_port_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (ad9276_spi_spi_control_port_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (ad9276_spi_spi_control_port_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (ad9276_spi_spi_control_port_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (ad9276_spi_spi_control_port_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (ad9276_spi_spi_control_port_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (ad9276_spi_spi_control_port_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_008_out_0_ready),                            // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_008_out_0_valid),                            //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_008_out_0_data),                             //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_008_out_0_error),                            //                .error
		.rdata_fifo_src_ready    (ad9276_spi_spi_control_port_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (ad9276_spi_spi_control_port_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (ad9276_spi_spi_control_port_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                        //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                          //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (109),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) ad9276_spi_spi_control_port_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                //       clk.clk
		.reset             (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),           // clk_reset.reset
		.in_data           (ad9276_spi_spi_control_port_agent_rf_source_data),             //        in.data
		.in_valid          (ad9276_spi_spi_control_port_agent_rf_source_valid),            //          .valid
		.in_ready          (ad9276_spi_spi_control_port_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (ad9276_spi_spi_control_port_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (ad9276_spi_spi_control_port_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (ad9276_spi_spi_control_port_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (ad9276_spi_spi_control_port_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (ad9276_spi_spi_control_port_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (ad9276_spi_spi_control_port_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (ad9276_spi_spi_control_port_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                        // (terminated)
		.csr_read          (1'b0),                                                         // (terminated)
		.csr_write         (1'b0),                                                         // (terminated)
		.csr_readdata      (),                                                             // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                         // (terminated)
		.almost_full_data  (),                                                             // (terminated)
		.almost_empty_data (),                                                             // (terminated)
		.in_empty          (1'b0),                                                         // (terminated)
		.out_empty         (),                                                             // (terminated)
		.in_error          (1'b0),                                                         // (terminated)
		.out_error         (),                                                             // (terminated)
		.in_channel        (1'b0),                                                         // (terminated)
		.out_channel       ()                                                              // (terminated)
	);

	system_mm_interconnect_0_router router (
		.sink_ready         (master_0_master_agent_cp_ready),                     //      sink.ready
		.sink_valid         (master_0_master_agent_cp_valid),                     //          .valid
		.sink_data          (master_0_master_agent_cp_data),                      //          .data
		.sink_startofpacket (master_0_master_agent_cp_startofpacket),             //          .startofpacket
		.sink_endofpacket   (master_0_master_agent_cp_endofpacket),               //          .endofpacket
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_src_ready),                                   //       src.ready
		.src_valid          (router_src_valid),                                   //          .valid
		.src_data           (router_src_data),                                    //          .data
		.src_channel        (router_src_channel),                                 //          .channel
		.src_startofpacket  (router_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_src_endofpacket)                              //          .endofpacket
	);

	system_mm_interconnect_0_router_001 router_001 (
		.sink_ready         (lm96570_spi_in_2_s1_agent_rp_ready),                 //      sink.ready
		.sink_valid         (lm96570_spi_in_2_s1_agent_rp_valid),                 //          .valid
		.sink_data          (lm96570_spi_in_2_s1_agent_rp_data),                  //          .data
		.sink_startofpacket (lm96570_spi_in_2_s1_agent_rp_startofpacket),         //          .startofpacket
		.sink_endofpacket   (lm96570_spi_in_2_s1_agent_rp_endofpacket),           //          .endofpacket
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_001_src_ready),                               //       src.ready
		.src_valid          (router_001_src_valid),                               //          .valid
		.src_data           (router_001_src_data),                                //          .data
		.src_channel        (router_001_src_channel),                             //          .channel
		.src_startofpacket  (router_001_src_startofpacket),                       //          .startofpacket
		.src_endofpacket    (router_001_src_endofpacket)                          //          .endofpacket
	);

	system_mm_interconnect_0_router_001 router_002 (
		.sink_ready         (lm96570_spi_in_0_s1_agent_rp_ready),                 //      sink.ready
		.sink_valid         (lm96570_spi_in_0_s1_agent_rp_valid),                 //          .valid
		.sink_data          (lm96570_spi_in_0_s1_agent_rp_data),                  //          .data
		.sink_startofpacket (lm96570_spi_in_0_s1_agent_rp_startofpacket),         //          .startofpacket
		.sink_endofpacket   (lm96570_spi_in_0_s1_agent_rp_endofpacket),           //          .endofpacket
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_002_src_ready),                               //       src.ready
		.src_valid          (router_002_src_valid),                               //          .valid
		.src_data           (router_002_src_data),                                //          .data
		.src_channel        (router_002_src_channel),                             //          .channel
		.src_startofpacket  (router_002_src_startofpacket),                       //          .startofpacket
		.src_endofpacket    (router_002_src_endofpacket)                          //          .endofpacket
	);

	system_mm_interconnect_0_router_001 router_003 (
		.sink_ready         (lm96570_spi_in_1_s1_agent_rp_ready),                 //      sink.ready
		.sink_valid         (lm96570_spi_in_1_s1_agent_rp_valid),                 //          .valid
		.sink_data          (lm96570_spi_in_1_s1_agent_rp_data),                  //          .data
		.sink_startofpacket (lm96570_spi_in_1_s1_agent_rp_startofpacket),         //          .startofpacket
		.sink_endofpacket   (lm96570_spi_in_1_s1_agent_rp_endofpacket),           //          .endofpacket
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_003_src_ready),                               //       src.ready
		.src_valid          (router_003_src_valid),                               //          .valid
		.src_data           (router_003_src_data),                                //          .data
		.src_channel        (router_003_src_channel),                             //          .channel
		.src_startofpacket  (router_003_src_startofpacket),                       //          .startofpacket
		.src_endofpacket    (router_003_src_endofpacket)                          //          .endofpacket
	);

	system_mm_interconnect_0_router_001 router_004 (
		.sink_ready         (lm96570_spi_out_2_s1_agent_rp_ready),                //      sink.ready
		.sink_valid         (lm96570_spi_out_2_s1_agent_rp_valid),                //          .valid
		.sink_data          (lm96570_spi_out_2_s1_agent_rp_data),                 //          .data
		.sink_startofpacket (lm96570_spi_out_2_s1_agent_rp_startofpacket),        //          .startofpacket
		.sink_endofpacket   (lm96570_spi_out_2_s1_agent_rp_endofpacket),          //          .endofpacket
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_004_src_ready),                               //       src.ready
		.src_valid          (router_004_src_valid),                               //          .valid
		.src_data           (router_004_src_data),                                //          .data
		.src_channel        (router_004_src_channel),                             //          .channel
		.src_startofpacket  (router_004_src_startofpacket),                       //          .startofpacket
		.src_endofpacket    (router_004_src_endofpacket)                          //          .endofpacket
	);

	system_mm_interconnect_0_router_001 router_005 (
		.sink_ready         (lm96570_spi_out_1_s1_agent_rp_ready),                //      sink.ready
		.sink_valid         (lm96570_spi_out_1_s1_agent_rp_valid),                //          .valid
		.sink_data          (lm96570_spi_out_1_s1_agent_rp_data),                 //          .data
		.sink_startofpacket (lm96570_spi_out_1_s1_agent_rp_startofpacket),        //          .startofpacket
		.sink_endofpacket   (lm96570_spi_out_1_s1_agent_rp_endofpacket),          //          .endofpacket
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_005_src_ready),                               //       src.ready
		.src_valid          (router_005_src_valid),                               //          .valid
		.src_data           (router_005_src_data),                                //          .data
		.src_channel        (router_005_src_channel),                             //          .channel
		.src_startofpacket  (router_005_src_startofpacket),                       //          .startofpacket
		.src_endofpacket    (router_005_src_endofpacket)                          //          .endofpacket
	);

	system_mm_interconnect_0_router_001 router_006 (
		.sink_ready         (lm96570_spi_out_0_s1_agent_rp_ready),                //      sink.ready
		.sink_valid         (lm96570_spi_out_0_s1_agent_rp_valid),                //          .valid
		.sink_data          (lm96570_spi_out_0_s1_agent_rp_data),                 //          .data
		.sink_startofpacket (lm96570_spi_out_0_s1_agent_rp_startofpacket),        //          .startofpacket
		.sink_endofpacket   (lm96570_spi_out_0_s1_agent_rp_endofpacket),          //          .endofpacket
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_006_src_ready),                               //       src.ready
		.src_valid          (router_006_src_valid),                               //          .valid
		.src_data           (router_006_src_data),                                //          .data
		.src_channel        (router_006_src_channel),                             //          .channel
		.src_startofpacket  (router_006_src_startofpacket),                       //          .startofpacket
		.src_endofpacket    (router_006_src_endofpacket)                          //          .endofpacket
	);

	system_mm_interconnect_0_router_001 router_007 (
		.sink_ready         (lm96570_spi_num_of_bits_s1_agent_rp_ready),          //      sink.ready
		.sink_valid         (lm96570_spi_num_of_bits_s1_agent_rp_valid),          //          .valid
		.sink_data          (lm96570_spi_num_of_bits_s1_agent_rp_data),           //          .data
		.sink_startofpacket (lm96570_spi_num_of_bits_s1_agent_rp_startofpacket),  //          .startofpacket
		.sink_endofpacket   (lm96570_spi_num_of_bits_s1_agent_rp_endofpacket),    //          .endofpacket
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_007_src_ready),                               //       src.ready
		.src_valid          (router_007_src_valid),                               //          .valid
		.src_data           (router_007_src_data),                                //          .data
		.src_channel        (router_007_src_channel),                             //          .channel
		.src_startofpacket  (router_007_src_startofpacket),                       //          .startofpacket
		.src_endofpacket    (router_007_src_endofpacket)                          //          .endofpacket
	);

	system_mm_interconnect_0_router_001 router_008 (
		.sink_ready         (general_cnt_s1_agent_rp_ready),                      //      sink.ready
		.sink_valid         (general_cnt_s1_agent_rp_valid),                      //          .valid
		.sink_data          (general_cnt_s1_agent_rp_data),                       //          .data
		.sink_startofpacket (general_cnt_s1_agent_rp_startofpacket),              //          .startofpacket
		.sink_endofpacket   (general_cnt_s1_agent_rp_endofpacket),                //          .endofpacket
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_008_src_ready),                               //       src.ready
		.src_valid          (router_008_src_valid),                               //          .valid
		.src_data           (router_008_src_data),                                //          .data
		.src_channel        (router_008_src_channel),                             //          .channel
		.src_startofpacket  (router_008_src_startofpacket),                       //          .startofpacket
		.src_endofpacket    (router_008_src_endofpacket)                          //          .endofpacket
	);

	system_mm_interconnect_0_router_001 router_009 (
		.sink_ready         (ad9276_spi_spi_control_port_agent_rp_ready),         //      sink.ready
		.sink_valid         (ad9276_spi_spi_control_port_agent_rp_valid),         //          .valid
		.sink_data          (ad9276_spi_spi_control_port_agent_rp_data),          //          .data
		.sink_startofpacket (ad9276_spi_spi_control_port_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (ad9276_spi_spi_control_port_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_009_src_ready),                               //       src.ready
		.src_valid          (router_009_src_valid),                               //          .valid
		.src_data           (router_009_src_data),                                //          .data
		.src_channel        (router_009_src_channel),                             //          .channel
		.src_startofpacket  (router_009_src_startofpacket),                       //          .startofpacket
		.src_endofpacket    (router_009_src_endofpacket)                          //          .endofpacket
	);

	altera_merlin_traffic_limiter #(
		.PKT_DEST_ID_H             (94),
		.PKT_DEST_ID_L             (91),
		.PKT_SRC_ID_H              (90),
		.PKT_SRC_ID_L              (87),
		.PKT_BYTE_CNT_H            (76),
		.PKT_BYTE_CNT_L            (74),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.MAX_OUTSTANDING_RESPONSES (1),
		.PIPELINED                 (0),
		.ST_DATA_W                 (108),
		.ST_CHANNEL_W              (9),
		.VALID_WIDTH               (9),
		.ENFORCE_ORDER             (1),
		.PREVENT_HAZARDS           (0),
		.SUPPORTS_POSTED_WRITES    (1),
		.SUPPORTS_NONPOSTED_WRITES (0),
		.REORDER                   (0)
	) master_0_master_limiter (
		.clk                    (clk_0_clk_clk),                                      //       clk.clk
		.reset                  (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.cmd_sink_ready         (router_src_ready),                                   //  cmd_sink.ready
		.cmd_sink_valid         (router_src_valid),                                   //          .valid
		.cmd_sink_data          (router_src_data),                                    //          .data
		.cmd_sink_channel       (router_src_channel),                                 //          .channel
		.cmd_sink_startofpacket (router_src_startofpacket),                           //          .startofpacket
		.cmd_sink_endofpacket   (router_src_endofpacket),                             //          .endofpacket
		.cmd_src_ready          (master_0_master_limiter_cmd_src_ready),              //   cmd_src.ready
		.cmd_src_data           (master_0_master_limiter_cmd_src_data),               //          .data
		.cmd_src_channel        (master_0_master_limiter_cmd_src_channel),            //          .channel
		.cmd_src_startofpacket  (master_0_master_limiter_cmd_src_startofpacket),      //          .startofpacket
		.cmd_src_endofpacket    (master_0_master_limiter_cmd_src_endofpacket),        //          .endofpacket
		.rsp_sink_ready         (rsp_mux_src_ready),                                  //  rsp_sink.ready
		.rsp_sink_valid         (rsp_mux_src_valid),                                  //          .valid
		.rsp_sink_channel       (rsp_mux_src_channel),                                //          .channel
		.rsp_sink_data          (rsp_mux_src_data),                                   //          .data
		.rsp_sink_startofpacket (rsp_mux_src_startofpacket),                          //          .startofpacket
		.rsp_sink_endofpacket   (rsp_mux_src_endofpacket),                            //          .endofpacket
		.rsp_src_ready          (master_0_master_limiter_rsp_src_ready),              //   rsp_src.ready
		.rsp_src_valid          (master_0_master_limiter_rsp_src_valid),              //          .valid
		.rsp_src_data           (master_0_master_limiter_rsp_src_data),               //          .data
		.rsp_src_channel        (master_0_master_limiter_rsp_src_channel),            //          .channel
		.rsp_src_startofpacket  (master_0_master_limiter_rsp_src_startofpacket),      //          .startofpacket
		.rsp_src_endofpacket    (master_0_master_limiter_rsp_src_endofpacket),        //          .endofpacket
		.cmd_src_valid          (master_0_master_limiter_cmd_valid_data)              // cmd_valid.data
	);

	system_mm_interconnect_0_cmd_demux cmd_demux (
		.clk                (clk_0_clk_clk),                                      //        clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), //  clk_reset.reset
		.sink_ready         (master_0_master_limiter_cmd_src_ready),              //       sink.ready
		.sink_channel       (master_0_master_limiter_cmd_src_channel),            //           .channel
		.sink_data          (master_0_master_limiter_cmd_src_data),               //           .data
		.sink_startofpacket (master_0_master_limiter_cmd_src_startofpacket),      //           .startofpacket
		.sink_endofpacket   (master_0_master_limiter_cmd_src_endofpacket),        //           .endofpacket
		.sink_valid         (master_0_master_limiter_cmd_valid_data),             // sink_valid.data
		.src0_ready         (cmd_demux_src0_ready),                               //       src0.ready
		.src0_valid         (cmd_demux_src0_valid),                               //           .valid
		.src0_data          (cmd_demux_src0_data),                                //           .data
		.src0_channel       (cmd_demux_src0_channel),                             //           .channel
		.src0_startofpacket (cmd_demux_src0_startofpacket),                       //           .startofpacket
		.src0_endofpacket   (cmd_demux_src0_endofpacket),                         //           .endofpacket
		.src1_ready         (cmd_demux_src1_ready),                               //       src1.ready
		.src1_valid         (cmd_demux_src1_valid),                               //           .valid
		.src1_data          (cmd_demux_src1_data),                                //           .data
		.src1_channel       (cmd_demux_src1_channel),                             //           .channel
		.src1_startofpacket (cmd_demux_src1_startofpacket),                       //           .startofpacket
		.src1_endofpacket   (cmd_demux_src1_endofpacket),                         //           .endofpacket
		.src2_ready         (cmd_demux_src2_ready),                               //       src2.ready
		.src2_valid         (cmd_demux_src2_valid),                               //           .valid
		.src2_data          (cmd_demux_src2_data),                                //           .data
		.src2_channel       (cmd_demux_src2_channel),                             //           .channel
		.src2_startofpacket (cmd_demux_src2_startofpacket),                       //           .startofpacket
		.src2_endofpacket   (cmd_demux_src2_endofpacket),                         //           .endofpacket
		.src3_ready         (cmd_demux_src3_ready),                               //       src3.ready
		.src3_valid         (cmd_demux_src3_valid),                               //           .valid
		.src3_data          (cmd_demux_src3_data),                                //           .data
		.src3_channel       (cmd_demux_src3_channel),                             //           .channel
		.src3_startofpacket (cmd_demux_src3_startofpacket),                       //           .startofpacket
		.src3_endofpacket   (cmd_demux_src3_endofpacket),                         //           .endofpacket
		.src4_ready         (cmd_demux_src4_ready),                               //       src4.ready
		.src4_valid         (cmd_demux_src4_valid),                               //           .valid
		.src4_data          (cmd_demux_src4_data),                                //           .data
		.src4_channel       (cmd_demux_src4_channel),                             //           .channel
		.src4_startofpacket (cmd_demux_src4_startofpacket),                       //           .startofpacket
		.src4_endofpacket   (cmd_demux_src4_endofpacket),                         //           .endofpacket
		.src5_ready         (cmd_demux_src5_ready),                               //       src5.ready
		.src5_valid         (cmd_demux_src5_valid),                               //           .valid
		.src5_data          (cmd_demux_src5_data),                                //           .data
		.src5_channel       (cmd_demux_src5_channel),                             //           .channel
		.src5_startofpacket (cmd_demux_src5_startofpacket),                       //           .startofpacket
		.src5_endofpacket   (cmd_demux_src5_endofpacket),                         //           .endofpacket
		.src6_ready         (cmd_demux_src6_ready),                               //       src6.ready
		.src6_valid         (cmd_demux_src6_valid),                               //           .valid
		.src6_data          (cmd_demux_src6_data),                                //           .data
		.src6_channel       (cmd_demux_src6_channel),                             //           .channel
		.src6_startofpacket (cmd_demux_src6_startofpacket),                       //           .startofpacket
		.src6_endofpacket   (cmd_demux_src6_endofpacket),                         //           .endofpacket
		.src7_ready         (cmd_demux_src7_ready),                               //       src7.ready
		.src7_valid         (cmd_demux_src7_valid),                               //           .valid
		.src7_data          (cmd_demux_src7_data),                                //           .data
		.src7_channel       (cmd_demux_src7_channel),                             //           .channel
		.src7_startofpacket (cmd_demux_src7_startofpacket),                       //           .startofpacket
		.src7_endofpacket   (cmd_demux_src7_endofpacket),                         //           .endofpacket
		.src8_ready         (cmd_demux_src8_ready),                               //       src8.ready
		.src8_valid         (cmd_demux_src8_valid),                               //           .valid
		.src8_data          (cmd_demux_src8_data),                                //           .data
		.src8_channel       (cmd_demux_src8_channel),                             //           .channel
		.src8_startofpacket (cmd_demux_src8_startofpacket),                       //           .startofpacket
		.src8_endofpacket   (cmd_demux_src8_endofpacket)                          //           .endofpacket
	);

	system_mm_interconnect_0_cmd_mux cmd_mux (
		.clk                 (clk_0_clk_clk),                                      //       clk.clk
		.reset               (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_src_valid),                                  //          .valid
		.src_data            (cmd_mux_src_data),                                   //          .data
		.src_channel         (cmd_mux_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (cmd_demux_src0_ready),                               //     sink0.ready
		.sink0_valid         (cmd_demux_src0_valid),                               //          .valid
		.sink0_channel       (cmd_demux_src0_channel),                             //          .channel
		.sink0_data          (cmd_demux_src0_data),                                //          .data
		.sink0_startofpacket (cmd_demux_src0_startofpacket),                       //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src0_endofpacket)                          //          .endofpacket
	);

	system_mm_interconnect_0_cmd_mux cmd_mux_001 (
		.clk                 (clk_0_clk_clk),                                      //       clk.clk
		.reset               (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_001_src_ready),                              //       src.ready
		.src_valid           (cmd_mux_001_src_valid),                              //          .valid
		.src_data            (cmd_mux_001_src_data),                               //          .data
		.src_channel         (cmd_mux_001_src_channel),                            //          .channel
		.src_startofpacket   (cmd_mux_001_src_startofpacket),                      //          .startofpacket
		.src_endofpacket     (cmd_mux_001_src_endofpacket),                        //          .endofpacket
		.sink0_ready         (cmd_demux_src1_ready),                               //     sink0.ready
		.sink0_valid         (cmd_demux_src1_valid),                               //          .valid
		.sink0_channel       (cmd_demux_src1_channel),                             //          .channel
		.sink0_data          (cmd_demux_src1_data),                                //          .data
		.sink0_startofpacket (cmd_demux_src1_startofpacket),                       //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src1_endofpacket)                          //          .endofpacket
	);

	system_mm_interconnect_0_cmd_mux cmd_mux_002 (
		.clk                 (clk_0_clk_clk),                                      //       clk.clk
		.reset               (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_002_src_ready),                              //       src.ready
		.src_valid           (cmd_mux_002_src_valid),                              //          .valid
		.src_data            (cmd_mux_002_src_data),                               //          .data
		.src_channel         (cmd_mux_002_src_channel),                            //          .channel
		.src_startofpacket   (cmd_mux_002_src_startofpacket),                      //          .startofpacket
		.src_endofpacket     (cmd_mux_002_src_endofpacket),                        //          .endofpacket
		.sink0_ready         (cmd_demux_src2_ready),                               //     sink0.ready
		.sink0_valid         (cmd_demux_src2_valid),                               //          .valid
		.sink0_channel       (cmd_demux_src2_channel),                             //          .channel
		.sink0_data          (cmd_demux_src2_data),                                //          .data
		.sink0_startofpacket (cmd_demux_src2_startofpacket),                       //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src2_endofpacket)                          //          .endofpacket
	);

	system_mm_interconnect_0_cmd_mux cmd_mux_003 (
		.clk                 (clk_0_clk_clk),                                      //       clk.clk
		.reset               (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_003_src_ready),                              //       src.ready
		.src_valid           (cmd_mux_003_src_valid),                              //          .valid
		.src_data            (cmd_mux_003_src_data),                               //          .data
		.src_channel         (cmd_mux_003_src_channel),                            //          .channel
		.src_startofpacket   (cmd_mux_003_src_startofpacket),                      //          .startofpacket
		.src_endofpacket     (cmd_mux_003_src_endofpacket),                        //          .endofpacket
		.sink0_ready         (cmd_demux_src3_ready),                               //     sink0.ready
		.sink0_valid         (cmd_demux_src3_valid),                               //          .valid
		.sink0_channel       (cmd_demux_src3_channel),                             //          .channel
		.sink0_data          (cmd_demux_src3_data),                                //          .data
		.sink0_startofpacket (cmd_demux_src3_startofpacket),                       //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src3_endofpacket)                          //          .endofpacket
	);

	system_mm_interconnect_0_cmd_mux cmd_mux_004 (
		.clk                 (clk_0_clk_clk),                                      //       clk.clk
		.reset               (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_004_src_ready),                              //       src.ready
		.src_valid           (cmd_mux_004_src_valid),                              //          .valid
		.src_data            (cmd_mux_004_src_data),                               //          .data
		.src_channel         (cmd_mux_004_src_channel),                            //          .channel
		.src_startofpacket   (cmd_mux_004_src_startofpacket),                      //          .startofpacket
		.src_endofpacket     (cmd_mux_004_src_endofpacket),                        //          .endofpacket
		.sink0_ready         (cmd_demux_src4_ready),                               //     sink0.ready
		.sink0_valid         (cmd_demux_src4_valid),                               //          .valid
		.sink0_channel       (cmd_demux_src4_channel),                             //          .channel
		.sink0_data          (cmd_demux_src4_data),                                //          .data
		.sink0_startofpacket (cmd_demux_src4_startofpacket),                       //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src4_endofpacket)                          //          .endofpacket
	);

	system_mm_interconnect_0_cmd_mux cmd_mux_005 (
		.clk                 (clk_0_clk_clk),                                      //       clk.clk
		.reset               (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_005_src_ready),                              //       src.ready
		.src_valid           (cmd_mux_005_src_valid),                              //          .valid
		.src_data            (cmd_mux_005_src_data),                               //          .data
		.src_channel         (cmd_mux_005_src_channel),                            //          .channel
		.src_startofpacket   (cmd_mux_005_src_startofpacket),                      //          .startofpacket
		.src_endofpacket     (cmd_mux_005_src_endofpacket),                        //          .endofpacket
		.sink0_ready         (cmd_demux_src5_ready),                               //     sink0.ready
		.sink0_valid         (cmd_demux_src5_valid),                               //          .valid
		.sink0_channel       (cmd_demux_src5_channel),                             //          .channel
		.sink0_data          (cmd_demux_src5_data),                                //          .data
		.sink0_startofpacket (cmd_demux_src5_startofpacket),                       //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src5_endofpacket)                          //          .endofpacket
	);

	system_mm_interconnect_0_cmd_mux cmd_mux_006 (
		.clk                 (clk_0_clk_clk),                                      //       clk.clk
		.reset               (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_006_src_ready),                              //       src.ready
		.src_valid           (cmd_mux_006_src_valid),                              //          .valid
		.src_data            (cmd_mux_006_src_data),                               //          .data
		.src_channel         (cmd_mux_006_src_channel),                            //          .channel
		.src_startofpacket   (cmd_mux_006_src_startofpacket),                      //          .startofpacket
		.src_endofpacket     (cmd_mux_006_src_endofpacket),                        //          .endofpacket
		.sink0_ready         (cmd_demux_src6_ready),                               //     sink0.ready
		.sink0_valid         (cmd_demux_src6_valid),                               //          .valid
		.sink0_channel       (cmd_demux_src6_channel),                             //          .channel
		.sink0_data          (cmd_demux_src6_data),                                //          .data
		.sink0_startofpacket (cmd_demux_src6_startofpacket),                       //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src6_endofpacket)                          //          .endofpacket
	);

	system_mm_interconnect_0_cmd_mux cmd_mux_007 (
		.clk                 (clk_0_clk_clk),                                      //       clk.clk
		.reset               (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_007_src_ready),                              //       src.ready
		.src_valid           (cmd_mux_007_src_valid),                              //          .valid
		.src_data            (cmd_mux_007_src_data),                               //          .data
		.src_channel         (cmd_mux_007_src_channel),                            //          .channel
		.src_startofpacket   (cmd_mux_007_src_startofpacket),                      //          .startofpacket
		.src_endofpacket     (cmd_mux_007_src_endofpacket),                        //          .endofpacket
		.sink0_ready         (cmd_demux_src7_ready),                               //     sink0.ready
		.sink0_valid         (cmd_demux_src7_valid),                               //          .valid
		.sink0_channel       (cmd_demux_src7_channel),                             //          .channel
		.sink0_data          (cmd_demux_src7_data),                                //          .data
		.sink0_startofpacket (cmd_demux_src7_startofpacket),                       //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src7_endofpacket)                          //          .endofpacket
	);

	system_mm_interconnect_0_cmd_mux cmd_mux_008 (
		.clk                 (clk_0_clk_clk),                                      //       clk.clk
		.reset               (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_008_src_ready),                              //       src.ready
		.src_valid           (cmd_mux_008_src_valid),                              //          .valid
		.src_data            (cmd_mux_008_src_data),                               //          .data
		.src_channel         (cmd_mux_008_src_channel),                            //          .channel
		.src_startofpacket   (cmd_mux_008_src_startofpacket),                      //          .startofpacket
		.src_endofpacket     (cmd_mux_008_src_endofpacket),                        //          .endofpacket
		.sink0_ready         (cmd_demux_src8_ready),                               //     sink0.ready
		.sink0_valid         (cmd_demux_src8_valid),                               //          .valid
		.sink0_channel       (cmd_demux_src8_channel),                             //          .channel
		.sink0_data          (cmd_demux_src8_data),                                //          .data
		.sink0_startofpacket (cmd_demux_src8_startofpacket),                       //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src8_endofpacket)                          //          .endofpacket
	);

	system_mm_interconnect_0_rsp_demux rsp_demux (
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_001_src_ready),                               //      sink.ready
		.sink_channel       (router_001_src_channel),                             //          .channel
		.sink_data          (router_001_src_data),                                //          .data
		.sink_startofpacket (router_001_src_startofpacket),                       //          .startofpacket
		.sink_endofpacket   (router_001_src_endofpacket),                         //          .endofpacket
		.sink_valid         (router_001_src_valid),                               //          .valid
		.src0_ready         (rsp_demux_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_src0_data),                                //          .data
		.src0_channel       (rsp_demux_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_src0_endofpacket)                          //          .endofpacket
	);

	system_mm_interconnect_0_rsp_demux rsp_demux_001 (
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_002_src_ready),                               //      sink.ready
		.sink_channel       (router_002_src_channel),                             //          .channel
		.sink_data          (router_002_src_data),                                //          .data
		.sink_startofpacket (router_002_src_startofpacket),                       //          .startofpacket
		.sink_endofpacket   (router_002_src_endofpacket),                         //          .endofpacket
		.sink_valid         (router_002_src_valid),                               //          .valid
		.src0_ready         (rsp_demux_001_src0_ready),                           //      src0.ready
		.src0_valid         (rsp_demux_001_src0_valid),                           //          .valid
		.src0_data          (rsp_demux_001_src0_data),                            //          .data
		.src0_channel       (rsp_demux_001_src0_channel),                         //          .channel
		.src0_startofpacket (rsp_demux_001_src0_startofpacket),                   //          .startofpacket
		.src0_endofpacket   (rsp_demux_001_src0_endofpacket)                      //          .endofpacket
	);

	system_mm_interconnect_0_rsp_demux rsp_demux_002 (
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_003_src_ready),                               //      sink.ready
		.sink_channel       (router_003_src_channel),                             //          .channel
		.sink_data          (router_003_src_data),                                //          .data
		.sink_startofpacket (router_003_src_startofpacket),                       //          .startofpacket
		.sink_endofpacket   (router_003_src_endofpacket),                         //          .endofpacket
		.sink_valid         (router_003_src_valid),                               //          .valid
		.src0_ready         (rsp_demux_002_src0_ready),                           //      src0.ready
		.src0_valid         (rsp_demux_002_src0_valid),                           //          .valid
		.src0_data          (rsp_demux_002_src0_data),                            //          .data
		.src0_channel       (rsp_demux_002_src0_channel),                         //          .channel
		.src0_startofpacket (rsp_demux_002_src0_startofpacket),                   //          .startofpacket
		.src0_endofpacket   (rsp_demux_002_src0_endofpacket)                      //          .endofpacket
	);

	system_mm_interconnect_0_rsp_demux rsp_demux_003 (
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_004_src_ready),                               //      sink.ready
		.sink_channel       (router_004_src_channel),                             //          .channel
		.sink_data          (router_004_src_data),                                //          .data
		.sink_startofpacket (router_004_src_startofpacket),                       //          .startofpacket
		.sink_endofpacket   (router_004_src_endofpacket),                         //          .endofpacket
		.sink_valid         (router_004_src_valid),                               //          .valid
		.src0_ready         (rsp_demux_003_src0_ready),                           //      src0.ready
		.src0_valid         (rsp_demux_003_src0_valid),                           //          .valid
		.src0_data          (rsp_demux_003_src0_data),                            //          .data
		.src0_channel       (rsp_demux_003_src0_channel),                         //          .channel
		.src0_startofpacket (rsp_demux_003_src0_startofpacket),                   //          .startofpacket
		.src0_endofpacket   (rsp_demux_003_src0_endofpacket)                      //          .endofpacket
	);

	system_mm_interconnect_0_rsp_demux rsp_demux_004 (
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_005_src_ready),                               //      sink.ready
		.sink_channel       (router_005_src_channel),                             //          .channel
		.sink_data          (router_005_src_data),                                //          .data
		.sink_startofpacket (router_005_src_startofpacket),                       //          .startofpacket
		.sink_endofpacket   (router_005_src_endofpacket),                         //          .endofpacket
		.sink_valid         (router_005_src_valid),                               //          .valid
		.src0_ready         (rsp_demux_004_src0_ready),                           //      src0.ready
		.src0_valid         (rsp_demux_004_src0_valid),                           //          .valid
		.src0_data          (rsp_demux_004_src0_data),                            //          .data
		.src0_channel       (rsp_demux_004_src0_channel),                         //          .channel
		.src0_startofpacket (rsp_demux_004_src0_startofpacket),                   //          .startofpacket
		.src0_endofpacket   (rsp_demux_004_src0_endofpacket)                      //          .endofpacket
	);

	system_mm_interconnect_0_rsp_demux rsp_demux_005 (
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_006_src_ready),                               //      sink.ready
		.sink_channel       (router_006_src_channel),                             //          .channel
		.sink_data          (router_006_src_data),                                //          .data
		.sink_startofpacket (router_006_src_startofpacket),                       //          .startofpacket
		.sink_endofpacket   (router_006_src_endofpacket),                         //          .endofpacket
		.sink_valid         (router_006_src_valid),                               //          .valid
		.src0_ready         (rsp_demux_005_src0_ready),                           //      src0.ready
		.src0_valid         (rsp_demux_005_src0_valid),                           //          .valid
		.src0_data          (rsp_demux_005_src0_data),                            //          .data
		.src0_channel       (rsp_demux_005_src0_channel),                         //          .channel
		.src0_startofpacket (rsp_demux_005_src0_startofpacket),                   //          .startofpacket
		.src0_endofpacket   (rsp_demux_005_src0_endofpacket)                      //          .endofpacket
	);

	system_mm_interconnect_0_rsp_demux rsp_demux_006 (
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_007_src_ready),                               //      sink.ready
		.sink_channel       (router_007_src_channel),                             //          .channel
		.sink_data          (router_007_src_data),                                //          .data
		.sink_startofpacket (router_007_src_startofpacket),                       //          .startofpacket
		.sink_endofpacket   (router_007_src_endofpacket),                         //          .endofpacket
		.sink_valid         (router_007_src_valid),                               //          .valid
		.src0_ready         (rsp_demux_006_src0_ready),                           //      src0.ready
		.src0_valid         (rsp_demux_006_src0_valid),                           //          .valid
		.src0_data          (rsp_demux_006_src0_data),                            //          .data
		.src0_channel       (rsp_demux_006_src0_channel),                         //          .channel
		.src0_startofpacket (rsp_demux_006_src0_startofpacket),                   //          .startofpacket
		.src0_endofpacket   (rsp_demux_006_src0_endofpacket)                      //          .endofpacket
	);

	system_mm_interconnect_0_rsp_demux rsp_demux_007 (
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_008_src_ready),                               //      sink.ready
		.sink_channel       (router_008_src_channel),                             //          .channel
		.sink_data          (router_008_src_data),                                //          .data
		.sink_startofpacket (router_008_src_startofpacket),                       //          .startofpacket
		.sink_endofpacket   (router_008_src_endofpacket),                         //          .endofpacket
		.sink_valid         (router_008_src_valid),                               //          .valid
		.src0_ready         (rsp_demux_007_src0_ready),                           //      src0.ready
		.src0_valid         (rsp_demux_007_src0_valid),                           //          .valid
		.src0_data          (rsp_demux_007_src0_data),                            //          .data
		.src0_channel       (rsp_demux_007_src0_channel),                         //          .channel
		.src0_startofpacket (rsp_demux_007_src0_startofpacket),                   //          .startofpacket
		.src0_endofpacket   (rsp_demux_007_src0_endofpacket)                      //          .endofpacket
	);

	system_mm_interconnect_0_rsp_demux rsp_demux_008 (
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_009_src_ready),                               //      sink.ready
		.sink_channel       (router_009_src_channel),                             //          .channel
		.sink_data          (router_009_src_data),                                //          .data
		.sink_startofpacket (router_009_src_startofpacket),                       //          .startofpacket
		.sink_endofpacket   (router_009_src_endofpacket),                         //          .endofpacket
		.sink_valid         (router_009_src_valid),                               //          .valid
		.src0_ready         (rsp_demux_008_src0_ready),                           //      src0.ready
		.src0_valid         (rsp_demux_008_src0_valid),                           //          .valid
		.src0_data          (rsp_demux_008_src0_data),                            //          .data
		.src0_channel       (rsp_demux_008_src0_channel),                         //          .channel
		.src0_startofpacket (rsp_demux_008_src0_startofpacket),                   //          .startofpacket
		.src0_endofpacket   (rsp_demux_008_src0_endofpacket)                      //          .endofpacket
	);

	system_mm_interconnect_0_rsp_mux rsp_mux (
		.clk                 (clk_0_clk_clk),                                      //       clk.clk
		.reset               (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_src_ready),                                  //       src.ready
		.src_valid           (rsp_mux_src_valid),                                  //          .valid
		.src_data            (rsp_mux_src_data),                                   //          .data
		.src_channel         (rsp_mux_src_channel),                                //          .channel
		.src_startofpacket   (rsp_mux_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (rsp_mux_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (rsp_demux_src0_ready),                               //     sink0.ready
		.sink0_valid         (rsp_demux_src0_valid),                               //          .valid
		.sink0_channel       (rsp_demux_src0_channel),                             //          .channel
		.sink0_data          (rsp_demux_src0_data),                                //          .data
		.sink0_startofpacket (rsp_demux_src0_startofpacket),                       //          .startofpacket
		.sink0_endofpacket   (rsp_demux_src0_endofpacket),                         //          .endofpacket
		.sink1_ready         (rsp_demux_001_src0_ready),                           //     sink1.ready
		.sink1_valid         (rsp_demux_001_src0_valid),                           //          .valid
		.sink1_channel       (rsp_demux_001_src0_channel),                         //          .channel
		.sink1_data          (rsp_demux_001_src0_data),                            //          .data
		.sink1_startofpacket (rsp_demux_001_src0_startofpacket),                   //          .startofpacket
		.sink1_endofpacket   (rsp_demux_001_src0_endofpacket),                     //          .endofpacket
		.sink2_ready         (rsp_demux_002_src0_ready),                           //     sink2.ready
		.sink2_valid         (rsp_demux_002_src0_valid),                           //          .valid
		.sink2_channel       (rsp_demux_002_src0_channel),                         //          .channel
		.sink2_data          (rsp_demux_002_src0_data),                            //          .data
		.sink2_startofpacket (rsp_demux_002_src0_startofpacket),                   //          .startofpacket
		.sink2_endofpacket   (rsp_demux_002_src0_endofpacket),                     //          .endofpacket
		.sink3_ready         (rsp_demux_003_src0_ready),                           //     sink3.ready
		.sink3_valid         (rsp_demux_003_src0_valid),                           //          .valid
		.sink3_channel       (rsp_demux_003_src0_channel),                         //          .channel
		.sink3_data          (rsp_demux_003_src0_data),                            //          .data
		.sink3_startofpacket (rsp_demux_003_src0_startofpacket),                   //          .startofpacket
		.sink3_endofpacket   (rsp_demux_003_src0_endofpacket),                     //          .endofpacket
		.sink4_ready         (rsp_demux_004_src0_ready),                           //     sink4.ready
		.sink4_valid         (rsp_demux_004_src0_valid),                           //          .valid
		.sink4_channel       (rsp_demux_004_src0_channel),                         //          .channel
		.sink4_data          (rsp_demux_004_src0_data),                            //          .data
		.sink4_startofpacket (rsp_demux_004_src0_startofpacket),                   //          .startofpacket
		.sink4_endofpacket   (rsp_demux_004_src0_endofpacket),                     //          .endofpacket
		.sink5_ready         (rsp_demux_005_src0_ready),                           //     sink5.ready
		.sink5_valid         (rsp_demux_005_src0_valid),                           //          .valid
		.sink5_channel       (rsp_demux_005_src0_channel),                         //          .channel
		.sink5_data          (rsp_demux_005_src0_data),                            //          .data
		.sink5_startofpacket (rsp_demux_005_src0_startofpacket),                   //          .startofpacket
		.sink5_endofpacket   (rsp_demux_005_src0_endofpacket),                     //          .endofpacket
		.sink6_ready         (rsp_demux_006_src0_ready),                           //     sink6.ready
		.sink6_valid         (rsp_demux_006_src0_valid),                           //          .valid
		.sink6_channel       (rsp_demux_006_src0_channel),                         //          .channel
		.sink6_data          (rsp_demux_006_src0_data),                            //          .data
		.sink6_startofpacket (rsp_demux_006_src0_startofpacket),                   //          .startofpacket
		.sink6_endofpacket   (rsp_demux_006_src0_endofpacket),                     //          .endofpacket
		.sink7_ready         (rsp_demux_007_src0_ready),                           //     sink7.ready
		.sink7_valid         (rsp_demux_007_src0_valid),                           //          .valid
		.sink7_channel       (rsp_demux_007_src0_channel),                         //          .channel
		.sink7_data          (rsp_demux_007_src0_data),                            //          .data
		.sink7_startofpacket (rsp_demux_007_src0_startofpacket),                   //          .startofpacket
		.sink7_endofpacket   (rsp_demux_007_src0_endofpacket),                     //          .endofpacket
		.sink8_ready         (rsp_demux_008_src0_ready),                           //     sink8.ready
		.sink8_valid         (rsp_demux_008_src0_valid),                           //          .valid
		.sink8_channel       (rsp_demux_008_src0_channel),                         //          .channel
		.sink8_data          (rsp_demux_008_src0_data),                            //          .data
		.sink8_startofpacket (rsp_demux_008_src0_startofpacket),                   //          .startofpacket
		.sink8_endofpacket   (rsp_demux_008_src0_endofpacket)                      //          .endofpacket
	);

	system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter (
		.in_clk_0_clk   (clk_0_clk_clk),                                      // in_clk_0.clk
		.in_rst_0_reset (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (lm96570_spi_in_2_s1_agent_rdata_fifo_src_data),      //     in_0.data
		.in_0_valid     (lm96570_spi_in_2_s1_agent_rdata_fifo_src_valid),     //         .valid
		.in_0_ready     (lm96570_spi_in_2_s1_agent_rdata_fifo_src_ready),     //         .ready
		.out_0_data     (avalon_st_adapter_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_out_0_error)                       //         .error
	);

	system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_001 (
		.in_clk_0_clk   (clk_0_clk_clk),                                      // in_clk_0.clk
		.in_rst_0_reset (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (lm96570_spi_in_0_s1_agent_rdata_fifo_src_data),      //     in_0.data
		.in_0_valid     (lm96570_spi_in_0_s1_agent_rdata_fifo_src_valid),     //         .valid
		.in_0_ready     (lm96570_spi_in_0_s1_agent_rdata_fifo_src_ready),     //         .ready
		.out_0_data     (avalon_st_adapter_001_out_0_data),                   //    out_0.data
		.out_0_valid    (avalon_st_adapter_001_out_0_valid),                  //         .valid
		.out_0_ready    (avalon_st_adapter_001_out_0_ready),                  //         .ready
		.out_0_error    (avalon_st_adapter_001_out_0_error)                   //         .error
	);

	system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_002 (
		.in_clk_0_clk   (clk_0_clk_clk),                                      // in_clk_0.clk
		.in_rst_0_reset (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (lm96570_spi_in_1_s1_agent_rdata_fifo_src_data),      //     in_0.data
		.in_0_valid     (lm96570_spi_in_1_s1_agent_rdata_fifo_src_valid),     //         .valid
		.in_0_ready     (lm96570_spi_in_1_s1_agent_rdata_fifo_src_ready),     //         .ready
		.out_0_data     (avalon_st_adapter_002_out_0_data),                   //    out_0.data
		.out_0_valid    (avalon_st_adapter_002_out_0_valid),                  //         .valid
		.out_0_ready    (avalon_st_adapter_002_out_0_ready),                  //         .ready
		.out_0_error    (avalon_st_adapter_002_out_0_error)                   //         .error
	);

	system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_003 (
		.in_clk_0_clk   (clk_0_clk_clk),                                      // in_clk_0.clk
		.in_rst_0_reset (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (lm96570_spi_out_2_s1_agent_rdata_fifo_src_data),     //     in_0.data
		.in_0_valid     (lm96570_spi_out_2_s1_agent_rdata_fifo_src_valid),    //         .valid
		.in_0_ready     (lm96570_spi_out_2_s1_agent_rdata_fifo_src_ready),    //         .ready
		.out_0_data     (avalon_st_adapter_003_out_0_data),                   //    out_0.data
		.out_0_valid    (avalon_st_adapter_003_out_0_valid),                  //         .valid
		.out_0_ready    (avalon_st_adapter_003_out_0_ready),                  //         .ready
		.out_0_error    (avalon_st_adapter_003_out_0_error)                   //         .error
	);

	system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_004 (
		.in_clk_0_clk   (clk_0_clk_clk),                                      // in_clk_0.clk
		.in_rst_0_reset (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (lm96570_spi_out_1_s1_agent_rdata_fifo_src_data),     //     in_0.data
		.in_0_valid     (lm96570_spi_out_1_s1_agent_rdata_fifo_src_valid),    //         .valid
		.in_0_ready     (lm96570_spi_out_1_s1_agent_rdata_fifo_src_ready),    //         .ready
		.out_0_data     (avalon_st_adapter_004_out_0_data),                   //    out_0.data
		.out_0_valid    (avalon_st_adapter_004_out_0_valid),                  //         .valid
		.out_0_ready    (avalon_st_adapter_004_out_0_ready),                  //         .ready
		.out_0_error    (avalon_st_adapter_004_out_0_error)                   //         .error
	);

	system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_005 (
		.in_clk_0_clk   (clk_0_clk_clk),                                      // in_clk_0.clk
		.in_rst_0_reset (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (lm96570_spi_out_0_s1_agent_rdata_fifo_src_data),     //     in_0.data
		.in_0_valid     (lm96570_spi_out_0_s1_agent_rdata_fifo_src_valid),    //         .valid
		.in_0_ready     (lm96570_spi_out_0_s1_agent_rdata_fifo_src_ready),    //         .ready
		.out_0_data     (avalon_st_adapter_005_out_0_data),                   //    out_0.data
		.out_0_valid    (avalon_st_adapter_005_out_0_valid),                  //         .valid
		.out_0_ready    (avalon_st_adapter_005_out_0_ready),                  //         .ready
		.out_0_error    (avalon_st_adapter_005_out_0_error)                   //         .error
	);

	system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_006 (
		.in_clk_0_clk   (clk_0_clk_clk),                                         // in_clk_0.clk
		.in_rst_0_reset (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),    // in_rst_0.reset
		.in_0_data      (lm96570_spi_num_of_bits_s1_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (lm96570_spi_num_of_bits_s1_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (lm96570_spi_num_of_bits_s1_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_006_out_0_data),                      //    out_0.data
		.out_0_valid    (avalon_st_adapter_006_out_0_valid),                     //         .valid
		.out_0_ready    (avalon_st_adapter_006_out_0_ready),                     //         .ready
		.out_0_error    (avalon_st_adapter_006_out_0_error)                      //         .error
	);

	system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_007 (
		.in_clk_0_clk   (clk_0_clk_clk),                                      // in_clk_0.clk
		.in_rst_0_reset (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (general_cnt_s1_agent_rdata_fifo_src_data),           //     in_0.data
		.in_0_valid     (general_cnt_s1_agent_rdata_fifo_src_valid),          //         .valid
		.in_0_ready     (general_cnt_s1_agent_rdata_fifo_src_ready),          //         .ready
		.out_0_data     (avalon_st_adapter_007_out_0_data),                   //    out_0.data
		.out_0_valid    (avalon_st_adapter_007_out_0_valid),                  //         .valid
		.out_0_ready    (avalon_st_adapter_007_out_0_ready),                  //         .ready
		.out_0_error    (avalon_st_adapter_007_out_0_error)                   //         .error
	);

	system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_008 (
		.in_clk_0_clk   (clk_0_clk_clk),                                          // in_clk_0.clk
		.in_rst_0_reset (lm96570_spi_in_2_reset_reset_bridge_in_reset_reset),     // in_rst_0.reset
		.in_0_data      (ad9276_spi_spi_control_port_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (ad9276_spi_spi_control_port_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (ad9276_spi_spi_control_port_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_008_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_008_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_008_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_008_out_0_error)                       //         .error
	);

endmodule
